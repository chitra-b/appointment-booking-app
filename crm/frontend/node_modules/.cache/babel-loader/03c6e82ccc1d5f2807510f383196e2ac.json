{"ast":null,"code":"import api from '../../../apiurl';\nimport { tokenConfig } from \"../usermanagement/auth\";\nimport { message } from 'antd';\nimport { USERS_DELETED, USERS_DELETE_ERROR, USERS_DELETING, USER_DELETED_LIST } from \"../../types\";\nexport const deleteUsers = useridList => (dispatch, getState) => {\n  dispatch({\n    type: USERS_DELETING\n  });\n  api.delete(\"/users/delete/\", {\n    headers: tokenConfig(getState).headers,\n    data: {\n      users: useridList\n    }\n  }).then(res => {\n    message.success('User deleted successfully');\n    dispatch({\n      type: USERS_DELETED\n    });\n    dispatch({\n      type: USER_DELETED_LIST,\n      payload: useridList\n    });\n  }).catch(err => {\n    let err_msg = \"\";\n\n    if (\"detail\" in err.response.data) {\n      err_msg = err.response.data.detail;\n    } else {\n      for (var key in err.response.data) {\n        err_msg += err.response.data[key];\n      }\n    }\n\n    dispatch({\n      type: USERS_DELETE_ERROR,\n      payload: err_msg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/accounts/usermanagement/deleteusers.js"],"names":["api","tokenConfig","message","USERS_DELETED","USERS_DELETE_ERROR","USERS_DELETING","USER_DELETED_LIST","deleteUsers","useridList","dispatch","getState","type","delete","headers","data","users","then","res","success","payload","catch","err","err_msg","response","detail","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SACIC,aADJ,EAEIC,kBAFJ,EAGIC,cAHJ,EAIIC,iBAJJ,QAKS,aALT;AAQE,OAAO,MAAMC,WAAW,GAAIC,UAAD,IAAgB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAL,EAAAA,GAAG,CACAY,MADH,CACU,gBADV,EAC4B;AAACC,IAAAA,OAAO,EAAEZ,WAAW,CAACS,QAAD,CAAX,CAAsBG,OAAhC;AAC1BC,IAAAA,IAAI,EAAC;AAACC,MAAAA,KAAK,EAACP;AAAP;AADqB,GAD5B,EAIGQ,IAJH,CAIQC,GAAG,IAAI;AACXf,IAAAA,OAAO,CAACgB,OAAR,CAAgB,2BAAhB;AACAT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGAM,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,iBAAR;AAA2Ba,MAAAA,OAAO,EAAEX;AAApC,KAAD,CAAR;AACD,GAVH,EAWGY,KAXH,CAWSC,GAAG,IAAI;AACZ,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,YAAYD,GAAG,CAACE,QAAJ,CAAaT,IAA7B,EAAmC;AACjCQ,MAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAaT,IAAb,CAAkBU,MAA5B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACE,QAAJ,CAAaT,IAA7B,EAAmC;AACjCQ,QAAAA,OAAO,IAAID,GAAG,CAACE,QAAJ,CAAaT,IAAb,CAAkBW,GAAlB,CAAX;AACD;AACF;;AACDhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,kBADC;AAEPe,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAxBH;AAyBD,CA3BM","sourcesContent":["import api from '../../../apiurl'\nimport { tokenConfig } from \"../usermanagement/auth\";\nimport { message } from 'antd';\nimport {\n    USERS_DELETED,\n    USERS_DELETE_ERROR,\n    USERS_DELETING,\n    USER_DELETED_LIST\n  } from \"../../types\";\n\n  \n  export const deleteUsers = (useridList) => (dispatch, getState) => {\n    dispatch({ type: USERS_DELETING });\n    api\n      .delete(\"/users/delete/\", {headers: tokenConfig(getState).headers,\n      data:{users:useridList}\n      })\n      .then(res => {\n        message.success('User deleted successfully');\n        dispatch({\n          type: USERS_DELETED\n        });\n        dispatch({ type: USER_DELETED_LIST, payload: useridList });\n      })\n      .catch(err => {\n        let err_msg = \"\";\n        if (\"detail\" in err.response.data) {\n          err_msg = err.response.data.detail;\n        } else {\n          for (var key in err.response.data) {\n            err_msg += err.response.data[key];\n          }\n        }\n        dispatch({\n          type: USERS_DELETE_ERROR,\n          payload: err_msg\n        });\n      });\n  };"]},"metadata":{},"sourceType":"module"}