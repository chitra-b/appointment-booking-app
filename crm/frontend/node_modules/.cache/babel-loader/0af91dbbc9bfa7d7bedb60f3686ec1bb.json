{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/common/search-select-users.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport api from \"../../apiurl\";\nimport { Select, Spin, Empty } from 'antd';\nimport querystring from 'querystring';\nimport { tokenConfig } from \"./../../actions/accounts/usermanagement/auth\";\nimport { store } from '../../index.js';\nconst Option = Select.Option;\nlet timeout;\n\nfunction fetch(value, callback) {\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = null;\n  } //currentValue = value;\n\n\n  function fake() {\n    const str = querystring.encode({\n      code: 'utf-8',\n      q: value\n    });\n    api.get(\"http://127.0.0.1:8000/api/v1/users/?\".concat(str), tokenConfig(store.getState)).then(res => {\n      const data = [];\n      res.data.results.forEach(r => {\n        data.push({\n          value: r[\"username\"],\n          text: r[\"username\"]\n        });\n      });\n      callback(data);\n    });\n  }\n\n  timeout = setTimeout(fake, 300);\n}\n\nexport class SearchSelectUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.props.selectedUser) {\n        this.setState({\n          value: this.props.selectedUser\n        });\n      }\n    };\n\n    this.handleSearch = value => {\n      if (value) {\n        this.setState({\n          fetching: true\n        });\n        fetch(value, data => {\n          this.setState({\n            data\n          });\n          this.setState({\n            fetching: false\n          });\n        });\n      } else {\n        this.setState({\n          data: []\n        });\n      }\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        value\n      });\n\n      if (this.props.getSelectedUser) {\n        this.props.getSelectedUser(value);\n      }\n    };\n\n    this.state = {\n      data: [],\n      value: undefined,\n      fetching: false\n    };\n  }\n\n  render() {\n    const options = this.state.data.map(d => React.createElement(Option, {\n      key: d.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, d.text));\n    return React.createElement(Select, {\n      showSearch: true,\n      value: this.state.value,\n      placeholder: \"Type username to search\",\n      defaultActiveFirstOption: true,\n      showArrow: false,\n      filterOption: false,\n      onSearch: this.handleSearch,\n      onChange: this.handleChange,\n      notFoundContent: this.state.fetching ? React.createElement(Spin, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }) : React.createElement(Empty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, options);\n  }\n\n}","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/common/search-select-users.js"],"names":["React","Fragment","connect","api","Select","Spin","Empty","querystring","tokenConfig","store","Option","timeout","fetch","value","callback","clearTimeout","fake","str","encode","code","q","get","getState","then","res","data","results","forEach","r","push","text","setTimeout","SearchSelectUsers","Component","constructor","props","componentDidMount","selectedUser","setState","handleSearch","fetching","handleChange","getSelectedUser","state","undefined","render","options","map","d"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport api from \"../../apiurl\";\nimport { Select, Spin, Empty } from 'antd';\nimport querystring from 'querystring';\nimport { tokenConfig } from \"./../../actions/accounts/usermanagement/auth\";\nimport { store } from '../../index.js';\n\nconst { Option } = Select;\n\nlet timeout;\n\nfunction fetch(value, callback) {\n    if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n    }\n    //currentValue = value;\n\n    function fake() {\n        const str = querystring.encode({\n            code: 'utf-8',\n            q: value,\n        });\n        api\n            .get(`http://127.0.0.1:8000/api/v1/users/?${str}`, tokenConfig(store.getState))\n            .then(res => {\n                const data = [];\n                res.data.results.forEach(r => {\n                    data.push({\n                        value: r[\"username\"],\n                        text: r[\"username\"],\n                    });\n                });\n                callback(data);\n            });\n    }\n\n    timeout = setTimeout(fake, 300);\n}\n\nexport class SearchSelectUsers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            value: undefined,\n            fetching: false\n        };\n        \n    }\n    componentDidMount = () =>{\n        if(this.props.selectedUser){\n            this.setState({value : this.props.selectedUser});\n        }\n    }\n    handleSearch = value => {\n        if (value) {\n            this.setState({ fetching: true });\n            fetch(value, data => {\n                this.setState({ data });\n                this.setState({ fetching: false });\n            });\n        } else {\n            this.setState({ data: [] });\n        }\n\n    };\n\n    handleChange = value => {\n        this.setState({ value });\n        if(this.props.getSelectedUser){\n            this.props.getSelectedUser(value);\n        }\n    };\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>);\n        return (\n            <Select\n                showSearch\n                value={this.state.value}\n                placeholder=\"Type username to search\"\n                defaultActiveFirstOption={true}\n                showArrow={false}\n                filterOption={false}\n                onSearch={this.handleSearch}\n                onChange={this.handleChange}\n                notFoundContent={this.state.fetching ? <Spin size=\"small\" /> : <Empty />}\n            >\n                {options}\n            </Select>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}