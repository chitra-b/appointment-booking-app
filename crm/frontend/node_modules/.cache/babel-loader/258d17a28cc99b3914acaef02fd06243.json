{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadUser, login } from \"../actions/accounts/usermanagement/auth\";\nimport { loadUserProfile } from \"../actions/accounts/myprofilemanagement/getprofile\";\nimport { Alert, Layout, Form, Icon, Input, Button, Checkbox, Row, Col } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\nconst Header = Layout.Header,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\nexport class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.login(this.state.username, this.state.password);\n        }\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      this.props.loadUserProfile();\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"content-container\",\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 16,\n      md: 12,\n      lg: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.isError ? React.createElement(Alert, {\n      message: \"Login Failed\",\n      description: \"Invalid username or password\",\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      size: \"large\",\n      name: \"username\",\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Password!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      size: \"large\",\n      name: \"password\",\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Forgot password\"), this.props.isLoading ? React.createElement(Button, {\n      type: \"primary\",\n      size: \"large\",\n      className: \"login-form-button\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Button, {\n      type: \"primary\",\n      size: \"large\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Log in\")), React.createElement(DjangoCSRFToken, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  token: state.auth.token,\n  isError: state.auth.isError\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  loadUserProfile\n})(Login);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/login.js"],"names":["React","Component","connect","loadUser","login","loadUserProfile","Alert","Layout","Form","Icon","Input","Button","Checkbox","Row","Col","Redirect","DjangoCSRFToken","Header","Footer","Sider","Content","Login","state","username","password","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onChange","setState","target","name","value","render","isAuthenticated","getFieldDecorator","isError","rules","required","message","color","isLoading","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadUser, login } from \"../actions/accounts/usermanagement/auth\";\nimport { loadUserProfile } from \"../actions/accounts/myprofilemanagement/getprofile\";\nimport {\n  Alert,\n  Layout,\n  Form,\n  Icon,\n  Input,\n  Button,\n  Checkbox,\n  Row,\n  Col\n} from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport class Login extends Component {\n  // componentWillMount() {\n  //   this.props.loadUserProfile();\n  // }\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.login(this.state.username, this.state.password);\n      }\n    });\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    if (this.props.isAuthenticated) {\n      this.props.loadUserProfile();\n      return <Redirect to=\"/\" />;\n    }\n    const { username, password } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Layout>\n        <Content>\n          <Row\n            className=\"content-container\"\n            type=\"flex\"\n            justify=\"center\"\n            align=\"middle\"\n          >\n            <Col xs={24} sm={16} md={12} lg={8}>\n              {this.props.isError ? (\n                <Alert\n                  message=\"Login Failed\"\n                  description=\"Invalid username or password\"\n                  type=\"error\"\n                  closable\n                />\n              ) : (\n                <span />\n              )}\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                  {getFieldDecorator(\"username\", {\n                    rules: [\n                      { required: true, message: \"Please input your username!\" }\n                    ]\n                  })(\n                    <Input\n                      onChange={this.onChange}\n                      size=\"large\"\n                      name=\"username\"\n                      prefix={\n                        <Icon\n                          type=\"user\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      placeholder=\"Username\"\n                    />\n                  )}\n                </Form.Item>\n                <Form.Item>\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      { required: true, message: \"Please input your Password!\" }\n                    ]\n                  })(\n                    <Input\n                      onChange={this.onChange}\n                      size=\"large\"\n                      name=\"password\"\n                      prefix={\n                        <Icon\n                          type=\"lock\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      type=\"password\"\n                      placeholder=\"Password\"\n                    />\n                  )}\n                </Form.Item>\n                <Form.Item>\n                  {/* {getFieldDecorator('remember', {\n                                                valuePropName: 'checked',\n                                                initialValue: true,\n                                            })(<Checkbox>Remember me</Checkbox>)} */}\n                  <a className=\"login-form-forgot\" href=\"\">\n                    Forgot password\n                  </a>\n                  {this.props.isLoading ? (\n                    <Button\n                      type=\"primary\"\n                      size=\"large\"\n                      className=\"login-form-button\"\n                      loading\n                    >\n                      Loading\n                    </Button>\n                  ) : (\n                    <Button\n                      type=\"primary\"\n                      size=\"large\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                    >\n                      Log in\n                    </Button>\n                  )}\n                </Form.Item>\n                <DjangoCSRFToken />\n              </Form>\n            </Col>\n          </Row>\n        </Content>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  token: state.auth.token,\n  isError: state.auth.isError\n});\nexport default connect(\n  mapStateToProps,\n  { login, loadUserProfile }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}