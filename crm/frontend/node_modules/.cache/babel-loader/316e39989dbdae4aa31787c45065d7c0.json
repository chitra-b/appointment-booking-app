{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/cancelappointment.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateappointment } from \"../../actions/appointment/updateappointment\";\nimport { reset } from \"../../actions/common\";\nimport { RESET_UPDATE_APPOINTMENT_STATE } from \"../../actions/types\";\nimport { Button, Input, Alert, Empty } from \"antd\";\nconst TextArea = Input.TextArea;\n\nclass CancelAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        appointmentId: this.props.id\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let data = {\n        \"cancelled\": true,\n        \"cancellation_reason\": this.state.cancellation_reason\n      };\n      this.props.updateappointment(this.state.appointmentId, data);\n    };\n\n    this.props.reset(RESET_UPDATE_APPOINTMENT_STATE);\n    this.state = {\n      appointmentId: null,\n      cancellation_reason: ''\n    };\n  }\n\n  render() {\n    if (!this.state.appointmentId) {\n      return React.createElement(Empty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.updateAppointment.isError ? React.createElement(Alert, {\n      message: \"Error\",\n      description: this.props.updateAppointment.isError,\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"cancel-form-item\",\n      htmlFor: \"cancellation_reason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Enter cancellation reason\")), React.createElement(TextArea, {\n      name: \"cancellation_reason\",\n      autosize: {\n        minRows: 2,\n        maxRows: 6\n      },\n      value: this.state.cancellation_reason,\n      onChange: this.handleChange,\n      className: \"cancel-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), this.props.updateAppointment.isLoading ? React.createElement(Button, {\n      type: \"primary\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Button, {\n      type: \"primary\",\n      className: \"cancel-form-item\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  updateAppointment: state.updateAppointment\n});\n\nexport default connect(mapStateToProps, {\n  updateappointment,\n  reset\n})(CancelAppointment);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/cancelappointment.js"],"names":["React","Fragment","connect","updateappointment","reset","RESET_UPDATE_APPOINTMENT_STATE","Button","Input","Alert","Empty","TextArea","CancelAppointment","Component","constructor","props","componentDidMount","setState","appointmentId","id","handleChange","event","target","name","value","handleSubmit","e","preventDefault","data","state","cancellation_reason","render","updateAppointment","isError","minRows","maxRows","isLoading","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,6CAAlC;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SACIC,8BADJ,QAEO,qBAFP;AAGA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,KAHJ,EAIIC,KAJJ,QAKO,MALP;MAMQC,Q,GAAaH,K,CAAbG,Q;;AAER,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,iBALmB,GAKC,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI;AAA5B,OAAd;AACH,KAPkB;;AAAA,SAQnBC,YARmB,GAQHC,KAAD,IAAW;AACtB,WAAKJ,QAAL,CAAc;AAAE,SAACI,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAApC,OAAd;AACH,KAVkB;;AAAA,SAWnBC,YAXmB,GAWJC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAG;AAAE,qBAAa,IAAf;AAAqB,+BAAuB,KAAKC,KAAL,CAAWC;AAAvD,OAAX;AACA,WAAKf,KAAL,CAAWX,iBAAX,CAA6B,KAAKyB,KAAL,CAAWX,aAAxC,EAAuDU,IAAvD;AACH,KAfkB;;AAEf,SAAKb,KAAL,CAAWV,KAAX,CAAiBC,8BAAjB;AACA,SAAKuB,KAAL,GAAa;AAAEX,MAAAA,aAAa,EAAE,IAAjB;AAAuBY,MAAAA,mBAAmB,EAAE;AAA5C,KAAb;AACH;;AAaDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAE,KAAKF,KAAL,CAAWX,aAAjB,EAAgC;AAC5B,aAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWiB,iBAAX,CAA6BC,OAA7B,GAAuC,oBAAC,KAAD;AACpC,MAAA,OAAO,EAAC,OAD4B;AAEpC,MAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWiB,iBAAX,CAA6BC,OAFN;AAGpC,MAAA,IAAI,EAAC,OAH+B;AAIpC,MAAA,QAAQ,MAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,GAKI,IANT,EAOI;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAGI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,qBADT;AAEI,MAAA,QAAQ,EAAE;AAAES,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAFd;AAGI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,mBAHtB;AAII,MAAA,QAAQ,EAAE,KAAKV,YAJnB;AAKI,MAAA,SAAS,EAAC,kBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAUK,KAAKL,KAAL,CAAWiB,iBAAX,CAA6BI,SAA7B,GAAyC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAzC,GACK,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,SAAS,EAAC,kBAAjC;AAAoD,MAAA,QAAQ,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXV,CAPJ,CADJ;AAuBH;;AA7C2C;;AAgDhD,MAAMC,eAAe,GAAGR,KAAK,KAAK;AAC9BG,EAAAA,iBAAiB,EAAEH,KAAK,CAACG;AADK,CAAL,CAA7B;;AAGA,eAAe7B,OAAO,CAACkC,eAAD,EAAkB;AAAEjC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAlB,CAAP,CAAuDO,iBAAvD,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateappointment } from \"../../actions/appointment/updateappointment\"\nimport { reset } from \"../../actions/common\";\nimport {\n    RESET_UPDATE_APPOINTMENT_STATE\n} from \"../../actions/types\";\nimport {\n    Button,\n    Input,\n    Alert,\n    Empty\n} from \"antd\";\nconst { TextArea } = Input;\n\nclass CancelAppointment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.reset(RESET_UPDATE_APPOINTMENT_STATE);\n        this.state = { appointmentId: null, cancellation_reason: '' }\n    }\n    componentDidMount = () => {\n        this.setState({ appointmentId: this.props.id });\n    }\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        let data = { \"cancelled\": true, \"cancellation_reason\": this.state.cancellation_reason }\n        this.props.updateappointment(this.state.appointmentId, data);\n    };\n\n    render() {\n        if (! this.state.appointmentId) {\n            return <Empty />;\n        }\n        return (\n            <div className=\"content-section\">\n                {this.props.updateAppointment.isError ? <Alert\n                    message=\"Error\"\n                    description={this.props.updateAppointment.isError}\n                    type=\"error\"\n                    closable\n                /> : null}\n                <form onSubmit={this.handleSubmit} >\n                    <label className=\"cancel-form-item\" htmlFor=\"cancellation_reason\">\n                        <b>Enter cancellation reason</b></label>\n                    <TextArea\n                        name=\"cancellation_reason\"\n                        autosize={{ minRows: 2, maxRows: 6 }}\n                        value={this.state.cancellation_reason}\n                        onChange={this.handleChange}\n                        className=\"cancel-form-item\"\n                    />\n                    {this.props.updateAppointment.isLoading ? <Button type=\"primary\" loading>Loading</Button>\n                        : <Button type=\"primary\" className=\"cancel-form-item\" htmlType=\"submit\" >Submit</Button>}\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    updateAppointment: state.updateAppointment\n});\nexport default connect(mapStateToProps, { updateappointment, reset })(CancelAppointment)"]},"metadata":{},"sourceType":"module"}