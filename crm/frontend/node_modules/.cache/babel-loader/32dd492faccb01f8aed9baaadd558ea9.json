{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/user.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../actions/accounts/usermanagement/createuser\";\nimport { loadUserProfile } from \"../actions/accounts/myprofilemanagement/getprofile\";\nimport { updateProfile } from \"../actions/accounts/myprofilemanagement/updateprofile\";\nimport { fetchUser, getUsers } from \"../actions/accounts/usermanagement/fetchuser\";\nimport { updateUser } from \"../actions/accounts/usermanagement/updateuser\";\nimport { deleteUsers } from \"../actions/accounts/usermanagement/deleteusers\";\nimport { reset } from \"../actions/common\";\nimport { loadRoles } from \"../actions/common\";\nimport UserPreferenceForm from \"./userpreference\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\nimport { responsiveDrawerWidth, isMobile } from \"../actions/types\";\nimport { PageHeader, Skeleton, Modal, Menu, Pagination, Dropdown, Checkbox, Drawer, Descriptions, Tabs, Alert, Form, Icon, Input, Button, Spin, Row, Col, Select } from \"antd\";\nconst Option = Select.Option;\nconst TabPane = Tabs.TabPane;\n\nclass UserDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        values.groups = [values.groups];\n\n        if (!err) {\n          if (this.props.updateUserDetails) {\n            this.props.updateUser(this.props.userData.id, values);\n          } else if (this.props.updateUserProfile) {\n            this.props.updateProfile(this.props.userData.id, values);\n          } else {\n            this.props.createUser(values);\n          }\n        }\n      });\n    };\n\n    this.onChange = e => {\n      this.setState(this.props.form.getFieldsValue());\n    };\n  }\n\n  componentWillMount() {\n    this.props.loadRoles();\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    let roleItems = this.props.role.roles ? this.props.role.roles.map(value => React.createElement(Option, {\n      key: value.id,\n      value: value.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, value.name)) : null;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"userdetails-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      initialValue: this.props.userData ? this.props.userData.username : null,\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      gutter: 16,\n      type: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 16,\n      md: 12,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, getFieldDecorator(\"first_name\", {\n      initialValue: this.props.userData ? this.props.userData.first_name : null,\n      rules: [{\n        required: true,\n        message: \"Please input your firstname!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 16,\n      md: 12,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, getFieldDecorator(\"last_name\", {\n      initialValue: this.props.userData ? this.props.userData.last_name : \"\"\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      initialValue: this.props.userData ? this.props.userData.email : null,\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        required: true,\n        message: \"Please input your E-mail!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), this.props.showPassword ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Confirm Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, getFieldDecorator(\"confirm\", {\n      rules: [{\n        required: true,\n        message: \"Please confirm your password!\"\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })))) : null, React.createElement(Form.Item, {\n      label: \"Mobile Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, getFieldDecorator(\"user_mobile_number\", {\n      initialValue: this.props.userData ? this.props.userData.user_mobile_number : null,\n      rules: [{\n        required: true,\n        message: \"Please input your mobile number!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, getFieldDecorator(\"groups\", {\n      initialValue: this.props.userData ? this.props.userData.groups.id : null,\n      rules: [{\n        required: true,\n        message: \"Please select Role!\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Select Role\",\n      onChange: this.onChange,\n      loading: this.props.role.isRolesLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, roleItems))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.props.createUserData.isLoading || this.props.updateUserData.isUpdating ? React.createElement(Button, {\n      type: \"primary\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        display: \"inline\"\n      },\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.props.updateUserDetails ? \"Save\" : \"Submit\"), this.props.createUserData.isError ? React.createElement(Alert, {\n      style: {\n        display: \"inline-block\"\n      },\n      message: \"Registration Failed\",\n      description: this.props.createUserData.isError,\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }) : null, this.props.updateUserData.isUpdateError ? React.createElement(Alert, {\n      style: {\n        display: \"inline-block\"\n      },\n      message: \"Update Failed\",\n      description: this.props.updateUserData.isUpdateError,\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }) : null)), React.createElement(DjangoCSRFToken, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport class AddUser extends Component {\n  render() {\n    return React.createElement(UserDetailsApp, {\n      loadUserDetails: false,\n      showPassword: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass UserProfile extends Component {\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"Profile\",\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 18,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(UserDetailsApp, {\n      userData: this.props.myProfile.user,\n      updateUserProfile: true,\n      showPassword: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })))), this.props.hideUserPref ? null : React.createElement(TabPane, {\n      tab: \"Preferences\",\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 18,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(UserPreferenceForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport class UserList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      selectedUserList: [],\n      currentPage: 1\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.editUser = (userid, e) => {\n      this.showDrawer();\n      this.props.fetchUser(userid);\n    };\n\n    this.pageChange = e => {\n      this.props.getUsers(e);\n      this.setState({\n        currentPage: e\n      });\n    };\n\n    this.loadUserList = () => {\n      this.onClose();\n    };\n\n    this.onUserselect = userid => {\n      let ul = this.state.selectedUserList;\n\n      if (ul.indexOf(userid) < 0) {\n        ul.push(userid);\n      } else {\n        ul.splice(ul.indexOf(userid), 1);\n      }\n\n      this.setState({\n        selectedUserList: ul\n      });\n      this.props.getSelectedUsers(this.state.selectedUserList);\n    };\n\n    this.userlist = () => {\n      return this.props.getUsersData.userlist ? this.props.getUsersData.userlist.map(value => React.createElement(\"div\", {\n        key: value.id,\n        onClick: e => this.onUserselect(value.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Descriptions, {\n        className: \"user-list\",\n        key: value.id,\n        title: React.createElement(Checkbox, {\n          checked: this.state.selectedUserList.indexOf(value.id) < 0 ? false : true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, value.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Descriptions.Item, {\n        label: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, value.first_name + \" \" + value.last_name), React.createElement(Descriptions.Item, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, value.email), React.createElement(Descriptions.Item, {\n        label: \"Role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, value.groups.name), React.createElement(Descriptions.Item, {\n        className: \"align-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"link\",\n        onClick: e => {\n          e.stopPropagation();\n          this.editUser(value.id, e);\n        },\n        icon: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Edit\"))))) : null;\n    };\n  }\n\n  componentWillMount() {\n    this.props.getUsers();\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, this.props.getUsersData.isLoading ? React.createElement(Spin, {\n      tip: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, this.userlist(), React.createElement(Pagination, {\n      hideOnSinglePage: true,\n      current: this.state.currentPage,\n      onChange: this.pageChange,\n      defaultPageSize: 10,\n      total: this.props.getUsersData.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), React.createElement(Drawer, {\n      width: responsiveDrawerWidth,\n      title: \"Update user\",\n      onClose: this.onClose,\n      visible: this.state.visible,\n      destroyOnClose: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, this.props.fetchUserData.isLoading ? React.createElement(Spin, {\n      tip: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }) : React.createElement(UserDetailsApp, {\n      userData: this.props.fetchUserData.user,\n      updateUserDetails: true,\n      showPassword: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass Users extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      drawerVisible: false,\n      selectedUserList: [],\n      errorModalVisible: false\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        drawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        drawerVisible: false\n      });\n    };\n\n    this.onDelete = () => {\n      this.props.deleteUsers(this.state.selectedUserList);\n    };\n\n    this.getSelectedUsers = userList => {\n      this.setState({\n        selectedUserList: userList\n      });\n    };\n\n    this.showDeleteConfirm = ele => {\n      Modal.confirm({\n        title: \"Are you sure delete user(s)?\",\n        okText: \"Yes\",\n        okType: \"danger\",\n        cancelText: \"No\",\n\n        onOk() {\n          ele.onDelete();\n        }\n\n      });\n    };\n\n    this.handleOk = () => {\n      Modal.destroyAll();\n      this.setState({\n        errorModalVisible: false\n      });\n    };\n  }\n\n  render() {\n    const mobileActionMenu = React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showDrawer,\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), \"Add User\")), React.createElement(Menu.Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), React.createElement(Menu.Item, {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: e => this.showDeleteConfirm(this),\n      icon: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Delete\")));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, this.props.deleteUsersData.isDeleting ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"Info\",\n      okButtonProps: {\n        hidden: true\n      },\n      cancelButtonProps: {\n        hidden: true\n      },\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, \"Deleting...\")) : null, this.props.deleteUsersData.isDeleteError ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      message: this.props.deleteUsersData.isDeleteError,\n      closable: true,\n      type: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    })) : null, React.createElement(PageHeader, {\n      className: \"align-right page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      overlay: mobileActionMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Actions \", React.createElement(Icon, {\n      type: \"down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    })))) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.showDrawer,\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }), \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, \"Add User\")), React.createElement(Button, {\n      onClick: e => this.showDeleteConfirm(this),\n      type: \"link\",\n      icon: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"Delete\")))), React.createElement(Drawer, {\n      width: responsiveDrawerWidth,\n      title: \"Create a new account\",\n      onClose: this.onClose,\n      visible: this.state.drawerVisible,\n      destroyOnClose: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(AddUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    })), React.createElement(UserListApp, {\n      getSelectedUsers: this.getSelectedUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  createUserData: state.createUser,\n  updateUserData: state.updateUser,\n  role: state.common,\n  auth: state.auth,\n  myProfile: state.myProfile\n});\n\nconst UserDetailsForm = Form.create({\n  name: \"UserDetails\"\n})(UserDetails);\nconst UserDetailsApp = connect(mapStateToProps, {\n  createUser,\n  loadRoles,\n  fetchUser,\n  getUsers,\n  updateUser,\n  updateProfile,\n  reset\n})(UserDetailsForm);\n\nconst mapStateToPropsUserList = state => ({\n  getUsersData: state.getUsers,\n  fetchUserData: state.fetchUser\n});\n\nconst UserListApp = connect(mapStateToPropsUserList, {\n  getUsers,\n  fetchUser\n})(UserList);\n\nconst mapStateToPropsUserProfile = state => ({\n  auth: state.auth,\n  myProfile: state.myProfile\n});\n\nexport const UserProfileApp = connect(mapStateToPropsUserProfile, {\n  loadUserProfile\n})(UserProfile);\n\nconst mapStateToPropsUsers = state => ({\n  deleteUsersData: state.deleteUsers\n});\n\nexport default connect(mapStateToPropsUsers, {\n  deleteUsers\n})(Users);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/user.js"],"names":["React","Component","Fragment","connect","createUser","loadUserProfile","updateProfile","fetchUser","getUsers","updateUser","deleteUsers","reset","loadRoles","UserPreferenceForm","DjangoCSRFToken","responsiveDrawerWidth","isMobile","PageHeader","Skeleton","Modal","Menu","Pagination","Dropdown","Checkbox","Drawer","Descriptions","Tabs","Alert","Form","Icon","Input","Button","Spin","Row","Col","Select","Option","TabPane","UserDetails","state","confirmDirty","compareToFirstPassword","rule","value","callback","form","props","getFieldValue","validateToNextPassword","validateFields","force","handleSubmit","e","preventDefault","err","values","groups","updateUserDetails","userData","id","updateUserProfile","onChange","setState","getFieldsValue","componentWillMount","render","getFieldDecorator","roleItems","role","roles","map","name","initialValue","username","rules","required","message","first_name","last_name","email","type","showPassword","validator","handleConfirmBlur","user_mobile_number","isRolesLoading","createUserData","isLoading","updateUserData","isUpdating","display","isError","isUpdateError","AddUser","UserProfile","myProfile","user","hideUserPref","UserList","visible","selectedUserList","currentPage","showDrawer","onClose","editUser","userid","pageChange","loadUserList","onUserselect","ul","indexOf","push","splice","getSelectedUsers","userlist","getUsersData","stopPropagation","count","fetchUserData","Users","drawerVisible","errorModalVisible","onDelete","userList","showDeleteConfirm","ele","confirm","title","okText","okType","cancelText","onOk","handleOk","destroyAll","mobileActionMenu","deleteUsersData","isDeleting","hidden","isDeleteError","mapStateToProps","common","auth","UserDetailsForm","create","UserDetailsApp","mapStateToPropsUserList","UserListApp","mapStateToPropsUserProfile","UserProfileApp","mapStateToPropsUsers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,+CAA3B;AACA,SAASC,eAAT,QAAgC,oDAAhC;AACA,SAASC,aAAT,QAA8B,uDAA9B;AACA,SACEC,SADF,EAEEC,QAFF,QAGO,8CAHP;AAIA,SACEC,UADF,QAEO,+CAFP;AAGA,SAASC,WAAT,QAA4B,gDAA5B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,SAASC,qBAAT,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,QAPF,EAQEC,MARF,EASEC,YATF,EAUEC,IAVF,EAWEC,KAXF,EAYEC,IAZF,EAaEC,IAbF,EAcEC,KAdF,EAeEC,MAfF,EAgBEC,IAhBF,EAiBEC,GAjBF,EAkBEC,GAlBF,EAmBEC,MAnBF,QAoBO,MApBP;MAqBQC,M,GAAWD,M,CAAXC,M;MACAC,O,GAAYX,I,CAAZW,O;;AAIR,MAAMC,WAAN,SAA0BtC,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAKxCsC,KALwC,GAKhC;AACNC,MAAAA,YAAY,EAAE;AADR,KALgC;;AAAA,SASxCC,sBATwC,GASf,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AAAA,YAC1CC,IAD0C,GACjC,KAAKC,KAD4B,CAC1CD,IAD0C;;AAElD,UAAIF,KAAK,IAAIA,KAAK,KAAKE,IAAI,CAACE,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDH,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ;AACT;AACF,KAhBuC;;AAAA,SAkBxCI,sBAlBwC,GAkBf,CAACN,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AAAA,YAC1CC,IAD0C,GACjC,KAAKC,KAD4B,CAC1CD,IAD0C;;AAElD,UAAIF,KAAK,IAAI,KAAKJ,KAAL,CAAWC,YAAxB,EAAsC;AACpCK,QAAAA,IAAI,CAACI,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAjC;AACD;;AACDN,MAAAA,QAAQ;AACT,KAxBuC;;AAAA,SAyBxCO,YAzBwC,GAyBzBC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKP,KAAL,CAAWD,IAAX,CAAgBI,cAAhB,CAA+B,CAACK,GAAD,EAAMC,MAAN,KAAiB;AAC9CA,QAAAA,MAAM,CAACC,MAAP,GAAgB,CAACD,MAAM,CAACC,MAAR,CAAhB;;AACA,YAAI,CAACF,GAAL,EAAU;AACR,cAAI,KAAKR,KAAL,CAAWW,iBAAf,EAAkC;AAChC,iBAAKX,KAAL,CAAWrC,UAAX,CAAsB,KAAKqC,KAAL,CAAWY,QAAX,CAAoBC,EAA1C,EAA8CJ,MAA9C;AACD,WAFD,MAEO,IAAI,KAAKT,KAAL,CAAWc,iBAAf,EAAkC;AACvC,iBAAKd,KAAL,CAAWxC,aAAX,CAAyB,KAAKwC,KAAL,CAAWY,QAAX,CAAoBC,EAA7C,EAAiDJ,MAAjD;AACD,WAFM,MAEA;AACL,iBAAKT,KAAL,CAAW1C,UAAX,CAAsBmD,MAAtB;AACD;AACF;AACF,OAXD;AAYD,KAvCuC;;AAAA,SAyCxCM,QAzCwC,GAyC7BT,CAAC,IAAI;AACd,WAAKU,QAAL,CAAc,KAAKhB,KAAL,CAAWD,IAAX,CAAgBkB,cAAhB,EAAd;AACD,KA3CuC;AAAA;;AACxCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKlB,KAAL,CAAWlC,SAAX;AACD;;AA0CDqD,EAAAA,MAAM,GAAG;AAAA,UACCC,iBADD,GACuB,KAAKpB,KAAL,CAAWD,IADlC,CACCqB,iBADD;AAGP,QAAIC,SAAS,GAAG,KAAKrB,KAAL,CAAWsB,IAAX,CAAgBC,KAAhB,GACZ,KAAKvB,KAAL,CAAWsB,IAAX,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B3B,KAAK,IAC7B,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAACgB,EAAnB;AAAuB,MAAA,KAAK,EAAEhB,KAAK,CAACgB,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,KAAK,CAAC4B,IADT,CADF,CADY,GAMZ,IANJ;AAOA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAmC,MAAA,SAAS,EAAC,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,iBAAiB,CAAC,UAAD,EAAa;AAC7BM,MAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWY,QAAX,GACV,KAAKZ,KAAL,CAAWY,QAAX,CAAoBe,QADV,GAEV,IAHyB;AAI7BC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OADK;AAJsB,KAAb,CAAjB,CAOE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKf,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADH,CADF,EAWE,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,iBAAiB,CAAC,YAAD,EAAe;AAC/BM,MAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWY,QAAX,GACV,KAAKZ,KAAL,CAAWY,QAAX,CAAoBmB,UADV,GAEV,IAH2B;AAI/BH,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAJwB,KAAf,CAAjB,CAUE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKf,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADH,CADF,CADF,EAgBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,iBAAiB,CAAC,WAAD,EAAc;AAC9BM,MAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWY,QAAX,GACV,KAAKZ,KAAL,CAAWY,QAAX,CAAoBoB,SADV,GAEV;AAH0B,KAAd,CAAjB,CAIE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKjB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADH,CADF,CAhBF,CAXF,EAqCE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,iBAAiB,CAAC,OAAD,EAAU;AAC1BM,MAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWY,QAAX,GACV,KAAKZ,KAAL,CAAWY,QAAX,CAAoBqB,KADV,GAEV,IAHsB;AAI1BL,MAAAA,KAAK,EAAE,CACL;AACEM,QAAAA,IAAI,EAAE,OADR;AAEEJ,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OALK;AAJmB,KAAV,CAAjB,CAcE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKf,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADH,CArCF,EAsDG,KAAKf,KAAL,CAAWmC,YAAX,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAA4B,MAAA,WAAW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,iBAAiB,CAAC,UAAD,EAAa;AAC7BQ,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACEM,QAAAA,SAAS,EAAE,KAAKlC;AADlB,OALK;AADsB,KAAb,CAAjB,CAUE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADH,CADF,EAcE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,kBAAjB;AAAoC,MAAA,WAAW,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkB,iBAAiB,CAAC,SAAD,EAAY;AAC5BQ,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACEM,QAAAA,SAAS,EAAE,KAAKzC;AADlB,OALK;AADqB,KAAZ,CAAjB,CAUE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,MAAM,EAAE,KAAK0C,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADH,CAdF,CADD,GA6BG,IAnFN,EAoFE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,iBAAiB,CAAC,oBAAD,EAAuB;AACvCM,MAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWY,QAAX,GACV,KAAKZ,KAAL,CAAWY,QAAX,CAAoB0B,kBADV,GAEV,IAHmC;AAIvCV,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAJgC,KAAvB,CAAjB,CAUE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKf,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADH,CApFF,EAiGE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,iBAAiB,CAAC,QAAD,EAAW;AAC3BM,MAAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWY,QAAX,GACV,KAAKZ,KAAL,CAAWY,QAAX,CAAoBF,MAApB,CAA2BG,EADjB,GAEV,IAHuB;AAI3Be,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AAJoB,KAAX,CAAjB,CAMC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAC,aADd;AAEE,MAAA,QAAQ,EAAE,KAAKf,QAFjB;AAGE,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWsB,IAAX,CAAgBiB,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGlB,SALH,CAND,CADH,CAjGF,EAiHE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrB,KAAL,CAAWwC,cAAX,CAA0BC,SAA1B,IACD,KAAKzC,KAAL,CAAW0C,cAAX,CAA0BC,UADzB,GAEC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFD,GAMC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,QAAQ,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAK5C,KAAL,CAAWW,iBAAX,GAA+B,MAA/B,GAAwC,QAL3C,CADF,EAQG,KAAKX,KAAL,CAAWwC,cAAX,CAA0BK,OAA1B,GACC,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,OAAO,EAAC,qBAFV;AAGE,MAAA,WAAW,EAAE,KAAK5C,KAAL,CAAWwC,cAAX,CAA0BK,OAHzC;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAQG,IAhBN,EAiBG,KAAK7C,KAAL,CAAW0C,cAAX,CAA0BI,aAA1B,GACC,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEF,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,OAAO,EAAC,eAFV;AAGE,MAAA,WAAW,EAAE,KAAK5C,KAAL,CAAW0C,cAAX,CAA0BI,aAHzC;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAQG,IAzBN,CAPJ,CAjHF,EAqJE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArJF,CADF,CADF;AA2JD;;AAlNuC;;AAqN1C,OAAO,MAAMC,OAAN,SAAsB5F,SAAtB,CAAgC;AACrCgE,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,cAAD;AAAgB,MAAA,eAAe,EAAE,KAAjC;AAAwC,MAAA,YAAY,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAHoC;;AAKvC,MAAM6B,WAAN,SAA0B7F,SAA1B,CAAoC;AAClCgE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,gBAAgB,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,SAAb;AAAuB,MAAA,GAAG,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWiD,SAAX,CAAqBC,IADjC;AAEE,MAAA,iBAAiB,EAAE,IAFrB;AAGE,MAAA,YAAY,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CADF,CADF,EAYG,KAAKlD,KAAL,CAAWmD,YAAX,GAA0B,IAA1B,GACC,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,aAAb;AAA2B,MAAA,GAAG,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAbJ,CADF,CADF;AA0BD;;AA5BiC;;AA+BpC,OAAO,MAAMC,QAAN,SAAuBjG,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAItCsC,KAJsC,GAI9B;AACN4D,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,gBAAgB,EAAE,EAFZ;AAGNC,MAAAA,WAAW,EAAE;AAHP,KAJ8B;;AAAA,SAStCC,UATsC,GASzB,MAAM;AACjB,WAAKxC,QAAL,CAAc;AACZqC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAbqC;;AAAA,SActCI,OAdsC,GAc5B,MAAM;AACd,WAAKzC,QAAL,CAAc;AACZqC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAlBqC;;AAAA,SAmBtCK,QAnBsC,GAmB3B,CAACC,MAAD,EAASrD,CAAT,KAAe;AACxB,WAAKkD,UAAL;AACA,WAAKxD,KAAL,CAAWvC,SAAX,CAAqBkG,MAArB;AACD,KAtBqC;;AAAA,SAuBtCC,UAvBsC,GAuBzBtD,CAAC,IAAI;AAChB,WAAKN,KAAL,CAAWtC,QAAX,CAAoB4C,CAApB;AACA,WAAKU,QAAL,CAAc;AAAEuC,QAAAA,WAAW,EAAEjD;AAAf,OAAd;AACD,KA1BqC;;AAAA,SA2BtCuD,YA3BsC,GA2BvB,MAAM;AACnB,WAAKJ,OAAL;AACD,KA7BqC;;AAAA,SA8BtCK,YA9BsC,GA8BvBH,MAAM,IAAI;AACvB,UAAII,EAAE,GAAG,KAAKtE,KAAL,CAAW6D,gBAApB;;AACA,UAAIS,EAAE,CAACC,OAAH,CAAWL,MAAX,IAAqB,CAAzB,EAA4B;AAC1BI,QAAAA,EAAE,CAACE,IAAH,CAAQN,MAAR;AACD,OAFD,MAEO;AACLI,QAAAA,EAAE,CAACG,MAAH,CAAUH,EAAE,CAACC,OAAH,CAAWL,MAAX,CAAV,EAA8B,CAA9B;AACD;;AACD,WAAK3C,QAAL,CAAc;AAAEsC,QAAAA,gBAAgB,EAAES;AAApB,OAAd;AACA,WAAK/D,KAAL,CAAWmE,gBAAX,CAA4B,KAAK1E,KAAL,CAAW6D,gBAAvC;AACD,KAvCqC;;AAAA,SAwCtCc,QAxCsC,GAwC3B,MAAM;AACf,aAAO,KAAKpE,KAAL,CAAWqE,YAAX,CAAwBD,QAAxB,GACH,KAAKpE,KAAL,CAAWqE,YAAX,CAAwBD,QAAxB,CAAiC5C,GAAjC,CAAqC3B,KAAK,IACxC;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACgB,EAAhB;AAAoB,QAAA,OAAO,EAAEP,CAAC,IAAI,KAAKwD,YAAL,CAAkBjE,KAAK,CAACgB,EAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,GAAG,EAAEhB,KAAK,CAACgB,EAFb;AAGE,QAAA,KAAK,EACH,oBAAC,QAAD;AACE,UAAA,OAAO,EACL,KAAKpB,KAAL,CAAW6D,gBAAX,CAA4BU,OAA5B,CAAoCnE,KAAK,CAACgB,EAA1C,IAAgD,CAAhD,GACI,KADJ,GAEI,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOGhB,KAAK,CAAC8B,QAPT,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAeE,oBAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG9B,KAAK,CAACkC,UAAN,GAAmB,GAAnB,GAAyBlC,KAAK,CAACmC,SADlC,CAfF,EAkBE,oBAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCnC,KAAK,CAACoC,KAAxC,CAlBF,EAmBE,oBAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpC,KAAK,CAACa,MAAN,CAAae,IADhB,CAnBF,EAsBE,oBAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAEnB,CAAC,IAAI;AACZA,UAAAA,CAAC,CAACgE,eAAF;AACA,eAAKZ,QAAL,CAAc7D,KAAK,CAACgB,EAApB,EAAwBP,CAAxB;AACD,SALH;AAME,QAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAtBF,CADF,CADF,CADG,GAwCH,IAxCJ;AAyCD,KAlFqC;AAAA;;AACtCY,EAAAA,kBAAkB,GAAG;AACnB,SAAKlB,KAAL,CAAWtC,QAAX;AACD;;AAgFDyD,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWqE,YAAX,CAAwB5B,SAAxB,GACC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK2B,QAAL,EADH,EAEE,oBAAC,UAAD;AACE,MAAA,gBAAgB,EAAE,IADpB;AAEE,MAAA,OAAO,EAAE,KAAK3E,KAAL,CAAW8D,WAFtB;AAGE,MAAA,QAAQ,EAAE,KAAKK,UAHjB;AAIE,MAAA,eAAe,EAAE,EAJnB;AAKE,MAAA,KAAK,EAAE,KAAK5D,KAAL,CAAWqE,YAAX,CAAwBE,KALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEtG,qBADT;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAE,KAAKwF,OAHhB;AAIE,MAAA,OAAO,EAAE,KAAKhE,KAAL,CAAW4D,OAJtB;AAKE,MAAA,cAAc,EAAE,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKrD,KAAL,CAAWwE,aAAX,CAAyB/B,SAAzB,GACC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAWwE,aAAX,CAAyBtB,IADrC;AAEE,MAAA,iBAAiB,EAAE,IAFrB;AAGE,MAAA,YAAY,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CATF,CAJJ,CADF;AAmCD;;AAvHqC;;AA0HxC,MAAMuB,KAAN,SAAoBtH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BsC,KAD4B,GACpB;AACNiF,MAAAA,aAAa,EAAE,KADT;AAENpB,MAAAA,gBAAgB,EAAE,EAFZ;AAGNqB,MAAAA,iBAAiB,EAAE;AAHb,KADoB;;AAAA,SAM5BnB,UAN4B,GAMf,MAAM;AACjB,WAAKxC,QAAL,CAAc;AACZ0D,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KAV2B;;AAAA,SAW5BjB,OAX4B,GAWlB,MAAM;AACd,WAAKzC,QAAL,CAAc;AACZ0D,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KAf2B;;AAAA,SAiB5BE,QAjB4B,GAiBjB,MAAM;AACf,WAAK5E,KAAL,CAAWpC,WAAX,CAAuB,KAAK6B,KAAL,CAAW6D,gBAAlC;AACD,KAnB2B;;AAAA,SAqB5Ba,gBArB4B,GAqBTU,QAAQ,IAAI;AAC7B,WAAK7D,QAAL,CAAc;AAAEsC,QAAAA,gBAAgB,EAAEuB;AAApB,OAAd;AACD,KAvB2B;;AAAA,SAyB5BC,iBAzB4B,GAyBRC,GAAG,IAAI;AACzB1G,MAAAA,KAAK,CAAC2G,OAAN,CAAc;AACZC,QAAAA,KAAK,EAAE,8BADK;AAEZC,QAAAA,MAAM,EAAE,KAFI;AAGZC,QAAAA,MAAM,EAAE,QAHI;AAIZC,QAAAA,UAAU,EAAE,IAJA;;AAKZC,QAAAA,IAAI,GAAG;AACLN,UAAAA,GAAG,CAACH,QAAJ;AACD;;AAPW,OAAd;AASD,KAnC2B;;AAAA,SAqC5BU,QArC4B,GAqCjB,MAAM;AACfjH,MAAAA,KAAK,CAACkH,UAAN;AACA,WAAKvE,QAAL,CAAc;AAAE2D,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACD,KAxC2B;AAAA;;AAyC5BxD,EAAAA,MAAM,GAAG;AACP,UAAMqE,gBAAgB,GACpB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKhC,UAAtB;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aADF,CADF,EAOE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,OAAO,EAAElD,CAAC,IAAI,KAAKwE,iBAAL,CAAuB,IAAvB,CAFhB;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARF,CADF;AAoBA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9E,KAAL,CAAWyF,eAAX,CAA2BC,UAA3B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,aAAa,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFjB;AAGE,MAAA,iBAAiB,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAHrB;AAIE,MAAA,OAAO,EAAE,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADD,GAWG,IAZN,EAaG,KAAK3F,KAAL,CAAWyF,eAAX,CAA2BG,aAA3B,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,KAAK5F,KAAL,CAAWyF,eAAX,CAA2BG,aADtC;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAQG,IArBN,EAuBE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1H,QAAQ,GACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEsH,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACU,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,CADF,CADF,CADO,GASP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKhC,UAAtB;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvB,CADF,EAIE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAElD,CAAC,IAAI,KAAKwE,iBAAL,CAAuB,IAAvB,CADhB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAJF,CAVJ,CAvBF,EAgDE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE7G,qBADT;AAEE,MAAA,KAAK,EAAC,sBAFR;AAGE,MAAA,OAAO,EAAE,KAAKwF,OAHhB;AAIE,MAAA,OAAO,EAAE,KAAKhE,KAAL,CAAWiF,aAJtB;AAKE,MAAA,cAAc,EAAE,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAhDF,EAyDE,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,KAAKP,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDF,CADF;AA6DD;;AA3H2B;;AA8H9B,MAAM0B,eAAe,GAAGpG,KAAK,KAAK;AAChC+C,EAAAA,cAAc,EAAE/C,KAAK,CAACnC,UADU;AAEhCoF,EAAAA,cAAc,EAAEjD,KAAK,CAAC9B,UAFU;AAGhC2D,EAAAA,IAAI,EAAE7B,KAAK,CAACqG,MAHoB;AAIhCC,EAAAA,IAAI,EAAEtG,KAAK,CAACsG,IAJoB;AAKhC9C,EAAAA,SAAS,EAAExD,KAAK,CAACwD;AALe,CAAL,CAA7B;;AAQA,MAAM+C,eAAe,GAAGlH,IAAI,CAACmH,MAAL,CAAY;AAAExE,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAqCjC,WAArC,CAAxB;AACA,MAAM0G,cAAc,GAAG7I,OAAO,CAC5BwI,eAD4B,EAE5B;AACEvI,EAAAA,UADF;AAEEQ,EAAAA,SAFF;AAGEL,EAAAA,SAHF;AAIEC,EAAAA,QAJF;AAKEC,EAAAA,UALF;AAMEH,EAAAA,aANF;AAOEK,EAAAA;AAPF,CAF4B,CAAP,CAWrBmI,eAXqB,CAAvB;;AAaA,MAAMG,uBAAuB,GAAG1G,KAAK,KAAK;AACxC4E,EAAAA,YAAY,EAAE5E,KAAK,CAAC/B,QADoB;AAExC8G,EAAAA,aAAa,EAAE/E,KAAK,CAAChC;AAFmB,CAAL,CAArC;;AAIA,MAAM2I,WAAW,GAAG/I,OAAO,CACzB8I,uBADyB,EAEzB;AAAEzI,EAAAA,QAAF;AAAYD,EAAAA;AAAZ,CAFyB,CAAP,CAGlB2F,QAHkB,CAApB;;AAKA,MAAMiD,0BAA0B,GAAG5G,KAAK,KAAK;AAC3CsG,EAAAA,IAAI,EAAEtG,KAAK,CAACsG,IAD+B;AAE3C9C,EAAAA,SAAS,EAAExD,KAAK,CAACwD;AAF0B,CAAL,CAAxC;;AAIA,OAAO,MAAMqD,cAAc,GAAGjJ,OAAO,CACnCgJ,0BADmC,EAEnC;AAAE9I,EAAAA;AAAF,CAFmC,CAAP,CAG5ByF,WAH4B,CAAvB;;AAKP,MAAMuD,oBAAoB,GAAG9G,KAAK,KAAK;AACrCgG,EAAAA,eAAe,EAAEhG,KAAK,CAAC7B;AADc,CAAL,CAAlC;;AAGA,eAAeP,OAAO,CACpBkJ,oBADoB,EAEpB;AAAE3I,EAAAA;AAAF,CAFoB,CAAP,CAGb6G,KAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../actions/accounts/usermanagement/createuser\";\nimport { loadUserProfile } from \"../actions/accounts/myprofilemanagement/getprofile\";\nimport { updateProfile } from \"../actions/accounts/myprofilemanagement/updateprofile\";\nimport {\n  fetchUser,\n  getUsers\n} from \"../actions/accounts/usermanagement/fetchuser\";\nimport {\n  updateUser\n} from \"../actions/accounts/usermanagement/updateuser\";\nimport { deleteUsers } from \"../actions/accounts/usermanagement/deleteusers\";\nimport { reset } from \"../actions/common\";\nimport { loadRoles } from \"../actions/common\";\nimport UserPreferenceForm from \"./userpreference\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\nimport { responsiveDrawerWidth, isMobile } from \"../actions/types\";\nimport {\n  PageHeader,\n  Skeleton,\n  Modal,\n  Menu,\n  Pagination,\n  Dropdown,\n  Checkbox,\n  Drawer,\n  Descriptions,\n  Tabs,\n  Alert,\n  Form,\n  Icon,\n  Input,\n  Button,\n  Spin,\n  Row,\n  Col,\n  Select\n} from \"antd\";\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\n\n\nclass UserDetails extends React.Component {\n  componentWillMount() {\n    this.props.loadRoles();\n  }\n\n  state = {\n    confirmDirty: false\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      values.groups = [values.groups];\n      if (!err) {\n        if (this.props.updateUserDetails) {\n          this.props.updateUser(this.props.userData.id, values);\n        } else if (this.props.updateUserProfile) {\n          this.props.updateProfile(this.props.userData.id, values);\n        } else {\n          this.props.createUser(values);\n        }\n      }\n    });\n  };\n\n  onChange = e => {\n    this.setState(this.props.form.getFieldsValue());\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    let roleItems = this.props.role.roles\n      ? this.props.role.roles.map(value => (\n          <Option key={value.id} value={value.id}>\n            {value.name}\n          </Option>\n        ))\n      : null;\n    return (\n      <Fragment>\n        <Form onSubmit={this.handleSubmit} className=\"userdetails-form\">\n          <Form.Item label=\"Username\">\n            {getFieldDecorator(\"username\", {\n              initialValue: this.props.userData\n                ? this.props.userData.username\n                : null,\n              rules: [\n                { required: true, message: \"Please input your username!\" }\n              ]\n            })(<Input onChange={this.onChange} />)}\n          </Form.Item>\n          <Row gutter={16} type=\"flex\">\n            <Col xs={24} sm={16} md={12} lg={12}>\n              <Form.Item label=\"First Name\">\n                {getFieldDecorator(\"first_name\", {\n                  initialValue: this.props.userData\n                    ? this.props.userData.first_name\n                    : null,\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your firstname!\"\n                    }\n                  ]\n                })(<Input onChange={this.onChange} />)}\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={16} md={12} lg={12}>\n              <Form.Item label=\"Last Name\">\n                {getFieldDecorator(\"last_name\", {\n                  initialValue: this.props.userData\n                    ? this.props.userData.last_name\n                    : \"\"\n                })(<Input onChange={this.onChange} />)}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator(\"email\", {\n              initialValue: this.props.userData\n                ? this.props.userData.email\n                : null,\n              rules: [\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\"\n                },\n                {\n                  required: true,\n                  message: \"Please input your E-mail!\"\n                }\n              ]\n            })(<Input onChange={this.onChange} />)}\n          </Form.Item>\n          {this.props.showPassword ? (\n            <Fragment>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator(\"password\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your password!\"\n                    },\n                    {\n                      validator: this.validateToNextPassword\n                    }\n                  ]\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator(\"confirm\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please confirm your password!\"\n                    },\n                    {\n                      validator: this.compareToFirstPassword\n                    }\n                  ]\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n            </Fragment>\n          ) : null}\n          <Form.Item label=\"Mobile Number\">\n            {getFieldDecorator(\"user_mobile_number\", {\n              initialValue: this.props.userData\n                ? this.props.userData.user_mobile_number\n                : null,\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your mobile number!\"\n                }\n              ]\n            })(<Input onChange={this.onChange} />)}\n          </Form.Item>\n          <Form.Item label=\"Role\">\n            {getFieldDecorator(\"groups\", {\n              initialValue: this.props.userData\n                ? this.props.userData.groups.id\n                : null,\n              rules: [{ required: true, message: \"Please select Role!\" }]\n            })(\n              <Select\n                placeholder=\"Select Role\"\n                onChange={this.onChange}\n                loading={this.props.role.isRolesLoading}\n              >\n                {roleItems}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item>\n            {this.props.createUserData.isLoading ||\n            this.props.updateUserData.isUpdating ? (\n              <Button type=\"primary\" loading>\n                Loading\n              </Button>\n            ) : (\n              <Fragment>\n                <Button\n                  style={{ display: \"inline\" }}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  {this.props.updateUserDetails ? \"Save\" : \"Submit\"}\n                </Button>\n                {this.props.createUserData.isError ? (\n                  <Alert\n                    style={{ display: \"inline-block\" }}\n                    message=\"Registration Failed\"\n                    description={this.props.createUserData.isError}\n                    type=\"error\"\n                    closable\n                  />\n                ) : null}\n                {this.props.updateUserData.isUpdateError ? (\n                  <Alert\n                    style={{ display: \"inline-block\" }}\n                    message=\"Update Failed\"\n                    description={this.props.updateUserData.isUpdateError}\n                    type=\"error\"\n                    closable\n                  />\n                ) : null}\n              </Fragment>\n            )}\n          </Form.Item>\n          <DjangoCSRFToken />\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nexport class AddUser extends Component {\n  render() {\n    return <UserDetailsApp loadUserDetails={false} showPassword={true} />;\n  }\n}\nclass UserProfile extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Profile\" key=\"1\">\n            <Row type=\"flex\" align=\"middle\">\n              <Col xs={24} sm={24} md={18} lg={12}>\n                  <UserDetailsApp\n                    userData={this.props.myProfile.user}\n                    updateUserProfile={true}\n                    showPassword={false}\n                  />\n              </Col>\n            </Row>\n          </TabPane>\n          {this.props.hideUserPref ? null : (\n            <TabPane tab=\"Preferences\" key=\"2\">\n              <Row type=\"flex\" align=\"middle\">\n                <Col xs={24} sm={24} md={18} lg={12}>\n                  <UserPreferenceForm />\n                </Col>\n              </Row>\n            </TabPane>\n          )}\n        </Tabs>\n      </Fragment>\n    );\n  }\n}\n\nexport class UserList extends Component {\n  componentWillMount() {\n    this.props.getUsers();\n  }\n  state = {\n    visible: false,\n    selectedUserList: [],\n    currentPage: 1\n  };\n  showDrawer = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false\n    });\n  };\n  editUser = (userid, e) => {\n    this.showDrawer();\n    this.props.fetchUser(userid);\n  };\n  pageChange = e => {\n    this.props.getUsers(e);\n    this.setState({ currentPage: e });\n  };\n  loadUserList = () => {\n    this.onClose();\n  };\n  onUserselect = userid => {\n    let ul = this.state.selectedUserList;\n    if (ul.indexOf(userid) < 0) {\n      ul.push(userid);\n    } else {\n      ul.splice(ul.indexOf(userid), 1);\n    }\n    this.setState({ selectedUserList: ul });\n    this.props.getSelectedUsers(this.state.selectedUserList);\n  };\n  userlist = () => {\n    return this.props.getUsersData.userlist\n      ? this.props.getUsersData.userlist.map(value => (\n          <div key={value.id} onClick={e => this.onUserselect(value.id)}>\n            <Descriptions\n              className=\"user-list\"\n              key={value.id}\n              title={\n                <Checkbox\n                  checked={\n                    this.state.selectedUserList.indexOf(value.id) < 0\n                      ? false\n                      : true\n                  }\n                >\n                  {value.username}\n                </Checkbox>\n              }\n            >\n              <Descriptions.Item label=\"Name\">\n                {value.first_name + \" \" + value.last_name}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Email\">{value.email}</Descriptions.Item>\n              <Descriptions.Item label=\"Role\">\n                {value.groups.name}\n              </Descriptions.Item>\n              <Descriptions.Item className=\"align-right\">\n                <Button\n                  type=\"link\"\n                  onClick={e => {\n                    e.stopPropagation();\n                    this.editUser(value.id, e);\n                  }}\n                  icon=\"edit\"\n                >\n                  Edit\n                </Button>\n              </Descriptions.Item>\n            </Descriptions>\n          </div>\n        ))\n      : null;\n  };\n  render() {\n    return (\n      <Fragment>\n        {this.props.getUsersData.isLoading ? (\n          <Spin tip=\"Loading...\" />\n        ) : (\n          <Fragment>\n            {this.userlist()}\n            <Pagination\n              hideOnSinglePage={true}\n              current={this.state.currentPage}\n              onChange={this.pageChange}\n              defaultPageSize={10}\n              total={this.props.getUsersData.count}\n            />\n            <Drawer\n              width={responsiveDrawerWidth}\n              title=\"Update user\"\n              onClose={this.onClose}\n              visible={this.state.visible}\n              destroyOnClose={true}\n            >\n              {this.props.fetchUserData.isLoading ? (\n                <Spin tip=\"Loading...\" />\n              ) : (\n                <UserDetailsApp\n                  userData={this.props.fetchUserData.user}\n                  updateUserDetails={true}\n                  showPassword={false}\n                />\n              )}\n            </Drawer>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass Users extends Component {\n  state = {\n    drawerVisible: false,\n    selectedUserList: [],\n    errorModalVisible: false\n  };\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n  onDelete = () => {\n    this.props.deleteUsers(this.state.selectedUserList);\n  };\n\n  getSelectedUsers = userList => {\n    this.setState({ selectedUserList: userList });\n  };\n\n  showDeleteConfirm = ele => {\n    Modal.confirm({\n      title: \"Are you sure delete user(s)?\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {\n        ele.onDelete();\n      }\n    });\n  };\n\n  handleOk = () => {\n    Modal.destroyAll();\n    this.setState({ errorModalVisible: false });\n  };\n  render() {\n    const mobileActionMenu = (\n      <Menu>\n        <Menu.Item key=\"0\">\n          <Button onClick={this.showDrawer} type=\"link\">\n            <Icon type=\"plus\" />\n            Add User\n          </Button>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"1\">\n          <Button\n            type=\"link\"\n            onClick={e => this.showDeleteConfirm(this)}\n            icon=\"delete\"\n          >\n            Delete\n          </Button>\n        </Menu.Item>\n      </Menu>\n    );\n    return (\n      <Fragment>\n        {this.props.deleteUsersData.isDeleting ? (\n          <Fragment>\n            <Modal\n              title=\"Info\"\n              okButtonProps={{ hidden: true }}\n              cancelButtonProps={{ hidden: true }}\n              visible={true}\n            >\n              Deleting...\n            </Modal>\n          </Fragment>\n        ) : null}\n        {this.props.deleteUsersData.isDeleteError ? (\n          <Fragment>\n            <Alert\n              message={this.props.deleteUsersData.isDeleteError}\n              closable\n              type=\"error\"\n            />\n          </Fragment>\n        ) : null}\n\n        <PageHeader className=\"align-right page-header\">\n          {isMobile ? (\n            <Fragment>\n              <Dropdown overlay={mobileActionMenu}>\n                <Button type=\"primary\">\n                  Actions <Icon type=\"down\" />\n                </Button>\n              </Dropdown>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Button onClick={this.showDrawer} type=\"link\">\n                <Icon type=\"plus\" /> <b>Add User</b>\n              </Button>\n              <Button\n                onClick={e => this.showDeleteConfirm(this)}\n                type=\"link\"\n                icon=\"delete\"\n              >\n                <b>Delete</b>\n              </Button>\n            </Fragment>\n          )}\n        </PageHeader>\n\n        <Drawer\n          width={responsiveDrawerWidth}\n          title=\"Create a new account\"\n          onClose={this.onClose}\n          visible={this.state.drawerVisible}\n          destroyOnClose={true}\n        >\n          <AddUser />\n        </Drawer>\n        <UserListApp getSelectedUsers={this.getSelectedUsers} />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  createUserData: state.createUser,\n  updateUserData: state.updateUser,\n  role: state.common,\n  auth: state.auth,\n  myProfile: state.myProfile\n});\n\nconst UserDetailsForm = Form.create({ name: \"UserDetails\" })(UserDetails);\nconst UserDetailsApp = connect(\n  mapStateToProps,\n  {\n    createUser,\n    loadRoles,\n    fetchUser,\n    getUsers,\n    updateUser,\n    updateProfile,\n    reset\n  }\n)(UserDetailsForm);\n\nconst mapStateToPropsUserList = state => ({\n  getUsersData: state.getUsers,\n  fetchUserData: state.fetchUser\n});\nconst UserListApp = connect(\n  mapStateToPropsUserList,\n  { getUsers, fetchUser }\n)(UserList);\n\nconst mapStateToPropsUserProfile = state => ({\n  auth: state.auth,\n  myProfile: state.myProfile\n});\nexport const UserProfileApp = connect(\n  mapStateToPropsUserProfile,\n  { loadUserProfile }\n)(UserProfile);\n\nconst mapStateToPropsUsers = state => ({\n  deleteUsersData: state.deleteUsers\n});\nexport default connect(\n  mapStateToPropsUsers,\n  { deleteUsers }\n)(Users);\n"]},"metadata":{},"sourceType":"module"}