{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/filterappointments.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DatePicker, Form, Row, Col, Button, Icon, Drawer, Switch } from \"antd\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { config } from \"@fullcalendar/core\";\nimport moment from \"moment\";\nimport { DATE_FORMAT, isMobile } from \"../../actions/types\";\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nexport class FilterUI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDrawer = () => {\n      this.setState({\n        isFilterDrawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        isFilterDrawerVisible: false\n      });\n    };\n\n    this.state = {\n      isFilterDrawerVisible: false\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        marginBottom: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \"Show Filters\"))), React.createElement(Row, {\n      className: \"align-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      onClose: this.onClose,\n      visible: this.state.isFilterDrawerVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.children)))) : this.props.children);\n  }\n\n}\n\nclass FilterAppointments extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   start_date: moment(this.props.start_date).format(DATE_FORMAT),\n    //   end_date: moment(this.props.end_date).format(DATE_FORMAT)\n    // };\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.getUserAppointments(values.start_date.format(DATE_FORMAT), values.end_date.format(DATE_FORMAT));\n        }\n      });\n    };\n  } // setStartDate = value => {\n  //   this.setState({ start_date: value.format(DATE_FORMAT) }, this.handleFilter);\n  // };\n  // setEndDate = value => {\n  //   this.setState({ end_date: value.format(DATE_FORMAT) }, this.handleFilter);\n  // };\n\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      className: \"filterappoinments-form\",\n      style: {\n        marginBottom: \"15px\"\n      },\n      onSubmit: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 5,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"From\",\n      htmlFor: \"start_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), getFieldDecorator(\"start_date\", {\n      rules: [{\n        required: false,\n        message: \"Please select time!\"\n      }],\n      initialValue: moment(this.props.start_date, DATE_FORMAT)\n    })(React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 5,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"To\",\n      htmlFor: \"end_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), getFieldDecorator(\"end_date\", {\n      rules: [{\n        required: false,\n        message: \"Please select time!\"\n      }],\n      initialValue: moment(this.props.end_date, DATE_FORMAT)\n    })(React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 7,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), getFieldDecorator(\"team_appointments\", {\n      valuePropName: \"unchecked\"\n    })(React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Show Team's appointments\")))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 3,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \"Apply Filter\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\n\nconst FilterAppointmentsApp = connect(mapStateToProps, {\n  getUserAppointments\n})(FilterAppointments);\nconst FilterAppointmentsForm = Form.create({\n  name: \"AppointmentsFilterForm\"\n})(FilterAppointmentsApp);\nexport default FilterAppointmentsForm;","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/filterappointments.js"],"names":["React","Fragment","connect","DatePicker","Form","Row","Col","Button","Icon","Drawer","Switch","getUserAppointments","config","moment","DATE_FORMAT","isMobile","MonthPicker","RangePicker","WeekPicker","FilterUI","Component","constructor","props","showDrawer","setState","isFilterDrawerVisible","onClose","state","render","marginBottom","children","FilterAppointments","handleFilter","e","preventDefault","form","validateFields","err","values","start_date","format","end_date","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","rules","required","message","initialValue","valuePropName","mapStateToProps","userAppointments","FilterAppointmentsApp","FilterAppointmentsForm","create","name"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  DatePicker,\n  Form,\n  Row,\n  Col,\n  Button,\n  Icon,\n  Drawer,\n  Switch\n} from \"antd\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { config } from \"@fullcalendar/core\";\nimport moment from \"moment\";\nimport { DATE_FORMAT, isMobile } from \"../../actions/types\";\n\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nexport class FilterUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFilterDrawerVisible: false\n    };\n  }\n  showDrawer = () => {\n    this.setState({ isFilterDrawerVisible: true });\n  };\n\n  onClose = () => {\n    this.setState({ isFilterDrawerVisible: false });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {isMobile ? (\n          <Fragment>\n            <Row className=\"align-right\">\n              <Col>\n                {\" \"}\n                <Button\n                  type=\"primary\"\n                  onClick={this.showDrawer}\n                  style={{ marginBottom: \"15px\" }}\n                >\n                  <Icon type=\"filter\" />\n                  Show Filters\n                </Button>\n              </Col>\n            </Row>\n            <Row className=\"align-right\">\n              <Col>\n                <Drawer\n                  onClose={this.onClose}\n                  visible={this.state.isFilterDrawerVisible}\n                >\n                  {this.props.children}\n                </Drawer>\n              </Col>\n            </Row>\n          </Fragment>\n        ) : (\n          this.props.children\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass FilterAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   start_date: moment(this.props.start_date).format(DATE_FORMAT),\n    //   end_date: moment(this.props.end_date).format(DATE_FORMAT)\n    // };\n  }\n\n  // setStartDate = value => {\n  //   this.setState({ start_date: value.format(DATE_FORMAT) }, this.handleFilter);\n  // };\n  // setEndDate = value => {\n  //   this.setState({ end_date: value.format(DATE_FORMAT) }, this.handleFilter);\n  // };\n  handleFilter = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.getUserAppointments(\n          values.start_date.format(DATE_FORMAT),\n          values.end_date.format(DATE_FORMAT)\n        );\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 }\n    };\n\n    return (\n      <Fragment>\n        <Form\n          layout=\"inline\"\n          className=\"filterappoinments-form\"\n          style={{ marginBottom: \"15px\" }}\n          onSubmit={this.handleFilter}>\n          <Row type=\"flex\">\n            <Col xs={24} sm={24} md={4} lg={5} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout} label=\"From\" htmlFor=\"start_date\">\n                {getFieldDecorator(\"start_date\", {\n                  rules: [{ required: false, message: \"Please select time!\" }],\n                  initialValue: moment(this.props.start_date, DATE_FORMAT)\n                })(<DatePicker />)}\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={4} lg={5} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout} label=\"To\" htmlFor=\"end_date\">\n                {getFieldDecorator(\"end_date\", {\n                  rules: [{ required: false, message: \"Please select time!\" }],\n                  initialValue: moment(this.props.end_date, DATE_FORMAT)\n                })(<DatePicker />)}\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={4} lg={7} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout}>\n                {getFieldDecorator(\"team_appointments\", {\n                  valuePropName: \"unchecked\"\n                })(\n                  <Switch>\n                    Show Team's appointments\n                  </Switch>\n                )}\n              </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={4} lg={3} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  <Icon type=\"filter\" />\n                  Apply Filter\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\nconst FilterAppointmentsApp = connect(\n  mapStateToProps,\n  { getUserAppointments }\n)(FilterAppointments);\nconst FilterAppointmentsForm = Form.create({ name: \"AppointmentsFilterForm\" })(\n  FilterAppointmentsApp\n);\nexport default FilterAppointmentsForm;\n"]},"metadata":{},"sourceType":"module"}