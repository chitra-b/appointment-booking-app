{"ast":null,"code":"import api from \"../../apiurl\";\nimport { tokenConfig } from \"../accounts/usermanagement/auth\";\nimport { APPOINTMENTS_FETCH_ERROR, APPOINTMENTS_LOADED, APPOINTMENTS_LOADING, DATE_FORMAT, YEAR_MONTH_FORMAT } from \"../types\";\nimport moment from \"moment\";\nimport axios from 'axios';\nvar CancelToken = axios.CancelToken;\nlet cancel;\nexport const getUserAppointments = (start_time = '', end_time = '') => (dispatch, getState) => {\n  dispatch({\n    type: APPOINTMENTS_LOADING\n  });\n  cancel && cancel();\n  api.get(\"/appointments/\" + \"?start_time_after=\" + start_time + \"&end_time_before=\" + end_time, tokenConfig(getState), {\n    cancelToken: new CancelToken(function executor(c) {\n      // An executor function receives a cancel function as a parameter\n      wjc_cancel = c;\n    })\n  }).then(res => {\n    dispatch({\n      type: APPOINTMENTS_LOADED,\n      payload: res.data.results\n    });\n  }).catch(err => {\n    let err_msg = \"\";\n\n    if (\"detail\" in err.response.data) {\n      err_msg = err.response.data.detail;\n    } else {\n      for (var key in err.response.data) {\n        err_msg += err.response.data[key];\n      }\n    }\n\n    dispatch({\n      type: APPOINTMENTS_FETCH_ERROR,\n      payload: err_msg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/appointment/getuserappointments.js"],"names":["api","tokenConfig","APPOINTMENTS_FETCH_ERROR","APPOINTMENTS_LOADED","APPOINTMENTS_LOADING","DATE_FORMAT","YEAR_MONTH_FORMAT","moment","axios","CancelToken","cancel","getUserAppointments","start_time","end_time","dispatch","getState","type","get","cancelToken","executor","c","wjc_cancel","then","res","payload","data","results","catch","err","err_msg","response","detail","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SACEC,wBADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,WAJF,EAKEC,iBALF,QAMO,UANP;AAOA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;AACA,IAAIC,MAAJ;AAEA,OAAO,MAAMC,mBAAmB,GAAI,CAACC,UAAU,GAAC,EAAZ,EAAgBC,QAAQ,GAAC,EAAzB,KAAgC,CAClEC,QADkE,EAElEC,QAFkE,KAG/D;AACHD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACAM,EAAAA,MAAM,IAAIA,MAAM,EAAhB;AACCV,EAAAA,GAAG,CACDiB,GADF,CAEG,mBACA,oBADA,GACqBL,UADrB,GACgC,mBADhC,GACoDC,QAHvD,EAIGZ,WAAW,CAACc,QAAD,CAJd,EAKG;AAAEG,IAAAA,WAAW,EAAE,IAAIT,WAAJ,CAAgB,SAASU,QAAT,CAAkBC,CAAlB,EAAqB;AAClD;AACAC,MAAAA,UAAU,GAAGD,CAAb;AACD,KAHc;AAAf,GALH,EAWEE,IAXF,CAWOC,GAAG,IAAI;AACXT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb,mBADC;AAEPqB,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFX,KAAD,CAAR;AAID,GAhBF,EAiBEC,KAjBF,CAiBQC,GAAG,IAAI;AACZ,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,YAAYD,GAAG,CAACE,QAAJ,CAAaL,IAA7B,EAAmC;AACjCI,MAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAA5B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACE,QAAJ,CAAaL,IAA7B,EAAmC;AACjCI,QAAAA,OAAO,IAAID,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBO,GAAlB,CAAX;AACD;AACF;;AACDlB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEd,wBADC;AAEPsB,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GA9BF;AA+BF,CArCM","sourcesContent":["import api from \"../../apiurl\";\nimport { tokenConfig } from \"../accounts/usermanagement/auth\";\nimport {\n  APPOINTMENTS_FETCH_ERROR,\n  APPOINTMENTS_LOADED,\n  APPOINTMENTS_LOADING,\n  DATE_FORMAT,\n  YEAR_MONTH_FORMAT\n} from \"../types\";\nimport moment from \"moment\";\nimport axios from 'axios';\nvar CancelToken = axios.CancelToken;\nlet cancel;\n\nexport const getUserAppointments =  (start_time='', end_time='') => (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: APPOINTMENTS_LOADING });\n  cancel && cancel();\n   api\n    .get(\n      \"/appointments/\"+\n      \"?start_time_after=\"+start_time+\"&end_time_before=\"+end_time,\n      tokenConfig(getState),\n      { cancelToken: new CancelToken(function executor(c) {\n        // An executor function receives a cancel function as a parameter\n        wjc_cancel = c;\n      })\n    }\n    )\n    .then(res => {\n      dispatch({\n        type: APPOINTMENTS_LOADED,\n        payload: res.data.results\n      });\n    })\n    .catch(err => {\n      let err_msg = \"\";\n      if (\"detail\" in err.response.data) {\n        err_msg = err.response.data.detail;\n      } else {\n        for (var key in err.response.data) {\n          err_msg += err.response.data[key];\n        }\n      }\n      dispatch({\n        type: APPOINTMENTS_FETCH_ERROR,\n        payload: err_msg\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}