{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/calendar.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { reset } from \"../../actions/common\";\nimport { responsiveDrawerWidth, isMobile, RESET_BOOKING_STATE, DATE_FORMAT, DATE_TIME_FORMAT, TIME_FORMAT_AM_PM, DATE_TIME_FORMAT_AM_PM } from \"../../actions/types\";\nimport { getUserPreference } from \"../../actions/accounts/userpreference/loadpreference\";\nimport { bookappointment } from \"../../actions/appointment/bookappointment\"; //import moment from \"moment\";\n\nimport moment from 'moment-timezone'; // must manually import the stylesheets for each plugin\n\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { getUserDetails } from \"../../actions/accounts/myprofilemanagement/getprofile\";\nimport { store } from \"../../index.js\";\nimport { Row, Col, Button, PageHeader, Drawer, Form, Alert, Input, DatePicker } from \"antd\";\nconst TextArea = Input.TextArea;\nconst RangePicker = DatePicker.RangePicker;\nmoment.tz.setDefault(\"America/Los_Angeles\");\n\nclass UserCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.showDrawer = () => {\n      this.setState({\n        popover_style: {\n          display: 'none'\n        }\n      });\n      this.setState({\n        popover_visible: false\n      });\n      this.setState({\n        appointment_drawer_visible: true\n      });\n    };\n\n    this.closeDrawer = () => {\n      this.setState({\n        appointment_drawer_visible: false\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.change = info => {\n      console.log(info.view.view.activeStart, info.view.view.activeEnd);\n      console.log(moment(info.view.view.activeStart).format(DATE_FORMAT));\n      let appointmentsSaerched = this.props.getUserAppointments(moment(info.view.view.activeStart).format(DATE_FORMAT), moment(info.view.view.activeEnd).format(DATE_FORMAT), false, getUserDetails(store.getState));\n      console.log(appointmentsSaerched);\n      let calendarEvents = [];\n\n      if (appointmentsSaerched) {\n        for (let index = 0; index < appointmentsSaerched.length; index++) {\n          calendarEvents.push({\n            title: appointmentsSaerched[index].client.client_name,\n            start: appointmentsSaerched[index].start_time,\n            end: appointmentsSaerched[index].end_time\n          });\n        }\n      }\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (this.state.popover_visible) {\n        this.setState({\n          popover_style: {\n            display: 'none'\n          }\n        });\n        this.setState({\n          popover_visible: false\n        });\n      } else {\n        this.setState({\n          popover_style: {\n            display: 'block',\n            top: arg.jsEvent.pageY.toString() + 'px',\n            left: arg.jsEvent.pageX.toString() + 'px'\n          }\n        });\n        this.setState({\n          popover_visible: true\n        });\n      } // if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n      //   this.setState({\n      //     // add new event data\n      //     calendarEvents: this.state.calendarEvents.concat({\n      //       // creates a new array\n      //       title: \"New Event\",\n      //       start: arg.date,\n      //       allDay: arg.allDay\n      //     })\n      //   });\n      // }\n\n    };\n\n    this.state = {\n      popover_style: {\n        visibility: 'hidden'\n      },\n      popover_visible: false,\n      appointment_drawer_visible: false,\n      hideClinetFields_Appointment: false\n    };\n    this.props.getUserAppointments();\n  }\n\n  render() {\n    let appointments = this.props.userAppointments.appointments;\n    let calendarEvents = [];\n\n    if (appointments) {\n      for (let index = 0; index < appointments.length; index++) {\n        calendarEvents.push({\n          title: appointments[index].client.client_name,\n          start: appointments[index].start_time,\n          end: appointments[index].end_time\n        });\n      }\n    }\n\n    const WrappedBookingFormForStaffApp = Form.create({\n      name: \"BookingForm\"\n    })(BookingFormForStaffApp);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      width: responsiveDrawerWidth,\n      title: \"Appointment\",\n      onClose: this.closeDrawer,\n      visible: this.state.appointment_drawer_visible,\n      destroyOnClose: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(WrappedBookingFormForStaffApp, {\n      hideClinetFields: this.state.hideClinetFields_Appointment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"popover\",\n      className: \"custom-popover\",\n      style: this.state.popover_style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      onClick: e => {\n        this.setState({\n          hideClinetFields_Appointment: true\n        });\n        this.showDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Mark Busy\")))), React.createElement(Row, {\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      timeZone: \"EST\",\n      defaultView: isMobile ? \"listWeek\" : \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      showNonCurrentDates: false,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      eventLimit: 4,\n      fixedWeekCount: false,\n      datesRender: this.change,\n      dateClick: this.handleDateClick,\n      viewSkeletonRender: this.dayRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass BookingFormForStaff extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.bookappointment({});\n        }\n      });\n    };\n\n    this.onDateRangeSelect = e => {};\n\n    this.props.getUserPreference(this.props.myProfile.user.id);\n    this.props.reset(RESET_BOOKING_STATE);\n  }\n\n  render() {\n    if (this.props.bookAppointmentData.isBooked) {\n      return React.createElement(Redirect, {\n        to: \"/appointment/info/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      });\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.props.bookAppointmentData.isError ? React.createElement(Alert, {\n      message: \"Appointment failed\",\n      description: this.props.bookAppointmentData.isError,\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }) : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Select Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, getFieldDecorator(\"date_range\", {\n      rules: [{\n        required: true,\n        message: \"Please select time!\"\n      }]\n    })( // <DatePicker  showTime={{use12Hours:true}} placeholder=\"Select Time\" minuteStep={15}  onChange={this.onDateRangeSelect} onOk={this.onDateRangeSelect} />\n    React.createElement(RangePicker, {\n      className: \"date-range\",\n      showTime: {\n        use12Hours: true,\n        format: TIME_FORMAT_AM_PM,\n        minuteStep: 15\n      },\n      format: DATE_TIME_FORMAT_AM_PM,\n      placeholder: ['Start Time', 'End Time'],\n      onChange: this.onDateRangeSelect,\n      onOk: this.onDateRangeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), this.props.hideClinetFields ? null : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, getFieldDecorator(\"client_email_id\", {\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        required: true,\n        message: \"Please input your E-mail!\"\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, getFieldDecorator(\"client_name\", {\n      rules: [{\n        required: true,\n        message: \"Please input Name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Phone Numer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, getFieldDecorator(\"client_contact_mobile_number\")(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })))), React.createElement(Form.Item, {\n      label: \"Phone Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, getFieldDecorator(\"notes\")(React.createElement(TextArea, {\n      placeholder: \"Additional information\",\n      autosize: {\n        minRows: 2,\n        maxRows: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, this.props.bookAppointmentData.isLoading ? React.createElement(Button, {\n      type: \"primary\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapStateBookToProps = state => ({\n  bookAppointmentData: state.bookAppointment,\n  myProfile: state.myProfile,\n  userSlots: state.getUserSlots,\n  userPref: state.loadUserPref\n});\n\nconst BookingFormForStaffApp = connect(mapStateBookToProps, {\n  bookappointment,\n  reset,\n  getUserPreference\n})(BookingFormForStaff);\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\n\nexport default connect(mapStateToProps, {\n  getUserAppointments\n})(UserCalendar);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/calendar.js"],"names":["React","Fragment","Redirect","connect","FullCalendar","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","getUserAppointments","reset","responsiveDrawerWidth","isMobile","RESET_BOOKING_STATE","DATE_FORMAT","DATE_TIME_FORMAT","TIME_FORMAT_AM_PM","DATE_TIME_FORMAT_AM_PM","getUserPreference","bookappointment","moment","getUserDetails","store","Row","Col","Button","PageHeader","Drawer","Form","Alert","Input","DatePicker","TextArea","RangePicker","tz","setDefault","UserCalendar","Component","constructor","props","calendarComponentRef","createRef","showDrawer","setState","popover_style","display","popover_visible","appointment_drawer_visible","closeDrawer","toggleWeekends","calendarWeekends","state","change","info","console","log","view","activeStart","activeEnd","format","appointmentsSaerched","getState","calendarEvents","index","length","push","title","client","client_name","start","start_time","end","end_time","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","top","jsEvent","pageY","toString","left","pageX","visibility","hideClinetFields_Appointment","render","appointments","userAppointments","WrappedBookingFormForStaffApp","create","name","BookingFormForStaffApp","e","center","right","dayRender","BookingFormForStaff","handleSubmit","preventDefault","form","validateFields","err","values","onDateRangeSelect","myProfile","user","id","bookAppointmentData","isBooked","getFieldDecorator","isError","rules","required","message","use12Hours","minuteStep","hideClinetFields","type","whitespace","minRows","maxRows","isLoading","mapStateBookToProps","bookAppointment","userSlots","getUserSlots","userPref","loadUserPref","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { reset } from \"../../actions/common\";\nimport { responsiveDrawerWidth, isMobile, RESET_BOOKING_STATE, DATE_FORMAT, DATE_TIME_FORMAT, TIME_FORMAT_AM_PM, DATE_TIME_FORMAT_AM_PM } from \"../../actions/types\";\nimport { getUserPreference } from \"../../actions/accounts/userpreference/loadpreference\";\n\nimport { bookappointment } from \"../../actions/appointment/bookappointment\";\n//import moment from \"moment\";\nimport moment from 'moment-timezone';\n// must manually import the stylesheets for each plugin\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { getUserDetails } from \"../../actions/accounts/myprofilemanagement/getprofile\";\nimport {store} from \"../../index.js\"\n\n\nimport {\n  Row,\n  Col,\n  Button,\n  PageHeader,\n  Drawer,\n  Form,\n  Alert,\n  Input,\n  DatePicker\n} from \"antd\";\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\n\nmoment.tz.setDefault(\"America/Los_Angeles\");\n\nclass UserCalendar extends React.Component {\n  calendarComponentRef = React.createRef();\n  constructor(props) {\n    super(props);\n    this.state = {\n      popover_style: { visibility: 'hidden' },\n      popover_visible: false,\n      appointment_drawer_visible: false,\n      hideClinetFields_Appointment: false\n    };\n\n    this.props.getUserAppointments();\n  }\n\n  showDrawer = () => {\n    this.setState({ popover_style: { display: 'none' } })\n    this.setState({ popover_visible: false });\n    this.setState({\n      appointment_drawer_visible: true\n    });\n  };\n\n  closeDrawer = () => {\n    this.setState({\n      appointment_drawer_visible: false\n    });\n  };\n\n  render() {\n    let appointments = this.props.userAppointments.appointments;\n    let calendarEvents = []\n    if (appointments) {\n      for (let index = 0; index < appointments.length; index++) {\n        calendarEvents.push({ title: appointments[index].client.client_name, start: appointments[index].start_time, end: appointments[index].end_time })\n\n      }\n    }\n    const WrappedBookingFormForStaffApp = Form.create({ name: \"BookingForm\" })(\n      BookingFormForStaffApp\n    );\n    return (\n\n      <Fragment>\n        <Drawer\n          width={responsiveDrawerWidth}\n          title=\"Appointment\"\n          onClose={this.closeDrawer}\n          visible={this.state.appointment_drawer_visible}\n          destroyOnClose={true}\n        >\n          <WrappedBookingFormForStaffApp hideClinetFields={this.state.hideClinetFields_Appointment} />\n        </Drawer>\n\n        <div id=\"popover\" className=\"custom-popover\" style={this.state.popover_style}>\n          <ul>\n            {/* <li>\n              <Button type=\"link\">\n                New Appointment\n        </Button>\n            </li> */}\n            <li>\n              <Button type=\"link\" onClick={(e) => {this.setState({ hideClinetFields_Appointment: true }); this.showDrawer() }}>\n                Mark Busy\n        </Button>\n            </li>\n          </ul>\n        </div>\n        <Row justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={24} >\n\n            <FullCalendar\n              timeZone='EST'\n              defaultView={isMobile ? \"listWeek\" : \"dayGridMonth\"}\n              header={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n              }}\n\n              showNonCurrentDates={false}\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin]}\n              ref={this.calendarComponentRef}\n              weekends={this.state.calendarWeekends}\n              eventLimit={4}\n              fixedWeekCount={false}\n              datesRender={this.change}\n              dateClick={this.handleDateClick}\n              viewSkeletonRender={this.dayRender}\n            />\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n\n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    });\n  };\n\n  change = (info) => {\n    console.log(info.view.view.activeStart, info.view.view.activeEnd);\n    console.log(moment(info.view.view.activeStart).format(DATE_FORMAT))\n    let appointmentsSaerched = this.props.getUserAppointments(\n      moment(info.view.view.activeStart).format(DATE_FORMAT),\n      moment(info.view.view.activeEnd).format(DATE_FORMAT),\n      false,\n      getUserDetails(store.getState)\n    )\n    console.log(appointmentsSaerched);\n    let calendarEvents = []\n    if (appointmentsSaerched) {\n      for (let index = 0; index < appointmentsSaerched.length; index++) {\n        calendarEvents.push(\n          { title: appointmentsSaerched[index].client.client_name, \n            start: appointmentsSaerched[index].start_time, \n            end: appointmentsSaerched[index].end_time })\n\n      }\n    }\n  }\n\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n  };\n\n  handleDateClick = arg => {\n    if (this.state.popover_visible) {\n      this.setState({ popover_style: { display: 'none' } })\n      this.setState({ popover_visible: false });\n    }\n    else {\n      this.setState({ popover_style: { display: 'block', top: (arg.jsEvent.pageY).toString() + 'px', left: (arg.jsEvent.pageX).toString() + 'px' } });\n      this.setState({ popover_visible: true });\n    }\n\n\n    // if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n    //   this.setState({\n    //     // add new event data\n    //     calendarEvents: this.state.calendarEvents.concat({\n    //       // creates a new array\n    //       title: \"New Event\",\n    //       start: arg.date,\n    //       allDay: arg.allDay\n    //     })\n    //   });\n    // }\n  };\n}\n\nclass BookingFormForStaff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.getUserPreference(this.props.myProfile.user.id);\n    this.props.reset(RESET_BOOKING_STATE);\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.bookappointment({});\n      }\n    });\n  };\n\n  onDateRangeSelect = e => {\n\n  }\n  render() {\n    if (this.props.bookAppointmentData.isBooked) {\n      return <Redirect to=\"/appointment/info/\" />;\n    }\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Fragment>\n        {this.props.bookAppointmentData.isError ? (\n          <Alert\n            message=\"Appointment failed\"\n            description={this.props.bookAppointmentData.isError}\n            type=\"error\"\n            closable\n          />\n        ) : null}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Select Time\">\n            {getFieldDecorator(\"date_range\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please select time!\"\n                }\n              ]\n            })(\n              // <DatePicker  showTime={{use12Hours:true}} placeholder=\"Select Time\" minuteStep={15}  onChange={this.onDateRangeSelect} onOk={this.onDateRangeSelect} />\n              <RangePicker\n                className=\"date-range\"\n                showTime={{\n                  use12Hours: true,\n                  format: TIME_FORMAT_AM_PM,\n                  minuteStep: 15\n                }}\n                format={DATE_TIME_FORMAT_AM_PM}\n                placeholder={['Start Time', 'End Time']}\n                onChange={this.onDateRangeSelect}\n                onOk={this.onDateRangeSelect}\n              />\n            )}\n          </Form.Item>\n          {this.props.hideClinetFields ? null : (\n            <Fragment>\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator(\"client_email_id\", {\n                  rules: [\n                    {\n                      type: \"email\",\n                      message: \"The input is not valid E-mail!\"\n                    },\n                    {\n                      required: true,\n                      message: \"Please input your E-mail!\"\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n\n              <Form.Item label=\"Name\">\n                {getFieldDecorator(\"client_name\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input Name!\",\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n\n              <Form.Item label=\"Phone Numer\">\n                {getFieldDecorator(\"client_contact_mobile_number\")(<Input />)}\n              </Form.Item>\n            </Fragment>\n          )}\n          <Form.Item label=\"Phone Notes\">\n            {getFieldDecorator(\"notes\")(\n              <TextArea\n                placeholder=\"Additional information\"\n                autosize={{ minRows: 2, maxRows: 6 }}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item>\n            {this.props.bookAppointmentData.isLoading ? (\n              <Button type=\"primary\" loading>\n                Loading\n              </Button>\n            ) : (\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n              </Button>\n              )}\n          </Form.Item>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateBookToProps = state => ({\n  bookAppointmentData: state.bookAppointment,\n  myProfile: state.myProfile,\n  userSlots: state.getUserSlots,\n  userPref: state.loadUserPref\n});\nconst BookingFormForStaffApp = connect(\n  mapStateBookToProps,\n  { bookappointment, reset, getUserPreference }\n)(BookingFormForStaff);\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\nexport default connect(mapStateToProps, { getUserAppointments })(UserCalendar)"]},"metadata":{},"sourceType":"module"}