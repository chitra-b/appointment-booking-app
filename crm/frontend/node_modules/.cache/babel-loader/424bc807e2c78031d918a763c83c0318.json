{"ast":null,"code":"import api from \"../../../apiurl\";\nimport { tokenConfig } from \"../usermanagement/auth\";\nimport { message } from \"antd\";\nimport { USER_PREFERENCE_UPDATED, USER_PREFERENCE_UPDATE_ERROR, USER_PREFERENCE_UPDATING } from \"../../types\";\nexport const updateUserPreference = (userid, userdata) => (dispatch, getState) => {\n  dispatch({\n    type: USER_PREFERENCE_UPDATING\n  });\n  api.patch(\"/user_preferences/\" + userid.toString() + \"/\", userdata, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: USER_PREFERENCE_UPDATED,\n      payload: res.data\n    });\n    message.success(\"User prefernece updated successfully\");\n  }).catch(err => {\n    let err_msg = \"\";\n\n    if (\"detail\" in err.response.data) {\n      err_msg = err.response.data.detail;\n    } else {\n      for (var key in err.response.data) {\n        err_msg += err.response.data[key];\n      }\n    }\n\n    dispatch({\n      type: USER_PREFERENCE_UPDATE_ERROR,\n      payload: err_msg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/accounts/userpreference/updatepreference.js"],"names":["api","tokenConfig","message","USER_PREFERENCE_UPDATED","USER_PREFERENCE_UPDATE_ERROR","USER_PREFERENCE_UPDATING","updateUserPreference","userid","userdata","dispatch","getState","type","patch","toString","then","res","payload","data","success","catch","err","err_msg","response","detail","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,SACEC,uBADF,EAEEC,4BAFF,EAGEC,wBAHF,QAIO,aAJP;AAMA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB,CACxDC,QADwD,EAExDC,QAFwD,KAGrD;AACHD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAL,EAAAA,GAAG,CACAY,KADH,CAEI,uBAAqBL,MAAM,CAACM,QAAP,EAArB,GAAuC,GAF3C,EAGIL,QAHJ,EAIIP,WAAW,CAACS,QAAD,CAJf,EAMGI,IANH,CAMQC,GAAG,IAAI;AACXN,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,uBADC;AAEPa,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAIAf,IAAAA,OAAO,CAACgB,OAAR,CAAgB,sCAAhB;AACD,GAZH,EAaGC,KAbH,CAaSC,GAAG,IAAI;AACZ,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,YAAYD,GAAG,CAACE,QAAJ,CAAaL,IAA7B,EAAmC;AACjCI,MAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAA5B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACE,QAAJ,CAAaL,IAA7B,EAAmC;AACjCI,QAAAA,OAAO,IAAID,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBO,GAAlB,CAAX;AACD;AACF;;AACDf,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,4BADC;AAEPY,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GA1BH;AA2BD,CAhCM","sourcesContent":["import api from \"../../../apiurl\";\nimport { tokenConfig } from \"../usermanagement/auth\";\nimport { message } from \"antd\";\n\nimport {\n  USER_PREFERENCE_UPDATED,\n  USER_PREFERENCE_UPDATE_ERROR,\n  USER_PREFERENCE_UPDATING\n} from \"../../types\";\n\nexport const updateUserPreference = (userid, userdata) => (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: USER_PREFERENCE_UPDATING });\n  api\n    .patch(\n      \"/user_preferences/\"+userid.toString()+\"/\",\n      userdata,\n      tokenConfig(getState)\n    )\n    .then(res => {\n      dispatch({\n        type: USER_PREFERENCE_UPDATED,\n        payload: res.data\n      });\n      message.success(\"User prefernece updated successfully\");\n    })\n    .catch(err => {\n      let err_msg = \"\";\n      if (\"detail\" in err.response.data) {\n        err_msg = err.response.data.detail;\n      } else {\n        for (var key in err.response.data) {\n          err_msg += err.response.data[key];\n        }\n      }\n      dispatch({\n        type: USER_PREFERENCE_UPDATE_ERROR,\n        payload: err_msg\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}