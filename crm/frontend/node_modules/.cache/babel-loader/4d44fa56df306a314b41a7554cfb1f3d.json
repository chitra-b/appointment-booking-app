{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/appointmentdetails.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAppointmentDetails } from \"../../actions/appointment/getappointmentdetails\";\nimport CancelAppointment from \"./cancelappointment\";\nimport EditAppointment from \"./editappointment\";\nimport { DATE_TIME_WORDINGS, TIME_FORMAT_AM_PM } from \"../../actions/types\";\nimport { Row, Col, Icon, Empty, Spin, PageHeader, Divider, Button, Descriptions, Alert, Modal } from \"antd\";\nimport moment from \"moment\";\nmoment.tz.setDefault(\"Asia/Calcutta\");\n\nclass AppointmentDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = modalType => {\n      this.setState({\n        [modalType]: true\n      });\n    };\n\n    this.handleCancel = modalType => {\n      this.setState({\n        [modalType]: false\n      });\n    };\n\n    if (this.props.match.params.id) {\n      this.props.getAppointmentDetails(this.props.match.params.id);\n    }\n\n    this.state = {\n      cancelApptModalVisible: false,\n      editApptModalVisible: false\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"content-section\",\n      type: \"flex\",\n      justify: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.appointmentDetails.isError ? React.createElement(Empty, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.appointmentDetails.isLoading ? React.createElement(Spin, {\n      tip: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : this.props.appointmentDetails.appointment ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"time\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, moment(this.props.appointmentDetails.appointment.start_time).format('dddd')), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, moment(this.props.appointmentDetails.appointment.start_time).format('MMMM')), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, moment(this.props.appointmentDetails.appointment.start_time).date()))), React.createElement(\"div\", {\n      className: \"appointment_details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, moment(this.props.appointmentDetails.appointment.start_time).format(DATE_TIME_WORDINGS), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \\u2012 \"), moment(this.props.appointmentDetails.appointment.start_time).isSame(moment(this.props.appointmentDetails.appointment.end_time), 'date') ? moment(this.props.appointmentDetails.appointment.end_time).format(TIME_FORMAT_AM_PM) : moment(this.props.appointmentDetails.appointment.end_time).format(DATE_TIME_WORDINGS)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.cancelled ? React.createElement(\"div\", {\n      className: \"appointment-cancelled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"close-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Cancelled\"), \"\\u2002\", React.createElement(\"span\", {\n      className: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.cancellation_reason)) : null), React.createElement(\"div\", {\n      className: \"appointment-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"clock-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.slot_duration, \" min.\")), React.createElement(\"div\", {\n      className: \"appointment-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Assigned to \", React.createElement(Button, {\n      className: \"inner-notes\",\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.user))), React.createElement(\"div\", {\n      className: \"appointment-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"bars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Lead status \", React.createElement(Button, {\n      className: \"inner-notes\",\n      type: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.lead_status))), this.props.appointmentDetails.appointment.notes ? React.createElement(\"div\", {\n      className: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      message: this.props.appointmentDetails.appointment.notes,\n      type: \"info\",\n      showIcon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })) : null), !this.props.appointmentDetails.appointment.cancelled ? React.createElement(\"div\", {\n      className: \"appointment-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.showModal('rescheduleApptModalVisible'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Reschedule\"), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.showModal('cancelApptModalVisible'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.showModal('editApptModalVisible'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Modal, {\n      title: \"Cancel Appointment\",\n      visible: this.state.cancelApptModalVisible,\n      onCancel: e => this.handleCancel('cancelApptModalVisible'),\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CancelAppointment, {\n      id: this.props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: \"Edit Appointment\",\n      visible: this.state.editApptModalVisible,\n      onCancel: e => this.handleCancel('editApptModalVisible'),\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(EditAppointment, {\n      closeModal: this.handleCancel,\n      id: this.props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))) : null, this.props.appointmentDetails.appointment.client ? React.createElement(\"div\", {\n      className: \"client_details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Descriptions, {\n      column: 1,\n      title: \"Client Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Descriptions.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.client.client_name), React.createElement(Descriptions.Item, {\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.client.client_email_id), React.createElement(Descriptions.Item, {\n      label: \"Telephone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.appointmentDetails.appointment.client.client_contact_mobile_number))) : null) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  appointmentDetails: state.appointmentDetails,\n  updateAppointment: state.updateAppointment\n});\n\nexport default connect(mapStateToProps, {\n  getAppointmentDetails\n})(AppointmentDetails);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/appointmentdetails.js"],"names":["React","Fragment","connect","getAppointmentDetails","CancelAppointment","EditAppointment","DATE_TIME_WORDINGS","TIME_FORMAT_AM_PM","Row","Col","Icon","Empty","Spin","PageHeader","Divider","Button","Descriptions","Alert","Modal","moment","tz","setDefault","AppointmentDetails","Component","constructor","props","showModal","modalType","setState","handleCancel","match","params","id","state","cancelApptModalVisible","editApptModalVisible","render","appointmentDetails","isError","isLoading","appointment","start_time","format","date","isSame","end_time","cancelled","cancellation_reason","slot_duration","user","lead_status","notes","e","client","client_name","client_email_id","client_contact_mobile_number","mapStateToProps","updateAppointment"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAppointmentDetails } from \"../../actions/appointment/getappointmentdetails\";\nimport CancelAppointment from \"./cancelappointment\";\nimport EditAppointment from \"./editappointment\";\nimport { DATE_TIME_WORDINGS, TIME_FORMAT_AM_PM } from \"../../actions/types\";\nimport {\n    Row,\n    Col,\n    Icon,\n    Empty,\n    Spin,\n    PageHeader,\n    Divider,\n    Button,\n    Descriptions,\n    Alert,\n    Modal\n} from \"antd\";\nimport moment from \"moment\";\nmoment.tz.setDefault(\"Asia/Calcutta\");\n\nclass AppointmentDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        if (this.props.match.params.id) {\n            this.props.getAppointmentDetails(this.props.match.params.id);\n        }\n        this.state = { cancelApptModalVisible: false, editApptModalVisible: false };\n    }\n    showModal = (modalType) => {\n        this.setState({\n            [modalType]: true,\n        });\n    };\n    handleCancel = (modalType) => {\n        this.setState({\n            [modalType]: false,\n        });\n    };\n    render() {\n        return (\n            <Fragment>\n                <PageHeader className=\"page-header\">\n                </PageHeader>\n                <Row className=\"content-section\" type=\"flex\" justify=\"start\">\n                    <Col xs={24} sm={24} md={24} lg={24}>\n                        {this.props.appointmentDetails.isError ?\n                            <Empty /> :\n                            <Fragment>\n                                {this.props.appointmentDetails.isLoading ?\n                                    <Spin tip=\"Loading...\" /> :\n                                    (\n                                        this.props.appointmentDetails.appointment ?\n                                            <Fragment>\n                                                <Divider orientation=\"left\">\n                                                    <time className=\"icon\">\n                                                        <em>\n                                                            {moment(this.props.appointmentDetails.appointment.start_time).format('dddd')}\n                                                        </em>\n                                                        <strong>\n                                                            {moment(this.props.appointmentDetails.appointment.start_time).format('MMMM')}\n                                                        </strong>\n                                                        <span>{moment(this.props.appointmentDetails.appointment.start_time).date()}</span>\n                                                    </time>\n                                                </Divider>\n                                                <div className=\"appointment_details\">\n                                                    <h2>\n\n                                                        {moment(this.props.appointmentDetails.appointment.start_time).format(DATE_TIME_WORDINGS)}\n                                                        <span> &#8210; </span>\n                                                        {/* check if start and end time is on same day, then don't display the end time date. */}\n                                                        {\n                                                            moment(this.props.appointmentDetails.appointment.start_time).isSame(moment(this.props.appointmentDetails.appointment.end_time), 'date') ?\n                                                                moment(this.props.appointmentDetails.appointment.end_time).format(TIME_FORMAT_AM_PM)\n                                                                :\n                                                                moment(this.props.appointmentDetails.appointment.end_time).format(DATE_TIME_WORDINGS)\n                                                        }\n                                                    </h2>\n                                                    {/* show cancelled status and reason */}\n                                                    <h3>\n                                                        {this.props.appointmentDetails.appointment.cancelled ?\n                                                            (<div className=\"appointment-cancelled\">\n                                                                <Icon type=\"close-circle\" /><span>Cancelled</span>\n                                                                &#8194;<span className=\"notes\">{this.props.appointmentDetails.appointment.cancellation_reason}</span>\n                                                            </div>)\n                                                            : null}\n                                                    </h3>\n                                                    <div className=\"appointment-item\">\n                                                        <Icon type=\"clock-circle\" />\n                                                        <span>\n                                                            {this.props.appointmentDetails.appointment.slot_duration} min.\n                                                        </span>\n                                                    </div>\n                                                    <div className=\"appointment-item\">\n                                                        <Icon type=\"team\" />\n                                                        <span>\n                                                            Assigned to <Button className=\"inner-notes\" type=\"link\">\n                                                                {this.props.appointmentDetails.appointment.user}\n                                                            </Button>\n                                                        </span>\n                                                    </div>\n                                                    <div className=\"appointment-item\">\n                                                        <Icon type=\"bars\" />\n                                                        <span>\n                                                            Lead status <Button className=\"inner-notes\" type=\"link\">\n                                                                {this.props.appointmentDetails.appointment.lead_status}\n                                                            </Button>\n                                                        </span>\n                                                    </div>\n                                                    {this.props.appointmentDetails.appointment.notes ?\n                                                        <div className=\"notes\">\n                                                            <Alert\n                                                                message={this.props.appointmentDetails.appointment.notes}\n                                                                type=\"info\"\n                                                                showIcon\n                                                            />\n                                                        </div>\n                                                        : null}\n                                                </div>\n                                                {/* show actions if appointment is not cancelled */}\n                                                {!this.props.appointmentDetails.appointment.cancelled ?\n                                                    <div className=\"appointment-actions\">\n                                                        <Button type=\"primary\" onClick={() => this.showModal('rescheduleApptModalVisible')}>Reschedule</Button>\n                                                        <Button type=\"primary\" onClick={() => this.showModal('cancelApptModalVisible')}>Cancel</Button>\n                                                        <Button type=\"primary\" onClick={() => this.showModal('editApptModalVisible')}>Edit</Button>\n                                                        <Modal\n                                                            title=\"Cancel Appointment\"\n                                                            visible={this.state.cancelApptModalVisible}\n                                                            onCancel={(e) => this.handleCancel('cancelApptModalVisible')}\n                                                            footer={null}\n                                                        >\n                                                            <CancelAppointment id={this.props.match.params.id} />\n                                                        </Modal>\n                                                        <Modal\n                                                            title=\"Edit Appointment\"\n                                                            visible={this.state.editApptModalVisible}\n                                                            onCancel={(e) => this.handleCancel('editApptModalVisible')}\n                                                            footer={null}\n                                                        >\n                                                            <EditAppointment closeModal={this.handleCancel} id={this.props.match.params.id} />\n                                                        </Modal>\n                                                    </div>\n                                                    : null}\n                                                {/* show client details */}\n                                                {this.props.appointmentDetails.appointment.client ?\n                                                    <div className=\"client_details\">\n                                                        <Descriptions column={1} title=\"Client Details\">\n                                                            <Descriptions.Item label=\"Name\">{this.props.appointmentDetails.appointment.client.client_name}</Descriptions.Item>\n                                                            <Descriptions.Item label=\"Email\">{this.props.appointmentDetails.appointment.client.client_email_id}</Descriptions.Item>\n                                                            <Descriptions.Item label=\"Telephone\">{this.props.appointmentDetails.appointment.client.client_contact_mobile_number}</Descriptions.Item>\n                                                        </Descriptions>\n                                                    </div>\n                                                    : null}\n                                            </Fragment>\n                                            : null\n                                    )\n                                }\n                            </Fragment>\n                        }\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    appointmentDetails: state.appointmentDetails,\n    updateAppointment: state.updateAppointment,\n});\nexport default connect(mapStateToProps, { getAppointmentDetails })(AppointmentDetails)\n\n"]},"metadata":{},"sourceType":"module"}