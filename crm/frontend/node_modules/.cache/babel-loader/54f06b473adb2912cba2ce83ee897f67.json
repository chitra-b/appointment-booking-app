{"ast":null,"code":"import api from \"../../apiurl\";\nimport { tokenConfig } from \"../accounts/usermanagement/auth\";\nimport { APPOINTMENTS_FETCH_ERROR, APPOINTMENTS_LOADED, APPOINTMENTS_LOADING } from \"../types\";\nexport const getUserAppointments = (start_time = '', end_time = '') => (dispatch, getState) => {\n  dispatch({\n    type: APPOINTMENTS_LOADING\n  });\n  api.get(\"/api/v1/appointments/\" + username + \"/?slot_duration=\" + slot_duration + \"&month=\" + month + \"&timezone=\" + timezone, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: APPOINTMENTS_LOADED,\n      payload: res.data.results\n    });\n  }).catch(err => {\n    let err_msg = \"\";\n\n    if (\"detail\" in err.response.data) {\n      err_msg = err.response.data.detail;\n    } else {\n      for (var key in err.response.data) {\n        err_msg += err.response.data[key];\n      }\n    }\n\n    dispatch({\n      type: APPOINTMENTS_FETCH_ERROR,\n      payload: err_msg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/appointment/getuserappointments.js"],"names":["api","tokenConfig","APPOINTMENTS_FETCH_ERROR","APPOINTMENTS_LOADED","APPOINTMENTS_LOADING","getUserAppointments","start_time","end_time","dispatch","getState","type","get","username","slot_duration","month","timezone","then","res","payload","data","results","catch","err","err_msg","response","detail","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SACEC,wBADF,EAEEC,mBAFF,EAGEC,oBAHF,QAIO,UAJP;AAMA,OAAO,MAAMC,mBAAmB,GAAI,CAACC,UAAU,GAAC,EAAZ,EAAgBC,QAAQ,GAAC,EAAzB,KAAgC,CAClEC,QADkE,EAElEC,QAFkE,KAG/D;AACHD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACCJ,EAAAA,GAAG,CACDW,GADF,CAEG,0BACAC,QADA,GAEA,kBAFA,GAEmBC,aAFnB,GAEiC,SAFjC,GAE2CC,KAF3C,GAEiD,YAFjD,GAE8DC,QAJjE,EAKGd,WAAW,CAACQ,QAAD,CALd,EAOEO,IAPF,CAOOC,GAAG,IAAI;AACXT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,mBADC;AAEPe,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFX,KAAD,CAAR;AAID,GAZF,EAaEC,KAbF,CAaQC,GAAG,IAAI;AACZ,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,YAAYD,GAAG,CAACE,QAAJ,CAAaL,IAA7B,EAAmC;AACjCI,MAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,MAA5B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACE,QAAJ,CAAaL,IAA7B,EAAmC;AACjCI,QAAAA,OAAO,IAAID,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBO,GAAlB,CAAX;AACD;AACF;;AACDlB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,wBADC;AAEPgB,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GA1BF;AA2BF,CAhCM","sourcesContent":["import api from \"../../apiurl\";\nimport { tokenConfig } from \"../accounts/usermanagement/auth\";\nimport {\n  APPOINTMENTS_FETCH_ERROR,\n  APPOINTMENTS_LOADED,\n  APPOINTMENTS_LOADING\n} from \"../types\";\n\nexport const getUserAppointments =  (start_time='', end_time='') => (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: APPOINTMENTS_LOADING });\n   api\n    .get(\n      \"/api/v1/appointments/\"+\n      username +\n      \"/?slot_duration=\"+slot_duration+\"&month=\"+month+\"&timezone=\"+timezone,\n      tokenConfig(getState)\n    )\n    .then(res => {\n      dispatch({\n        type: APPOINTMENTS_LOADED,\n        payload: res.data.results\n      });\n    })\n    .catch(err => {\n      let err_msg = \"\";\n      if (\"detail\" in err.response.data) {\n        err_msg = err.response.data.detail;\n      } else {\n        for (var key in err.response.data) {\n          err_msg += err.response.data[key];\n        }\n      }\n      dispatch({\n        type: APPOINTMENTS_FETCH_ERROR,\n        payload: err_msg\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}