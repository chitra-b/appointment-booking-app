{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/common/search-select-users.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport debounce from 'lodash/debounce';\nimport { Select, Spin } from \"antd\";\nconst Option = Select.Option;\nexport class SearchSelectUsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      value: [],\n      fetching: false\n    };\n\n    this.fetchUser = value => {\n      console.log('fetching user', value);\n      this.lastFetchId += 1;\n      const fetchId = this.lastFetchId;\n      this.setState({\n        data: [],\n        fetching: true\n      });\n      fetch('https://randomuser.me/api/?results=5').then(response => response.json()).then(body => {\n        if (fetchId !== this.lastFetchId) {\n          // for fetch callback order\n          return;\n        }\n\n        const data = body.results.map(user => ({\n          text: \"\".concat(user.name.first, \" \").concat(user.name.last),\n          value: user.login.username\n        }));\n        this.setState({\n          data,\n          fetching: false\n        });\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        value,\n        data: [],\n        fetching: false\n      });\n    };\n\n    this.lastFetchId = 0;\n    this.fetchUser = debounce(this.fetchUser, 800);\n  }\n\n  render() {\n    const _this$state = this.state,\n          fetching = _this$state.fetching,\n          data = _this$state.data,\n          value = _this$state.value;\n    return React.createElement(Select, {\n      mode: \"multiple\",\n      labelInValue: true,\n      value: value,\n      placeholder: \"Select users\",\n      notFoundContent: fetching ? React.createElement(Spin, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : null,\n      filterOption: false,\n      onSearch: this.fetchUser,\n      onChange: this.handleChange,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, data.map(d => React.createElement(Option, {\n      key: d.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, d.text)));\n  }\n\n}","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/common/search-select-users.js"],"names":["React","Fragment","connect","debounce","Select","Spin","Option","SearchSelectUsers","Component","constructor","props","state","data","value","fetching","fetchUser","console","log","lastFetchId","fetchId","setState","fetch","then","response","json","body","results","map","user","text","name","first","last","login","username","handleChange","render","width","d"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport debounce from 'lodash/debounce';\n\nimport {\n    Select,\n    Spin\n} from \"antd\";\nconst { Option } = Select;\n\nexport class SearchSelectUsers extends React.Component {\n    constructor(props) {\n      super(props);\n      this.lastFetchId = 0;\n      this.fetchUser = debounce(this.fetchUser, 800);\n    }\n  \n    state = {\n      data: [],\n      value: [],\n      fetching: false,\n    };\n  \n    fetchUser = value => {\n      console.log('fetching user', value);\n      this.lastFetchId += 1;\n      const fetchId = this.lastFetchId;\n      this.setState({ data: [], fetching: true });\n      fetch('https://randomuser.me/api/?results=5')\n        .then(response => response.json())\n        .then(body => {\n          if (fetchId !== this.lastFetchId) {\n            // for fetch callback order\n            return;\n          }\n          const data = body.results.map(user => ({\n            text: `${user.name.first} ${user.name.last}`,\n            value: user.login.username,\n          }));\n          this.setState({ data, fetching: false });\n        });\n    };\n  \n    handleChange = value => {\n      this.setState({\n        value,\n        data: [],\n        fetching: false,\n      });\n    };\n  \n    render() {\n      const { fetching, data, value } = this.state;\n      return (\n        <Select\n          mode=\"multiple\"\n          labelInValue\n          value={value}\n          placeholder=\"Select users\"\n          notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n          filterOption={false}\n          onSearch={this.fetchUser}\n          onChange={this.handleChange}\n          style={{ width: '100%' }}\n        >\n          {data.map(d => (\n            <Option key={d.value}>{d.text}</Option>\n          ))}\n        </Select>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}