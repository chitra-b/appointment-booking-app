{"ast":null,"code":"import { SET_APPOINTMENT_FILTER } from \"../../actions/types\";\nexport const filterAppointments = (startDate = '', endDate = '', flag_team_appointments = false) => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: SET_APPOINTMENT_FILTER,\n      payload: {\n        startDate: startDate,\n        endDate: endDate\n      }\n    }).then(response => {\n      resolve(response);\n    }).catch(err => {\n      console.log(\"GET err \", err);\n      reject(err);\n    });\n  });\n  dispatch({\n    type: SET_APPOINTMENT_FILTER,\n    payload: {\n      startDate: startDate,\n      endDate: endDate\n    }\n  });\n  dispatch({\n    type: APPOINTMENTS_LOADING\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/appointment/filterAppointments.js"],"names":["SET_APPOINTMENT_FILTER","filterAppointments","startDate","endDate","flag_team_appointments","dispatch","getState","Promise","resolve","reject","type","payload","then","response","catch","err","console","log","APPOINTMENTS_LOADING"],"mappings":"AAAA,SACIA,sBADJ,QAEO,qBAFP;AAIA,OAAO,MAAMC,kBAAkB,GAAI,CAACC,SAAS,GAAC,EAAX,EAAeC,OAAO,GAAC,EAAvB,EAA2BC,sBAAsB,GAAC,KAAlD,KAA4D,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrH,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,sBADC;AAEPW,MAAAA,OAAO,EAAE;AACPT,QAAAA,SAAS,EAACA,SADH;AAEPC,QAAAA,OAAO,EAAEA;AAFF;AAFF,KAAD,CAAR,CAOGS,IAPH,CAOQC,QAAQ,IAAI;AAChBL,MAAAA,OAAO,CAACK,QAAD,CAAP;AACD,KATH,EAUGC,KAVH,CAUSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;AACAN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACD,KAbH;AAcD,GAfM,CAAP;AAgBAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,sBADC;AAEPW,IAAAA,OAAO,EAAE;AACPT,MAAAA,SAAS,EAACA,SADH;AAEPC,MAAAA,OAAO,EAAEA;AAFF;AAFF,GAAD,CAAR;AAOAE,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEQ;AAAR,GAAD,CAAR;AACD,CAzBM","sourcesContent":["import {\n    SET_APPOINTMENT_FILTER\n} from \"../../actions/types\";\n\nexport const filterAppointments =  (startDate='', endDate='', flag_team_appointments=false) => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    dispatch({\n      type: SET_APPOINTMENT_FILTER,\n      payload: {\n        startDate:startDate,\n        endDate: endDate\n      }\n    })\n      .then(response => {\n        resolve(response);\n      })\n      .catch(err => {\n        console.log(\"GET err \", err);\n        reject(err);\n      });\n  });\n  dispatch({\n    type: SET_APPOINTMENT_FILTER,\n    payload: {\n      startDate:startDate,\n      endDate: endDate\n    }\n  })\n  dispatch({ type: APPOINTMENTS_LOADING });\n}\n"]},"metadata":{},"sourceType":"module"}