{"ast":null,"code":"import api from \"../../../apiurl\";\nimport { tokenConfig } from \"../usermanagement/auth\";\nimport { USER_PREFERENCE_LOADED, USER_PREFERENCE_LOAD_ERROR, USER_PREFERENCE_LOADING } from \"../../types\";\nexport const getUserPreference = userid => (dispatch, getState) => {\n  dispatch({\n    type: USER_PREFERENCE_LOADING\n  });\n  api.get(\"/user_preferences/\", tokenConfig(getState)).then(res => {\n    dispatch({\n      type: USER_PREFERENCE_LOADED,\n      payload: res.data[0]\n    });\n  }).catch(err => {\n    let err_msg = \"\";\n\n    if (\"detail\" in err.response.data) {\n      err_msg = err.response.data.detail;\n    } else {\n      for (var key in err.response.data) {\n        err_msg += err.response.data[key];\n      }\n    }\n\n    dispatch({\n      type: USER_PREFERENCE_LOAD_ERROR,\n      payload: err_msg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/accounts/userpreference/loadpreference.js"],"names":["api","tokenConfig","USER_PREFERENCE_LOADED","USER_PREFERENCE_LOAD_ERROR","USER_PREFERENCE_LOADING","getUserPreference","userid","dispatch","getState","type","get","then","res","payload","data","catch","err","err_msg","response","detail","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,sBADF,EAEEC,0BAFF,EAGEC,uBAHF,QAIO,aAJP;AAMA,OAAO,MAAMC,iBAAiB,GAAGC,MAAM,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAJ,EAAAA,GAAG,CACAU,GADH,CACO,oBADP,EAC6BT,WAAW,CAACO,QAAD,CADxC,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,sBADC;AAEPW,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAAS,CAAT;AAFF,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZ,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,YAAYD,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,EAAmC;AACjCG,MAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,MAA5B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,EAAmC;AACjCG,QAAAA,OAAO,IAAID,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBM,GAAlB,CAAX;AACD;AACF;;AACDb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,0BADC;AAEPU,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GArBH;AAsBD,CAxBM","sourcesContent":["import api from \"../../../apiurl\";\nimport { tokenConfig } from \"../usermanagement/auth\";\nimport {\n  USER_PREFERENCE_LOADED,\n  USER_PREFERENCE_LOAD_ERROR,\n  USER_PREFERENCE_LOADING\n} from \"../../types\";\n\nexport const getUserPreference = userid => (dispatch, getState) => {\n  dispatch({ type: USER_PREFERENCE_LOADING });\n  api\n    .get(\"/user_preferences/\", tokenConfig(getState))\n    .then(res => {\n      dispatch({\n        type: USER_PREFERENCE_LOADED,\n        payload: res.data[0]\n      });\n    })\n    .catch(err => {\n      let err_msg = \"\";\n      if (\"detail\" in err.response.data) {\n        err_msg = err.response.data.detail;\n      } else {\n        for (var key in err.response.data) {\n          err_msg += err.response.data[key];\n        }\n      }\n      dispatch({\n        type: USER_PREFERENCE_LOAD_ERROR,\n        payload: err_msg\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}