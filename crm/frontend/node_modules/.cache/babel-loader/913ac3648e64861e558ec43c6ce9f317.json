{"ast":null,"code":"import api from \"../../../apiurl\";\nimport { tokenConfig } from \"./../usermanagement/auth\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, REGISTER_LOADING } from \"../../types\";\nimport { message } from \"antd\"; //Create new user\n\nexport const createUser = userdata => (dispatch, getState) => {\n  dispatch({\n    type: REGISTER_LOADING\n  });\n  const body = JSON.stringify(userdata);\n  api.post(\"/api/v1/users/\", body, tokenConfig(getState)).then(res => {\n    message.success(\"User created successfully\");\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    let err_msg = \"\";\n\n    if (\"detail\" in err.response.data) {\n      err_msg = err.response.data.detail;\n    } else {\n      for (var key in err.response.data) {\n        err_msg += err.response.data[key];\n      }\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err_msg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/accounts/usermanagement/createuser.js"],"names":["api","tokenConfig","REGISTER_SUCCESS","REGISTER_FAIL","REGISTER_LOADING","message","createUser","userdata","dispatch","getState","type","body","JSON","stringify","post","then","res","success","payload","data","catch","err","err_msg","response","detail","key"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,gBAA1C,QAAkE,aAAlE;AACA,SAASC,OAAT,QAAwB,MAAxB,C,CAEA;;AAEA,OAAO,MAAMC,UAAU,GAAGC,QAAQ,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACA,QAAMO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAb;AACAP,EAAAA,GAAG,CACAc,IADH,CACQ,gBADR,EAC0BH,IAD1B,EACgCV,WAAW,CAACQ,QAAD,CAD3C,EAEGM,IAFH,CAEQC,GAAG,IAAI;AACXX,IAAAA,OAAO,CAACY,OAAR,CAAgB,2BAAhB;AACAT,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,gBADC;AAEPgB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GARH,EASGC,KATH,CASSC,GAAG,IAAI;AACZ,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,YAAYD,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,EAAmC;AACjCG,MAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,MAA5B;AACD,KAFD,MAEO;AACL,WAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,EAAmC;AACjCG,QAAAA,OAAO,IAAID,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBM,GAAlB,CAAX;AACD;AACF;;AACDjB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,aADC;AAEPe,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GAtBH;AAuBD,CA1BM","sourcesContent":["import api from \"../../../apiurl\";\nimport { tokenConfig } from \"./../usermanagement/auth\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, REGISTER_LOADING } from \"../../types\";\nimport { message } from \"antd\";\n\n//Create new user\n\nexport const createUser = userdata => (dispatch, getState) => {\n  dispatch({ type: REGISTER_LOADING });\n  const body = JSON.stringify(userdata);\n  api\n    .post(\"/api/v1/users/\", body, tokenConfig(getState))\n    .then(res => {\n      message.success(\"User created successfully\");\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      let err_msg = \"\";\n      if (\"detail\" in err.response.data) {\n        err_msg = err.response.data.detail;\n      } else {\n        for (var key in err.response.data) {\n          err_msg += err.response.data[key];\n        }\n      }\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err_msg\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}