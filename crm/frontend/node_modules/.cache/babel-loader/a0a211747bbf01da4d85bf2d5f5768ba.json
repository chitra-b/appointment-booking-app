{"ast":null,"code":"import { SET_APPOINTMENT_FILTER } from \"../../actions/types\";\nexport const filterAppointments = (startDate = '', endDate = '', flag_team_appointments = false) => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    http({\n      method: \"get\",\n      url,\n      params\n    }).then(response => {\n      resolve(response);\n    }).catch(err => {\n      console.log(\"GET err \", err);\n      reject(err);\n    });\n  });\n  dispatch({\n    type: SET_APPOINTMENT_FILTER,\n    payload: {\n      startDate: startDate,\n      endDate: endDate\n    }\n  });\n  dispatch({\n    type: APPOINTMENTS_LOADING\n  });\n};","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/actions/appointment/filterAppointments.js"],"names":["SET_APPOINTMENT_FILTER","filterAppointments","startDate","endDate","flag_team_appointments","dispatch","getState","Promise","resolve","reject","http","method","url","params","then","response","catch","err","console","log","type","payload","APPOINTMENTS_LOADING"],"mappings":"AAAA,SACIA,sBADJ,QAEO,qBAFP;AAIA,OAAO,MAAMC,kBAAkB,GAAI,CAACC,SAAS,GAAC,EAAX,EAAeC,OAAO,GAAC,EAAvB,EAA2BC,sBAAsB,GAAC,KAAlD,KAA4D,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrH,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,IAAI,CAAC;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHC,MAAAA,GAFG;AAGHC,MAAAA;AAHG,KAAD,CAAJ,CAKGC,IALH,CAKQC,QAAQ,IAAI;AAChBP,MAAAA,OAAO,CAACO,QAAD,CAAP;AACD,KAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;AACAR,MAAAA,MAAM,CAACQ,GAAD,CAAN;AACD,KAXH;AAYD,GAbM,CAAP;AAcAZ,EAAAA,QAAQ,CAAC;AACPe,IAAAA,IAAI,EAAEpB,sBADC;AAEPqB,IAAAA,OAAO,EAAE;AACPnB,MAAAA,SAAS,EAACA,SADH;AAEPC,MAAAA,OAAO,EAAEA;AAFF;AAFF,GAAD,CAAR;AAOAE,EAAAA,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAEE;AAAR,GAAD,CAAR;AACD,CAvBM","sourcesContent":["import {\n    SET_APPOINTMENT_FILTER\n} from \"../../actions/types\";\n\nexport const filterAppointments =  (startDate='', endDate='', flag_team_appointments=false) => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    http({\n      method: \"get\",\n      url,\n      params\n    })\n      .then(response => {\n        resolve(response);\n      })\n      .catch(err => {\n        console.log(\"GET err \", err);\n        reject(err);\n      });\n  });\n  dispatch({\n    type: SET_APPOINTMENT_FILTER,\n    payload: {\n      startDate:startDate,\n      endDate: endDate\n    }\n  })\n  dispatch({ type: APPOINTMENTS_LOADING });\n}\n"]},"metadata":{},"sourceType":"module"}