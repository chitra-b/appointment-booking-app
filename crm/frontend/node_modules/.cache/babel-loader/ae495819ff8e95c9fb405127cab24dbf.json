{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/filterappointments.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DatePicker, Form, Row, Col, Button, Icon, Drawer } from \"antd\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { config } from \"@fullcalendar/core\";\nimport moment from \"moment\";\nimport { DATE_FORMAT, isMobile } from \"../../actions/types\";\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nexport class FilterUI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDrawer = () => {\n      this.setState({\n        isFilterDrawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        isFilterDrawerVisible: false\n      });\n    };\n\n    this.state = {\n      isFilterDrawerVisible: false\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        marginBottom: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"Show Filters\"))), React.createElement(Drawer, {\n      onClose: this.onClose,\n      visible: this.state.isFilterDrawerVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.children)) : this.props.children);\n  }\n\n}\n\nclass FilterAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setStartDate = value => {\n      this.setState({\n        start_date: value.format(DATE_FORMAT)\n      }, this.handleFilter);\n    };\n\n    this.setEndDate = value => {\n      this.setState({\n        end_date: value.format(DATE_FORMAT)\n      }, this.handleFilter);\n    };\n\n    this.handleFilter = () => {\n      this.props.getUserAppointments(this.state.start_date, this.state.end_date);\n    };\n\n    this.state = {\n      start_date: moment(this.props.start_date).format(DATE_FORMAT),\n      end_date: moment(this.props.end_date).format(DATE_FORMAT)\n    };\n  }\n\n  // handleSubmit = e => {\n  //   // e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     if (!err) {\n  //       this.props.getUserAppointments(\n  //         this.state.start_date.format(DATE_FORMAT),\n  //         this.state.end_date.format(DATE_FORMAT)\n  //       );\n  //     }\n  //   });\n  // };\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      className: \"filterappoinments-form\",\n      style: {\n        marginBottom: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 16,\n      type: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 10,\n      sm: 10,\n      md: 14,\n      lg: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: 7,\n      sm: 7,\n      md: 5,\n      lg: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"From\",\n      htmlFor: \"start_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), getFieldDecorator(\"start_time\", {\n      rules: [{\n        required: false,\n        message: \"Please select time!\"\n      }],\n      initialValue: moment(this.state.start_date, DATE_FORMAT)\n    })(React.createElement(DatePicker, {\n      onChange: this.setStartDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 7,\n      sm: 7,\n      md: 6,\n      lg: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"To\",\n      htmlFor: \"end_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), getFieldDecorator(\"end_time\", {\n      rules: [{\n        required: false,\n        message: \"Please select time!\"\n      }],\n      initialValue: moment(this.props.end_date, DATE_FORMAT)\n    })(React.createElement(DatePicker, {\n      onChange: value => this.setEndDate(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\n\nconst FilterAppointmentsApp = connect(mapStateToProps, {\n  getUserAppointments\n})(FilterAppointments);\nconst FilterAppointmentsForm = Form.create({\n  name: \"AppointmentsFilterForm\"\n})(FilterAppointmentsApp); //const FilterFormApp = connect(mapStateToProps, { })(FilterUI)\n//const FilterForm = Form.create()(FilterUI);\n\nexport default FilterAppointmentsForm;","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/filterappointments.js"],"names":["React","Fragment","connect","DatePicker","Form","Row","Col","Button","Icon","Drawer","getUserAppointments","config","moment","DATE_FORMAT","isMobile","MonthPicker","RangePicker","WeekPicker","FilterUI","Component","constructor","props","showDrawer","setState","isFilterDrawerVisible","onClose","state","render","marginBottom","children","FilterAppointments","setStartDate","value","start_date","format","handleFilter","setEndDate","end_date","getFieldDecorator","form","formItemLayout","labelCol","span","wrapperCol","rules","required","message","initialValue","mapStateToProps","userAppointments","FilterAppointmentsApp","FilterAppointmentsForm","create","name"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DatePicker, Form, Row, Col, Button, Icon, Drawer } from \"antd\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { config } from \"@fullcalendar/core\";\nimport moment from \"moment\";\nimport { DATE_FORMAT, isMobile } from \"../../actions/types\";\n\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nexport class FilterUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFilterDrawerVisible: false\n    };\n  }\n  showDrawer = () => {\n    this.setState({ isFilterDrawerVisible: true });\n  };\n\n  onClose = () => {\n    this.setState({ isFilterDrawerVisible: false });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {isMobile ? (\n          <Fragment>\n            <Row>\n              <Col>\n                {\" \"}\n                <Button\n                  type=\"primary\"\n                  onClick={this.showDrawer}\n                  style={{ marginBottom: \"15px\" }}\n                >\n                  <Icon type=\"filter\" />\n                  Show Filters\n                </Button>\n              </Col>\n            </Row>\n\n            <Drawer\n              onClose={this.onClose}\n              visible={this.state.isFilterDrawerVisible}\n            >\n              {this.props.children}\n            </Drawer>\n          </Fragment>\n        ) : (\n          this.props.children\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass FilterAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start_date: moment(this.props.start_date).format(DATE_FORMAT),\n      end_date: moment(this.props.end_date).format(DATE_FORMAT)\n    };\n  }\n\n  setStartDate = value => {\n    this.setState({ start_date: value.format(DATE_FORMAT) }, this.handleFilter);\n  };\n  setEndDate = value => {\n    this.setState({ end_date: value.format(DATE_FORMAT) }, this.handleFilter);\n  };\n  handleFilter = () => {\n    this.props.getUserAppointments(this.state.start_date, this.state.end_date);\n  };\n\n  // handleSubmit = e => {\n  //   // e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     if (!err) {\n  //       this.props.getUserAppointments(\n  //         this.state.start_date.format(DATE_FORMAT),\n  //         this.state.end_date.format(DATE_FORMAT)\n  //       );\n  //     }\n  //   });\n  // };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 }\n    };\n\n    return (\n      <Fragment>\n        <Form\n          layout=\"inline\"\n          className=\"filterappoinments-form\"\n          style={{ marginBottom: \"15px\" }}\n        >\n          <Row gutter={16} type=\"flex\">\n            <Col xs={10} sm={10} md={14} lg={14} />\n            <Col xs={7} sm={7} md={5} lg={5}>\n              <Form.Item {...formItemLayout} label=\"From\" htmlFor=\"start_date\">\n                {getFieldDecorator(\"start_time\", {\n                  rules: [{ required: false, message: \"Please select time!\" }],\n                  initialValue: moment(this.state.start_date, DATE_FORMAT)\n                })(<DatePicker onChange={this.setStartDate} />)}\n              </Form.Item>\n            </Col>\n            <Col xs={7} sm={7} md={6} lg={5}>\n              <Form.Item {...formItemLayout} label=\"To\" htmlFor=\"end_date\">\n                {getFieldDecorator(\"end_time\", {\n                  rules: [{ required: false, message: \"Please select time!\" }],\n                  initialValue: moment(this.props.end_date, DATE_FORMAT)\n                })(<DatePicker onChange={value => this.setEndDate(value)} />)}\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\nconst FilterAppointmentsApp = connect(\n  mapStateToProps,\n  { getUserAppointments }\n)(FilterAppointments);\nconst FilterAppointmentsForm = Form.create({ name: \"AppointmentsFilterForm\" })(\n  FilterAppointmentsApp\n);\n//const FilterFormApp = connect(mapStateToProps, { })(FilterUI)\n//const FilterForm = Form.create()(FilterUI);\nexport default FilterAppointmentsForm;\n"]},"metadata":{},"sourceType":"module"}