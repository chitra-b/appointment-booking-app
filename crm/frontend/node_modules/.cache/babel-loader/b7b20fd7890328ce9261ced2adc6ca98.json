{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/bookingwidget.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport jstimezonedetect from \"jstimezonedetect\";\nimport { Redirect } from \"react-router-dom\";\nimport { reset } from \"../../actions/common\";\nimport { getUserAvailableSlots, setSelectedDate, setTimeZone, setUser, setSlotDuration, setSelectedTime } from \"../../actions/appointment/getuserslot\";\nimport { bookappointment } from \"../../actions/appointment/bookappointment\";\nimport { DATE_TIME_FORMAT, DATE_FORMAT, RESET_BOOKING_STATE } from \"../../actions/types\";\nimport { Radio, Calendar, Icon, message, Spin, Alert, Button, Input, Form } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\nimport { isMobile } from \"../../actions/types\";\nimport { Row, Col } from \"antd\";\nconst TextArea = Input.TextArea;\n\nfunction getQueryString(field, url) {\n  var href = url ? url : window.location.href;\n  var reg = new RegExp(\"[?&]\" + field + \"=([^&#]*)\", \"i\");\n  var string = reg.exec(href);\n  return string ? string[1] : null;\n}\n\nclass BookingWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    let tz = jstimezonedetect.determine();\n    this.props.setTimeZone(tz.name()); //check if reschedule request\n\n    if (this.props.reschedule) {\n      this.props.setUser(this.props.apptUser);\n      this.props.setSlotDuration(this.props.apptduration);\n    } else {\n      //book new appointment\n      let path = window.location.pathname.split(\"/\");\n      let slot_duration = getQueryString(\"slot_duration\");\n      slot_duration = slot_duration ? slot_duration : 15;\n      path.pop();\n      this.props.setUser(path.pop());\n      this.props.setSlotDuration(slot_duration);\n    }\n\n    this.state = {\n      current: 0\n    };\n  }\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({\n      current\n    });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({\n      current\n    });\n  }\n\n  render() {\n    const current = this.state.current;\n    const WrappedContactForm = Form.create({\n      name: \"ContactDetails\"\n    })(ContactDetailsApp);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      className: \"calendar-details-section\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.userSlots.user), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        fontSize: \"14px\",\n        marginRight: \"5px\"\n      },\n      type: \"clock-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), this.props.userSlots.slot_duration, \" min. Booking\"), React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        fontSize: \"14px\",\n        marginRight: \"5px\"\n      },\n      type: \"global\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.props.userSlots.timezone))), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"bookwidget calendar-book-section\",\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"booking-form-navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.reschedule && isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: isMobile && current === 1 && this.props.reschedule || !isMobile && current === 0 && this.props.reschedule || isMobile && current === 2 || current === 1 ? true : false,\n      style: {\n        float: \"right\"\n      },\n      type: \"primary\",\n      onClick: () => this.next(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Next\"), React.createElement(Button, {\n      disabled: this.state.current ? false : true,\n      style: {\n        float: \"left\"\n      },\n      type: \"primary\",\n      onClick: () => this.prev(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Prev\")) : null), this.props.reschedule ? React.createElement(\"div\", {\n      className: \"steps-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, current === 0 && React.createElement(CalendarCardViewApp, {\n      reschedule: this.props.reschedule,\n      apptDate: this.props.apptDate,\n      apptTime: this.props.apptTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), current === 1 && React.createElement(TimeSlotViewApp, {\n      reschedule: this.props.reschedule,\n      apptTime: this.props.apptTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, current === 0 && React.createElement(Row, {\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 16,\n      lg: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(CalendarCardViewApp, {\n      reschedule: this.props.reschedule,\n      apptDate: this.props.apptDate,\n      apptTime: this.props.apptTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 8,\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(TimeSlotViewApp, {\n      reschedule: this.props.reschedule,\n      apptTime: this.props.apptTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))))) : React.createElement(\"div\", {\n      className: \"steps-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, current === 0 && React.createElement(CalendarCardViewApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), current === 1 && React.createElement(TimeSlotViewApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), current === 2 && React.createElement(WrappedContactForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, current === 0 && React.createElement(Row, {\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 16,\n      lg: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(CalendarCardViewApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 8,\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(TimeSlotViewApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), current === 1 && React.createElement(WrappedContactForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nclass TimeSlotView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectedTime = e => {\n      this.props.setSelectedTime(e.target.value);\n    };\n\n    if (this.props.reschedule) {\n      if (this.props.apptTime) {\n        this.props.setSelectedTime(this.props.apptTime);\n      }\n    }\n  }\n\n  render() {\n    let availableSlots = this.props.userSlots.user_timeslot;\n    let slots = [];\n\n    if (availableSlots) {\n      for (let index = 0; index < availableSlots.length; index++) {\n        const element = availableSlots[index];\n\n        if (this.props.userSlots.selectedDate == element.date) {\n          element.spots.forEach(slot => {\n            slots.push(slot.start_time);\n          });\n          break;\n        }\n      }\n    }\n\n    let timeSlotsGroup = slots.map((value, idx) => React.createElement(Radio.Button, {\n      className: \"time-slot-radio\",\n      key: idx,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, value));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \" \", this.props.userSlots.selectedDate + \" \" + (this.props.userSlots.selectedTime ? this.props.userSlots.selectedTime : \"\")), React.createElement(Radio.Group, {\n      onChange: this.selectedTime,\n      className: \"time-slot-radiogroup\",\n      value: this.props.userSlots.selectedTime,\n      buttonStyle: \"solid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, timeSlotsGroup));\n  }\n\n}\n\nclass CalendarCardView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.disabledDate = current => {\n      let availableSlots = this.props.userSlots.user_timeslot;\n\n      if (!current) {\n        // allow empty select\n        return false;\n      }\n\n      const date = moment();\n      date.hour(0);\n      date.minute(0);\n      date.second(0);\n      let today = date.format(DATE_FORMAT);\n      let currentDate = current.format(DATE_FORMAT);\n\n      if (currentDate < today) {\n        // can not select days before today\n        return true;\n      }\n\n      if (availableSlots) {\n        let isAvailable = false;\n\n        for (let index = 0; index < availableSlots.length; index++) {\n          const element = availableSlots[index];\n\n          if (currentDate == element.date) {\n            isAvailable = true;\n            break;\n          }\n        }\n\n        if (isAvailable) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.onPanelChange = (value, mode) => {\n      this.props.getUserAvailableSlots(this.props.userSlots.user, this.props.userSlots.slot_duration, this.props.userSlots.timezone, value.year() + \"-\" + (parseInt(value.month()) + 1));\n      this.props.setSelectedDate(value.format(DATE_FORMAT));\n    };\n\n    this.onSelect = value => {\n      this.props.setSelectedDate(value.format(DATE_FORMAT)); //undo prev. selected timeslot whenever new slots are rendered for selected date\n\n      this.props.setSelectedTime(null);\n    };\n\n    if (this.props.userSlots.selectedDate) {\n      //get slots of selectedDate\n      this.props.getUserAvailableSlots(this.props.userSlots.user, this.props.userSlots.slot_duration, this.props.userSlots.timezone, moment(this.props.userSlots.selectedDate).format(\"YYYY-MM\")); //undo prev. selected timeslot whenever new slots are rendered for selected date\n\n      this.props.setSelectedTime(null);\n    } else {\n      //check if request is resecdule appt\n      if (this.props.reschedule) {\n        this.props.setSelectedDate(this.props.apptDate);\n        this.props.getUserAvailableSlots(this.props.userSlots.user, this.props.userSlots.slot_duration, this.props.userSlots.timezone); //set appt time as selected time\n\n        this.props.setSelectedTime(this.props.apptTime);\n      } else {\n        //set today as selectedDate by default and get available slots if not already set\n        this.props.setSelectedDate(moment().format(DATE_FORMAT));\n        this.props.getUserAvailableSlots(this.props.userSlots.user, this.props.userSlots.slot_duration, this.props.userSlots.timezone); //undo prev. selected timeslot whenever new slots are rendered for selected date\n\n        this.props.setSelectedTime(null);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.props.userSlots.isLoading ? React.createElement(Spin, {\n      tip: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }) : React.createElement(Calendar, {\n      defaultValue: moment(this.props.userSlots.selectedDate),\n      disabledDate: this.disabledDate,\n      fullscreen: false,\n      onPanelChange: this.onPanelChange,\n      onSelect: this.onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ContactDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (!(this.props.userSlots.selectedDate && this.props.userSlots.selectedTime)) {\n        message.error(\"Please select date and time\");\n        return false;\n      }\n\n      this.props.form.validateFields((err, values) => {\n        let appointmentData = {};\n        let slotInfo = this.props.userSlots;\n\n        if (!err) {\n          appointmentData.start_time = moment(slotInfo.selectedDate + \" \" + moment(slotInfo.selectedTime, [\"h:mm A\"]).format(\"HH:mm\")).format(DATE_TIME_FORMAT);\n          appointmentData.end_time = moment(appointmentData.start_time).add(slotInfo.slot_duration, \"minutes\");\n          appointmentData.end_time = appointmentData.end_time.format(DATE_TIME_FORMAT);\n          appointmentData.service = 1;\n          appointmentData.user = slotInfo.user;\n          appointmentData.timezone_field = slotInfo.timezone;\n          appointmentData.notes = values.notes;\n          delete values.notes;\n          appointmentData.client = values;\n          this.props.bookappointment(appointmentData);\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.reset(RESET_BOOKING_STATE);\n  }\n\n  render() {\n    if (this.props.bookAppointmentData.isBooked) {\n      return React.createElement(Redirect, {\n        to: \"/appointment/info/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      });\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, this.props.bookAppointmentData.isError ? React.createElement(Alert, {\n      message: \"Appointment failed\",\n      description: this.props.bookAppointmentData.isError,\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }) : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, getFieldDecorator(\"client_email_id\", {\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        required: true,\n        message: \"Please input your E-mail!\"\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, getFieldDecorator(\"client_name\", {\n      rules: [{\n        required: true,\n        message: \"Please input Name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Phone Numer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, getFieldDecorator(\"client_contact_mobile_number\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Phone Numer!\"\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Phone Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, getFieldDecorator(\"notes\")(React.createElement(TextArea, {\n      placeholder: \"Additional information\",\n      autosize: {\n        minRows: 2,\n        maxRows: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, this.props.bookAppointmentData.isLoading ? React.createElement(Button, {\n      type: \"primary\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  userSlots: state.getUserSlots,\n  appointmentDetails: state.appointmentDetails\n});\n\nexport default connect(mapStateToProps, {\n  getUserAvailableSlots,\n  setSelectedDate,\n  setUser,\n  setTimeZone,\n  setSlotDuration\n})(BookingWidget);\nconst CalendarCardViewApp = connect(mapStateToProps, {\n  getUserAvailableSlots,\n  setSelectedDate,\n  setUser,\n  setTimeZone,\n  setSlotDuration,\n  setSelectedTime\n})(CalendarCardView);\nconst TimeSlotViewApp = connect(mapStateToProps, {\n  getUserAvailableSlots,\n  setSelectedDate,\n  setUser,\n  setTimeZone,\n  setSlotDuration,\n  setSelectedTime\n})(TimeSlotView);\n\nconst mapStateBookToProps = state => ({\n  bookAppointmentData: state.bookAppointment,\n  userSlots: state.getUserSlots\n});\n\nconst ContactDetailsApp = connect(mapStateBookToProps, {\n  bookappointment,\n  reset\n})(ContactDetails);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/bookingwidget.js"],"names":["React","Fragment","connect","jstimezonedetect","Redirect","reset","getUserAvailableSlots","setSelectedDate","setTimeZone","setUser","setSlotDuration","setSelectedTime","bookappointment","DATE_TIME_FORMAT","DATE_FORMAT","RESET_BOOKING_STATE","Radio","Calendar","Icon","message","Spin","Alert","Button","Input","Form","moment","isMobile","Row","Col","TextArea","getQueryString","field","url","href","window","location","reg","RegExp","string","exec","BookingWidget","Component","constructor","props","tz","determine","name","reschedule","apptUser","apptduration","path","pathname","split","slot_duration","pop","state","current","next","setState","prev","render","WrappedContactForm","create","ContactDetailsApp","userSlots","user","fontSize","marginRight","float","timezone","apptDate","apptTime","TimeSlotView","selectedTime","e","target","value","availableSlots","user_timeslot","slots","index","length","element","selectedDate","date","spots","forEach","slot","push","start_time","timeSlotsGroup","map","idx","CalendarCardView","disabledDate","hour","minute","second","today","format","currentDate","isAvailable","onPanelChange","mode","year","parseInt","month","onSelect","isLoading","ContactDetails","handleSubmit","preventDefault","error","form","validateFields","err","values","appointmentData","slotInfo","end_time","add","service","timezone_field","notes","client","componentWillMount","bookAppointmentData","isBooked","getFieldDecorator","isError","rules","type","required","whitespace","minRows","maxRows","mapStateToProps","auth","getUserSlots","appointmentDetails","CalendarCardViewApp","TimeSlotViewApp","mapStateBookToProps","bookAppointment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SACEC,qBADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,OAJF,EAKEC,eALF,EAMEC,eANF,QAOO,uCAPP;AAQA,SAASC,eAAT,QAAgC,2CAAhC;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,mBAHF,QAIO,qBAJP;AAKA,SACEC,KADF,EAEEC,QAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,KARF,EASEC,IATF,QAUO,MAVP;AAWA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;MACQC,Q,GAAaN,K,CAAbM,Q;;AAER,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAoC;AAClC,MAAIC,IAAI,GAAGD,GAAG,GAAGA,GAAH,GAASE,MAAM,CAACC,QAAP,CAAgBF,IAAvC;AACA,MAAIG,GAAG,GAAG,IAAIC,MAAJ,CAAW,SAASN,KAAT,GAAiB,WAA5B,EAAyC,GAAzC,CAAV;AACA,MAAIO,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASN,IAAT,CAAb;AACA,SAAOK,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAT,GAAe,IAA5B;AACD;;AACD,MAAME,aAAN,SAA4BxC,KAAK,CAACyC,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,QAAIC,EAAE,GAAGzC,gBAAgB,CAAC0C,SAAjB,EAAT;AACA,SAAKF,KAAL,CAAWnC,WAAX,CAAuBoC,EAAE,CAACE,IAAH,EAAvB,EAHiB,CAIjB;;AACA,QAAI,KAAKH,KAAL,CAAWI,UAAf,EAA2B;AACzB,WAAKJ,KAAL,CAAWlC,OAAX,CAAmB,KAAKkC,KAAL,CAAWK,QAA9B;AACA,WAAKL,KAAL,CAAWjC,eAAX,CAA2B,KAAKiC,KAAL,CAAWM,YAAtC;AACD,KAHD,MAIK;AACH;AACA,UAAIC,IAAI,GAAGhB,MAAM,CAACC,QAAP,CAAgBgB,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,CAAX;AACA,UAAIC,aAAa,GAAGvB,cAAc,CAAC,eAAD,CAAlC;AACAuB,MAAAA,aAAa,GAAGA,aAAa,GAAGA,aAAH,GAAmB,EAAhD;AACAH,MAAAA,IAAI,CAACI,GAAL;AACA,WAAKX,KAAL,CAAWlC,OAAX,CAAmByC,IAAI,CAACI,GAAL,EAAnB;AACA,WAAKX,KAAL,CAAWjC,eAAX,CAA2B2C,aAA3B;AACD;;AACD,SAAKE,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,UAAMD,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAArC;AACA,SAAKE,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACD;;AAEDG,EAAAA,IAAI,GAAG;AACL,UAAMH,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAArC;AACA,SAAKE,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCJ,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,UAAMK,kBAAkB,GAAGrC,IAAI,CAACsC,MAAL,CAAY;AAAEhB,MAAAA,IAAI,EAAE;AAAR,KAAZ,EACzBiB,iBADyB,CAA3B;AAGA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,SAAS,EAAC,0BAA3B;AAAsD,MAAA,OAAO,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKpB,KAAL,CAAWqB,SAAX,CAAqBC,IAA1B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,WAAW,EAAE;AAAjC,OADT;AAEE,MAAA,IAAI,EAAC,cAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKxB,KAAL,CAAWqB,SAAX,CAAqBX,aALxB,kBAFF,EAUE;AAAM,MAAA,KAAK,EAAE;AAAEe,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEF,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,WAAW,EAAE;AAAjC,OADT;AAEE,MAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKxB,KAAL,CAAWqB,SAAX,CAAqBK,QALxB,CAVF,CADF,CADF,EAqBE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,EAAE,EAAE,EAJN;AAKE,MAAA,EAAE,EAAE,EALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAK1B,KAAL,CAAWI,UAAX,IAAyBrB,QAAzB,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EACLA,QAAQ,IAAI8B,OAAO,KAAK,CAAxB,IAA6B,KAAKb,KAAL,CAAWI,UAAzC,IAAyD,CAACrB,QAAD,IAAa8B,OAAO,KAAK,CAAzB,IAA8B,KAAKb,KAAL,CAAWI,UAAlG,IAAkHrB,QAAQ,IAAI8B,OAAO,KAAK,CAA1I,IAAgJA,OAAO,KAAK,CAA5J,GAAgK,IAAhK,GAAuK,KAF3K;AAIE,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,OAAO,EAAE,MAAM,KAAKX,IAAL,EANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWM,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,OAAX,GAAqB,KAArB,GAA6B,IADzC;AAEE,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKT,IAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN,CADD,GAqBG,IAxBN,CAPF,EAiCG,KAAKhB,KAAL,CAAWI,UAAX,GACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,QAAQ,GACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG8B,OAAO,KAAK,CAAZ,IAAiB,oBAAC,mBAAD;AAAqB,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWI,UAA5C;AAAwD,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAW2B,QAA7E;AAAuF,MAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAW4B,QAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpB,EAEGf,OAAO,KAAK,CAAZ,IAAiB,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWI,UAAxC;AAAoD,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAW4B,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpB,CADO,GAML,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,OAAO,KAAK,CAAZ,IACC,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,mBAAD;AAAqB,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWI,UAA5C;AAAwD,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAW2B,QAA7E;AAAuF,MAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAW4B,QAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,EAAE,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWI,UAAxC;AAAoD,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAW4B,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAFJ,CAPN,CADD,GAuBC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG7C,QAAQ,GACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG8B,OAAO,KAAK,CAAZ,IAAiB,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpB,EAEGA,OAAO,KAAK,CAAZ,IAAiB,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpB,EAGGA,OAAO,KAAK,CAAZ,IAAiB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB,CADO,GAOL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,KAAK,CAAZ,IACC,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,EAAE,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAFJ,EAWGA,OAAO,KAAK,CAAZ,IAAiB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXpB,CARN,CAxDJ,CADF,CArBF,CADF;AA2GD;;AAhJyC;;AAmJ5C,MAAMgB,YAAN,SAA2BxE,KAAK,CAACyC,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnB8B,YATmB,GASJC,CAAC,IAAI;AAClB,WAAK/B,KAAL,CAAWhC,eAAX,CAA2B+D,CAAC,CAACC,MAAF,CAASC,KAApC;AACD,KAXkB;;AAEjB,QAAI,KAAKjC,KAAL,CAAWI,UAAf,EAA2B;AACzB,UAAI,KAAKJ,KAAL,CAAW4B,QAAf,EAAyB;AACvB,aAAK5B,KAAL,CAAWhC,eAAX,CAA2B,KAAKgC,KAAL,CAAW4B,QAAtC;AACD;AACF;AACF;;AAKDX,EAAAA,MAAM,GAAG;AACP,QAAIiB,cAAc,GAAG,KAAKlC,KAAL,CAAWqB,SAAX,CAAqBc,aAA1C;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIF,cAAJ,EAAoB;AAClB,WAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,cAAc,CAACI,MAA3C,EAAmDD,KAAK,EAAxD,EAA4D;AAC1D,cAAME,OAAO,GAAGL,cAAc,CAACG,KAAD,CAA9B;;AACA,YAAI,KAAKrC,KAAL,CAAWqB,SAAX,CAAqBmB,YAArB,IAAqCD,OAAO,CAACE,IAAjD,EAAuD;AACrDF,UAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,CAAsBC,IAAI,IAAI;AAC5BR,YAAAA,KAAK,CAACS,IAAN,CAAWD,IAAI,CAACE,UAAhB;AACD,WAFD;AAGA;AACD;AACF;AACF;;AACD,QAAIC,cAAc,GAAGX,KAAK,CAACY,GAAN,CAAU,CAACf,KAAD,EAAQgB,GAAR,KAC7B,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,iBAAxB;AAA0C,MAAA,GAAG,EAAEA,GAA/C;AAAoD,MAAA,KAAK,EAAEhB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KADH,CADmB,CAArB;AAMA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,KAAKjC,KAAL,CAAWqB,SAAX,CAAqBmB,YAArB,GACC,GADD,IAEE,KAAKxC,KAAL,CAAWqB,SAAX,CAAqBS,YAArB,GACG,KAAK9B,KAAL,CAAWqB,SAAX,CAAqBS,YADxB,GAEG,EAJL,CAFH,CADF,EASE,oBAAC,KAAD,CAAO,KAAP;AACE,MAAA,QAAQ,EAAE,KAAKA,YADjB;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWqB,SAAX,CAAqBS,YAH9B;AAIE,MAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGiB,cANH,CATF,CADF;AAoBD;;AArDwC;;AAuD3C,MAAMG,gBAAN,SAA+B7F,KAAK,CAACyC,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwCnBmD,YAxCmB,GAwCJtC,OAAO,IAAI;AACxB,UAAIqB,cAAc,GAAG,KAAKlC,KAAL,CAAWqB,SAAX,CAAqBc,aAA1C;;AACA,UAAI,CAACtB,OAAL,EAAc;AACZ;AACA,eAAO,KAAP;AACD;;AACD,YAAM4B,IAAI,GAAG3D,MAAM,EAAnB;AACA2D,MAAAA,IAAI,CAACW,IAAL,CAAU,CAAV;AACAX,MAAAA,IAAI,CAACY,MAAL,CAAY,CAAZ;AACAZ,MAAAA,IAAI,CAACa,MAAL,CAAY,CAAZ;AACA,UAAIC,KAAK,GAAGd,IAAI,CAACe,MAAL,CAAYrF,WAAZ,CAAZ;AACA,UAAIsF,WAAW,GAAG5C,OAAO,CAAC2C,MAAR,CAAerF,WAAf,CAAlB;;AACA,UAAIsF,WAAW,GAAGF,KAAlB,EAAyB;AACvB;AACA,eAAO,IAAP;AACD;;AACD,UAAIrB,cAAJ,EAAoB;AAClB,YAAIwB,WAAW,GAAG,KAAlB;;AACA,aAAK,IAAIrB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,cAAc,CAACI,MAA3C,EAAmDD,KAAK,EAAxD,EAA4D;AAC1D,gBAAME,OAAO,GAAGL,cAAc,CAACG,KAAD,CAA9B;;AACA,cAAIoB,WAAW,IAAIlB,OAAO,CAACE,IAA3B,EAAiC;AAC/BiB,YAAAA,WAAW,GAAG,IAAd;AACA;AACD;AACF;;AACD,YAAIA,WAAJ,EAAiB;AACf,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD,KAtEkB;;AAAA,SAwEnBC,aAxEmB,GAwEH,CAAC1B,KAAD,EAAQ2B,IAAR,KAAiB;AAC/B,WAAK5D,KAAL,CAAWrC,qBAAX,CACE,KAAKqC,KAAL,CAAWqB,SAAX,CAAqBC,IADvB,EAEE,KAAKtB,KAAL,CAAWqB,SAAX,CAAqBX,aAFvB,EAGE,KAAKV,KAAL,CAAWqB,SAAX,CAAqBK,QAHvB,EAIEO,KAAK,CAAC4B,IAAN,KAAe,GAAf,IAAsBC,QAAQ,CAAC7B,KAAK,CAAC8B,KAAN,EAAD,CAAR,GAA0B,CAAhD,CAJF;AAMA,WAAK/D,KAAL,CAAWpC,eAAX,CAA2BqE,KAAK,CAACuB,MAAN,CAAarF,WAAb,CAA3B;AACD,KAhFkB;;AAAA,SAkFnB6F,QAlFmB,GAkFR/B,KAAK,IAAI;AAClB,WAAKjC,KAAL,CAAWpC,eAAX,CAA2BqE,KAAK,CAACuB,MAAN,CAAarF,WAAb,CAA3B,EADkB,CAElB;;AACA,WAAK6B,KAAL,CAAWhC,eAAX,CAA2B,IAA3B;AACD,KAtFkB;;AAGjB,QAAI,KAAKgC,KAAL,CAAWqB,SAAX,CAAqBmB,YAAzB,EAAuC;AACrC;AACA,WAAKxC,KAAL,CAAWrC,qBAAX,CACE,KAAKqC,KAAL,CAAWqB,SAAX,CAAqBC,IADvB,EAEE,KAAKtB,KAAL,CAAWqB,SAAX,CAAqBX,aAFvB,EAGE,KAAKV,KAAL,CAAWqB,SAAX,CAAqBK,QAHvB,EAIE5C,MAAM,CAAC,KAAKkB,KAAL,CAAWqB,SAAX,CAAqBmB,YAAtB,CAAN,CAA0CgB,MAA1C,CAAiD,SAAjD,CAJF,EAFqC,CAQrC;;AACA,WAAKxD,KAAL,CAAWhC,eAAX,CAA2B,IAA3B;AACD,KAVD,MAUO;AACL;AACA,UAAI,KAAKgC,KAAL,CAAWI,UAAf,EAA2B;AACzB,aAAKJ,KAAL,CAAWpC,eAAX,CAA2B,KAAKoC,KAAL,CAAW2B,QAAtC;AACA,aAAK3B,KAAL,CAAWrC,qBAAX,CACE,KAAKqC,KAAL,CAAWqB,SAAX,CAAqBC,IADvB,EAEE,KAAKtB,KAAL,CAAWqB,SAAX,CAAqBX,aAFvB,EAGE,KAAKV,KAAL,CAAWqB,SAAX,CAAqBK,QAHvB,EAFyB,CAOzB;;AACA,aAAK1B,KAAL,CAAWhC,eAAX,CAA2B,KAAKgC,KAAL,CAAW4B,QAAtC;AACD,OATD,MAUK;AACH;AACA,aAAK5B,KAAL,CAAWpC,eAAX,CAA2BkB,MAAM,GAAG0E,MAAT,CAAgBrF,WAAhB,CAA3B;AACA,aAAK6B,KAAL,CAAWrC,qBAAX,CACE,KAAKqC,KAAL,CAAWqB,SAAX,CAAqBC,IADvB,EAEE,KAAKtB,KAAL,CAAWqB,SAAX,CAAqBX,aAFvB,EAGE,KAAKV,KAAL,CAAWqB,SAAX,CAAqBK,QAHvB,EAHG,CAQH;;AACA,aAAK1B,KAAL,CAAWhC,eAAX,CAA2B,IAA3B;AACD;AACF;AAEF;;AAkDDiD,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWqB,SAAX,CAAqB4C,SAArB,GACC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGG,oBAAC,QAAD;AACE,MAAA,YAAY,EAAEnF,MAAM,CAAC,KAAKkB,KAAL,CAAWqB,SAAX,CAAqBmB,YAAtB,CADtB;AAEE,MAAA,YAAY,EAAE,KAAKW,YAFrB;AAGE,MAAA,UAAU,EAAE,KAHd;AAIE,MAAA,aAAa,EAAE,KAAKQ,aAJtB;AAKE,MAAA,QAAQ,EAAE,KAAKK,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN,CADF;AAeD;;AAzG4C;;AA4G/C,MAAME,cAAN,SAA6B7G,KAAK,CAACyC,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAI3CqE,YAJ2C,GAI5BpC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACqC,cAAF;;AAEA,UACE,EAAE,KAAKpE,KAAL,CAAWqB,SAAX,CAAqBmB,YAArB,IAAqC,KAAKxC,KAAL,CAAWqB,SAAX,CAAqBS,YAA5D,CADF,EAEE;AACAtD,QAAAA,OAAO,CAAC6F,KAAR,CAAc,6BAAd;AACA,eAAO,KAAP;AACD;;AAED,WAAKrE,KAAL,CAAWsE,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9C,YAAIC,eAAe,GAAG,EAAtB;AACA,YAAIC,QAAQ,GAAG,KAAK3E,KAAL,CAAWqB,SAA1B;;AACA,YAAI,CAACmD,GAAL,EAAU;AACRE,UAAAA,eAAe,CAAC5B,UAAhB,GAA6BhE,MAAM,CACjC6F,QAAQ,CAACnC,YAAT,GACA,GADA,GAEA1D,MAAM,CAAC6F,QAAQ,CAAC7C,YAAV,EAAwB,CAAC,QAAD,CAAxB,CAAN,CAA0C0B,MAA1C,CAAiD,OAAjD,CAHiC,CAAN,CAI3BA,MAJ2B,CAIpBtF,gBAJoB,CAA7B;AAKAwG,UAAAA,eAAe,CAACE,QAAhB,GAA2B9F,MAAM,CAAC4F,eAAe,CAAC5B,UAAjB,CAAN,CAAmC+B,GAAnC,CACzBF,QAAQ,CAACjE,aADgB,EAEzB,SAFyB,CAA3B;AAIAgE,UAAAA,eAAe,CAACE,QAAhB,GAA2BF,eAAe,CAACE,QAAhB,CAAyBpB,MAAzB,CACzBtF,gBADyB,CAA3B;AAGAwG,UAAAA,eAAe,CAACI,OAAhB,GAA0B,CAA1B;AACAJ,UAAAA,eAAe,CAACpD,IAAhB,GAAuBqD,QAAQ,CAACrD,IAAhC;AACAoD,UAAAA,eAAe,CAACK,cAAhB,GAAiCJ,QAAQ,CAACjD,QAA1C;AACAgD,UAAAA,eAAe,CAACM,KAAhB,GAAwBP,MAAM,CAACO,KAA/B;AACA,iBAAOP,MAAM,CAACO,KAAd;AACAN,UAAAA,eAAe,CAACO,MAAhB,GAAyBR,MAAzB;AACA,eAAKzE,KAAL,CAAW/B,eAAX,CAA2ByG,eAA3B;AACD;AACF,OAxBD;AAyBD,KAvC0C;AAAA;;AAC3CQ,EAAAA,kBAAkB,GAAG;AACnB,SAAKlF,KAAL,CAAWtC,KAAX,CAAiBU,mBAAjB;AACD;;AAsCD6C,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKjB,KAAL,CAAWmF,mBAAX,CAA+BC,QAAnC,EAA6C;AAC3C,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAHM,UAICC,iBAJD,GAIuB,KAAKrF,KAAL,CAAWsE,IAJlC,CAICe,iBAJD;AAKP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrF,KAAL,CAAWmF,mBAAX,CAA+BG,OAA/B,GACC,oBAAC,KAAD;AACE,MAAA,OAAO,EAAC,oBADV;AAEE,MAAA,WAAW,EAAE,KAAKtF,KAAL,CAAWmF,mBAAX,CAA+BG,OAF9C;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOG,IARN,EASE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKnB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkB,iBAAiB,CAAC,iBAAD,EAAoB;AACpCE,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEhH,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACEiH,QAAAA,QAAQ,EAAE,IADZ;AAEEjH,QAAAA,OAAO,EAAE;AAFX,OALK;AAD6B,KAApB,CAAjB,CAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADH,CADF,EAeE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6G,iBAAiB,CAAC,aAAD,EAAgB;AAChCE,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEjH,QAAAA,OAAO,EAAE,oBAFX;AAGEkH,QAAAA,UAAU,EAAE;AAHd,OADK;AADyB,KAAhB,CAAjB,CAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADH,CAfF,EA0BE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,iBAAiB,CAAC,8BAAD,EAAiC;AACjDE,MAAAA,KAAK,EAAE,CACL;AAAEE,QAAAA,QAAQ,EAAE,IAAZ;AAAkBjH,QAAAA,OAAO,EAAE;AAA3B,OADK;AAD0C,KAAjC,CAAjB,CAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADH,CA1BF,EAiCE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6G,iBAAiB,CAAC,OAAD,CAAjB,CACC,oBAAC,QAAD;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,QAAQ,EAAE;AAAEM,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAjCF,EA0CE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK5F,KAAL,CAAWmF,mBAAX,CAA+BlB,SAA/B,GACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAKG,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANN,CA1CF,CATF,CADF;AAkED;;AAhH0C;;AAmH7C,MAAM4B,eAAe,GAAGjF,KAAK,KAAK;AAChCkF,EAAAA,IAAI,EAAElF,KAAK,CAACkF,IADoB;AAEhCzE,EAAAA,SAAS,EAAET,KAAK,CAACmF,YAFe;AAGhCC,EAAAA,kBAAkB,EAAEpF,KAAK,CAACoF;AAHM,CAAL,CAA7B;;AAMA,eAAezI,OAAO,CACpBsI,eADoB,EAEpB;AACElI,EAAAA,qBADF;AAEEC,EAAAA,eAFF;AAGEE,EAAAA,OAHF;AAIED,EAAAA,WAJF;AAKEE,EAAAA;AALF,CAFoB,CAAP,CASb8B,aATa,CAAf;AAWA,MAAMoG,mBAAmB,GAAG1I,OAAO,CACjCsI,eADiC,EAEjC;AACElI,EAAAA,qBADF;AAEEC,EAAAA,eAFF;AAGEE,EAAAA,OAHF;AAIED,EAAAA,WAJF;AAKEE,EAAAA,eALF;AAMEC,EAAAA;AANF,CAFiC,CAAP,CAU1BkF,gBAV0B,CAA5B;AAYA,MAAMgD,eAAe,GAAG3I,OAAO,CAC7BsI,eAD6B,EAE7B;AACElI,EAAAA,qBADF;AAEEC,EAAAA,eAFF;AAGEE,EAAAA,OAHF;AAIED,EAAAA,WAJF;AAKEE,EAAAA,eALF;AAMEC,EAAAA;AANF,CAF6B,CAAP,CAUtB6D,YAVsB,CAAxB;;AAYA,MAAMsE,mBAAmB,GAAGvF,KAAK,KAAK;AACpCuE,EAAAA,mBAAmB,EAAEvE,KAAK,CAACwF,eADS;AAEpC/E,EAAAA,SAAS,EAAET,KAAK,CAACmF;AAFmB,CAAL,CAAjC;;AAIA,MAAM3E,iBAAiB,GAAG7D,OAAO,CAC/B4I,mBAD+B,EAE/B;AAAElI,EAAAA,eAAF;AAAmBP,EAAAA;AAAnB,CAF+B,CAAP,CAGxBwG,cAHwB,CAA1B","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport jstimezonedetect from \"jstimezonedetect\";\nimport { Redirect } from \"react-router-dom\";\nimport { reset } from \"../../actions/common\";\nimport {\n  getUserAvailableSlots,\n  setSelectedDate,\n  setTimeZone,\n  setUser,\n  setSlotDuration,\n  setSelectedTime\n} from \"../../actions/appointment/getuserslot\";\nimport { bookappointment } from \"../../actions/appointment/bookappointment\";\nimport {\n  DATE_TIME_FORMAT,\n  DATE_FORMAT,\n  RESET_BOOKING_STATE\n} from \"../../actions/types\";\nimport {\n  Radio,\n  Calendar,\n  Icon,\n  message,\n  Spin,\n  Alert,\n  Button,\n  Input,\n  Form\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\n\nimport { isMobile } from \"../../actions/types\";\nimport { Row, Col } from \"antd\";\nconst { TextArea } = Input;\n\nfunction getQueryString(field, url) {\n  var href = url ? url : window.location.href;\n  var reg = new RegExp(\"[?&]\" + field + \"=([^&#]*)\", \"i\");\n  var string = reg.exec(href);\n  return string ? string[1] : null;\n}\nclass BookingWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    let tz = jstimezonedetect.determine();\n    this.props.setTimeZone(tz.name());\n    //check if reschedule request\n    if (this.props.reschedule) {\n      this.props.setUser(this.props.apptUser);\n      this.props.setSlotDuration(this.props.apptduration);\n    }\n    else {\n      //book new appointment\n      let path = window.location.pathname.split(\"/\");\n      let slot_duration = getQueryString(\"slot_duration\");\n      slot_duration = slot_duration ? slot_duration : 15;\n      path.pop();\n      this.props.setUser(path.pop());\n      this.props.setSlotDuration(slot_duration);\n    }\n    this.state = { current: 0 };\n  }\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({ current });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current });\n  }\n\n  render() {\n    const { current } = this.state;\n    const WrappedContactForm = Form.create({ name: \"ContactDetails\" })(\n      ContactDetailsApp\n    );\n    return (\n      <Fragment>\n        <Row type=\"flex\" className=\"calendar-details-section\" justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={18}>\n            <h1>{this.props.userSlots.user}</h1>\n            <span>\n              <Icon\n                style={{ fontSize: \"14px\", marginRight: \"5px\" }}\n                type=\"clock-circle\"\n              />\n              {this.props.userSlots.slot_duration} min. Booking\n            </span>\n\n            <span style={{ float: \"right\" }}>\n              <Icon\n                style={{ fontSize: \"14px\", marginRight: \"5px\" }}\n                type=\"global\"\n              />\n              {this.props.userSlots.timezone}\n            </span>\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col\n            className=\"bookwidget calendar-book-section\"\n            xs={24}\n            sm={24}\n            md={24}\n            lg={18}\n          >\n            <Row className=\"booking-form-navigation\">\n              {/* new appointment - show two steps on desktop screen and three steps in mobile*/}\n              {/* reschedule appointment - don't show nav button in desktop screen and show two steps in mobile*/}\n              {this.props.reschedule && isMobile ?\n                <Fragment>\n                  <Button\n                    disabled={\n                      (isMobile && current === 1 && this.props.reschedule) || (!isMobile && current === 0 && this.props.reschedule) || (isMobile && current === 2) || current === 1 ? true : false\n                    }\n                    style={{ float: \"right\" }}\n                    type=\"primary\"\n                    onClick={() => this.next()}\n                  >\n                    Next\n                  </Button>\n                      <Button\n                        disabled={this.state.current ? false : true}\n                        style={{ float: \"left\" }}\n                        type=\"primary\"\n                        onClick={() => this.prev()}\n                      >\n                        Prev\n                  </Button>\n                </Fragment>\n                : null}\n            </Row>\n            {this.props.reschedule ?\n              <div className=\"steps-content\">\n                {isMobile ? (\n                  <Fragment>\n                    {current === 0 && <CalendarCardViewApp reschedule={this.props.reschedule} apptDate={this.props.apptDate} apptTime={this.props.apptTime} />}\n                    {current === 1 && <TimeSlotViewApp reschedule={this.props.reschedule} apptTime={this.props.apptTime} />}\n                  </Fragment>\n                ) : (\n                    <Fragment>\n                      {current === 0 && (\n                        <Row gutter={24}>\n                          <Col xs={24} sm={24} md={16} lg={16}>\n                            <CalendarCardViewApp reschedule={this.props.reschedule} apptDate={this.props.apptDate} apptTime={this.props.apptTime} />\n                          </Col>\n                          <Col xs={24} sm={24} md={8} lg={6}>\n                            <TimeSlotViewApp reschedule={this.props.reschedule} apptTime={this.props.apptTime} />\n                          </Col>\n                        </Row>\n                      )}\n                    </Fragment>\n                  )}\n              </div>\n              :\n              <div className=\"steps-content\">\n                {isMobile ? (\n                  <Fragment>\n                    {current === 0 && <CalendarCardViewApp />}\n                    {current === 1 && <TimeSlotViewApp />}\n                    {current === 2 && <WrappedContactForm />}\n                  </Fragment>\n                ) : (\n                    <Fragment>\n                      {current === 0 && (\n                        <Row gutter={24}>\n                          <Col xs={24} sm={24} md={16} lg={16}>\n                            <CalendarCardViewApp />\n                          </Col>\n                          <Col xs={24} sm={24} md={8} lg={6}>\n                            <TimeSlotViewApp />\n                          </Col>\n                        </Row>\n                      )}\n                      {current === 1 && <WrappedContactForm />}\n                    </Fragment>\n                  )}\n              </div>\n            }\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nclass TimeSlotView extends React.Component {\n  constructor(props) {\n    super(props);\n    if (this.props.reschedule) {\n      if (this.props.apptTime) {\n        this.props.setSelectedTime(this.props.apptTime);\n      }\n    }\n  }\n\n  selectedTime = e => {\n    this.props.setSelectedTime(e.target.value);\n  };\n  render() {\n    let availableSlots = this.props.userSlots.user_timeslot;\n    let slots = [];\n    if (availableSlots) {\n      for (let index = 0; index < availableSlots.length; index++) {\n        const element = availableSlots[index];\n        if (this.props.userSlots.selectedDate == element.date) {\n          element.spots.forEach(slot => {\n            slots.push(slot.start_time);\n          });\n          break;\n        }\n      }\n    }\n    let timeSlotsGroup = slots.map((value, idx) => (\n      <Radio.Button className=\"time-slot-radio\" key={idx} value={value}>\n        {value}\n      </Radio.Button>\n    ));\n\n    return (\n      <Fragment>\n        <h4>\n          {\" \"}\n          {this.props.userSlots.selectedDate +\n            \" \" +\n            (this.props.userSlots.selectedTime\n              ? this.props.userSlots.selectedTime\n              : \"\")}\n        </h4>\n        <Radio.Group\n          onChange={this.selectedTime}\n          className=\"time-slot-radiogroup\"\n          value={this.props.userSlots.selectedTime}\n          buttonStyle=\"solid\"\n        >\n          {timeSlotsGroup}\n        </Radio.Group>\n      </Fragment>\n    );\n  }\n}\nclass CalendarCardView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.userSlots.selectedDate) {\n      //get slots of selectedDate\n      this.props.getUserAvailableSlots(\n        this.props.userSlots.user,\n        this.props.userSlots.slot_duration,\n        this.props.userSlots.timezone,\n        moment(this.props.userSlots.selectedDate).format(\"YYYY-MM\")\n      );\n      //undo prev. selected timeslot whenever new slots are rendered for selected date\n      this.props.setSelectedTime(null);\n    } else {\n      //check if request is resecdule appt\n      if (this.props.reschedule) {\n        this.props.setSelectedDate(this.props.apptDate);\n        this.props.getUserAvailableSlots(\n          this.props.userSlots.user,\n          this.props.userSlots.slot_duration,\n          this.props.userSlots.timezone\n        );\n        //set appt time as selected time\n        this.props.setSelectedTime(this.props.apptTime);\n      }\n      else {\n        //set today as selectedDate by default and get available slots if not already set\n        this.props.setSelectedDate(moment().format(DATE_FORMAT));\n        this.props.getUserAvailableSlots(\n          this.props.userSlots.user,\n          this.props.userSlots.slot_duration,\n          this.props.userSlots.timezone\n        );\n        //undo prev. selected timeslot whenever new slots are rendered for selected date\n        this.props.setSelectedTime(null);\n      }\n    }\n\n  }\n\n  disabledDate = current => {\n    let availableSlots = this.props.userSlots.user_timeslot;\n    if (!current) {\n      // allow empty select\n      return false;\n    }\n    const date = moment();\n    date.hour(0);\n    date.minute(0);\n    date.second(0);\n    let today = date.format(DATE_FORMAT);\n    let currentDate = current.format(DATE_FORMAT);\n    if (currentDate < today) {\n      // can not select days before today\n      return true;\n    }\n    if (availableSlots) {\n      let isAvailable = false;\n      for (let index = 0; index < availableSlots.length; index++) {\n        const element = availableSlots[index];\n        if (currentDate == element.date) {\n          isAvailable = true;\n          break;\n        }\n      }\n      if (isAvailable) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  onPanelChange = (value, mode) => {\n    this.props.getUserAvailableSlots(\n      this.props.userSlots.user,\n      this.props.userSlots.slot_duration,\n      this.props.userSlots.timezone,\n      value.year() + \"-\" + (parseInt(value.month()) + 1)\n    );\n    this.props.setSelectedDate(value.format(DATE_FORMAT));\n  };\n\n  onSelect = value => {\n    this.props.setSelectedDate(value.format(DATE_FORMAT));\n    //undo prev. selected timeslot whenever new slots are rendered for selected date\n    this.props.setSelectedTime(null);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {this.props.userSlots.isLoading ? (\n          <Spin tip=\"Loading...\" />\n        ) : (\n            <Calendar\n              defaultValue={moment(this.props.userSlots.selectedDate)}\n              disabledDate={this.disabledDate}\n              fullscreen={false}\n              onPanelChange={this.onPanelChange}\n              onSelect={this.onSelect}\n            />\n          )}\n      </Fragment>\n    );\n  }\n}\n\nclass ContactDetails extends React.Component {\n  componentWillMount() {\n    this.props.reset(RESET_BOOKING_STATE);\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      !(this.props.userSlots.selectedDate && this.props.userSlots.selectedTime)\n    ) {\n      message.error(\"Please select date and time\");\n      return false;\n    }\n\n    this.props.form.validateFields((err, values) => {\n      let appointmentData = {};\n      let slotInfo = this.props.userSlots;\n      if (!err) {\n        appointmentData.start_time = moment(\n          slotInfo.selectedDate +\n          \" \" +\n          moment(slotInfo.selectedTime, [\"h:mm A\"]).format(\"HH:mm\")\n        ).format(DATE_TIME_FORMAT);\n        appointmentData.end_time = moment(appointmentData.start_time).add(\n          slotInfo.slot_duration,\n          \"minutes\"\n        );\n        appointmentData.end_time = appointmentData.end_time.format(\n          DATE_TIME_FORMAT\n        );\n        appointmentData.service = 1;\n        appointmentData.user = slotInfo.user;\n        appointmentData.timezone_field = slotInfo.timezone;\n        appointmentData.notes = values.notes;\n        delete values.notes;\n        appointmentData.client = values;\n        this.props.bookappointment(appointmentData);\n      }\n    });\n  };\n\n  render() {\n    if (this.props.bookAppointmentData.isBooked) {\n      return <Redirect to=\"/appointment/info/\" />;\n    }\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Fragment>\n        {this.props.bookAppointmentData.isError ? (\n          <Alert\n            message=\"Appointment failed\"\n            description={this.props.bookAppointmentData.isError}\n            type=\"error\"\n            closable\n          />\n        ) : null}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator(\"client_email_id\", {\n              rules: [\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\"\n                },\n                {\n                  required: true,\n                  message: \"Please input your E-mail!\"\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Name\">\n            {getFieldDecorator(\"client_name\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input Name!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Phone Numer\">\n            {getFieldDecorator(\"client_contact_mobile_number\", {\n              rules: [\n                { required: true, message: \"Please input your Phone Numer!\" }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Phone Notes\">\n            {getFieldDecorator(\"notes\")(\n              <TextArea\n                placeholder=\"Additional information\"\n                autosize={{ minRows: 2, maxRows: 6 }}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item>\n            {this.props.bookAppointmentData.isLoading ? (\n              <Button type=\"primary\" loading>\n                Loading\n              </Button>\n            ) : (\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n              </Button>\n              )}\n          </Form.Item>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  userSlots: state.getUserSlots,\n  appointmentDetails: state.appointmentDetails\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getUserAvailableSlots,\n    setSelectedDate,\n    setUser,\n    setTimeZone,\n    setSlotDuration\n  }\n)(BookingWidget);\n\nconst CalendarCardViewApp = connect(\n  mapStateToProps,\n  {\n    getUserAvailableSlots,\n    setSelectedDate,\n    setUser,\n    setTimeZone,\n    setSlotDuration,\n    setSelectedTime\n  }\n)(CalendarCardView);\n\nconst TimeSlotViewApp = connect(\n  mapStateToProps,\n  {\n    getUserAvailableSlots,\n    setSelectedDate,\n    setUser,\n    setTimeZone,\n    setSlotDuration,\n    setSelectedTime\n  }\n)(TimeSlotView);\n\nconst mapStateBookToProps = state => ({\n  bookAppointmentData: state.bookAppointment,\n  userSlots: state.getUserSlots\n});\nconst ContactDetailsApp = connect(\n  mapStateBookToProps,\n  { bookappointment, reset }\n)(ContactDetails);\n"]},"metadata":{},"sourceType":"module"}