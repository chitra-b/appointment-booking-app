{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/showappointments.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { DATA_PER_PAGE, DATE_TIME_FORMAT_AM_PM, DATE_FORMAT, YEAR_MONTH_FORMAT } from \"../../actions/types\";\nimport FilterAppointmentsForm from './filterappointments';\nimport { Descriptions, Checkbox, PageHeader, Pagination, Button, Icon } from \"antd\";\nimport moment from \"moment\";\nmoment.tz.setDefault(\"Asia/Calcutta\");\n\nclass UserAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.appointmentlist = () => {\n      return this.props.userAppointments.appointments ? this.props.userAppointments.appointments.map(value => React.createElement(\"div\", {\n        key: value.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Descriptions, {\n        className: \"appointment-list \",\n        key: value.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Descriptions.Item, {\n        label: \"Client Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, value.client.client_name), React.createElement(Descriptions.Item, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, value.client.client_email_id), React.createElement(Descriptions.Item, {\n        label: \"Mobile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, value.client.client_contact_mobile_number), React.createElement(Descriptions.Item, {\n        label: \"Start Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, moment(value.start_time).format(DATE_TIME_FORMAT_AM_PM)), React.createElement(Descriptions.Item, {\n        label: \"End Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, moment(value.end_time).format(DATE_TIME_FORMAT_AM_PM)), React.createElement(Descriptions.Item, {\n        label: \"Lead Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, value.lead_status), React.createElement(Descriptions.Item, {\n        label: \"Notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, value.notes)))) : null;\n    };\n\n    this.state = {\n      visible: false,\n      currentPage: 1\n    };\n    this.props.getUserAppointments();\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      className: \"align-right page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FilterAppointmentsForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), this.appointmentlist(), React.createElement(Pagination, {\n      hideOnSinglePage: true,\n      current: this.state.currentPage,\n      onChange: this.pageChange,\n      defaultPageSize: DATA_PER_PAGE,\n      total: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments\n});\n\nexport default connect(mapStateToProps, {\n  getUserAppointments\n})(UserAppointments);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/showappointments.js"],"names":["React","Fragment","connect","getUserAppointments","DATA_PER_PAGE","DATE_TIME_FORMAT_AM_PM","DATE_FORMAT","YEAR_MONTH_FORMAT","FilterAppointmentsForm","Descriptions","Checkbox","PageHeader","Pagination","Button","Icon","moment","tz","setDefault","UserAppointments","Component","constructor","props","appointmentlist","userAppointments","appointments","map","value","id","client","client_name","client_email_id","client_contact_mobile_number","start_time","format","end_time","lead_status","notes","state","visible","currentPage","render","pageChange","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { DATA_PER_PAGE, \n    DATE_TIME_FORMAT_AM_PM,\n    DATE_FORMAT,\n    YEAR_MONTH_FORMAT} from \"../../actions/types\";\nimport FilterAppointmentsForm from './filterappointments';\nimport {\n    Descriptions,\n    Checkbox,\n    PageHeader,\n    Pagination,\n    Button,\n    Icon\n  } from \"antd\";\nimport moment from \"moment\";\nmoment.tz.setDefault(\"Asia/Calcutta\");\nclass UserAppointments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            currentPage: 1\n        };\n        this.props.getUserAppointments();\n    }\n    appointmentlist = () => {\n        return this.props.userAppointments.appointments\n            ? this.props.userAppointments.appointments.map(value => (\n                <div key={value.id} >\n                    <Descriptions\n                        className=\"appointment-list \"\n                        key={value.id}\n                        \n                    >  \n                        <Descriptions.Item label=\"Client Name\">\n                            {value.client.client_name}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Email\">\n                            {value.client.client_email_id}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Mobile\">\n                            {value.client.client_contact_mobile_number}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Start Time\">\n                            { moment(value.start_time).format(DATE_TIME_FORMAT_AM_PM) }\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"End Time\">\n                        { moment(value.end_time).format(DATE_TIME_FORMAT_AM_PM) }\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Lead Status\">\n                            {value.lead_status}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Notes\">\n                            {value.notes}\n                        </Descriptions.Item>\n                    </Descriptions>\n                </div>\n            ))\n            : null;\n    };\n    render() {\n        return (\n            <Fragment>\n            <PageHeader className=\"align-right page-header\">\n            </PageHeader>\n            <FilterAppointmentsForm />\n            {this.appointmentlist()}\n            <Pagination\n              hideOnSinglePage={true}\n              current={this.state.currentPage}\n              onChange={this.pageChange}\n              defaultPageSize={DATA_PER_PAGE}\n              total={10}\n            />\n            \n\n            </Fragment>\n            \n        );\n    }\n}\nconst mapStateToProps = state => ({\n    userAppointments: state.userAppointments\n});\nexport default connect(mapStateToProps, { getUserAppointments })(UserAppointments)"]},"metadata":{},"sourceType":"module"}