{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/filterappointments.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DatePicker, Form, Row, Col, Button, Icon, Drawer, Switch, Checkbox } from \"antd\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { filterAppointments } from \"../../actions/appointment/filterAppointments\";\nimport { config } from \"@fullcalendar/core\";\nimport moment from \"moment\";\nimport { DATE_FORMAT, isMobile, YEAR_MONTH_FORMAT } from \"../../actions/types\";\nimport { getUserDetails } from \"../../actions/accounts/myprofilemanagement/getprofile\";\nimport { store } from \"../../index.js\";\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nexport class FilterUI extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDrawer = () => {\n      this.setState({\n        isFilterDrawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        isFilterDrawerVisible: false\n      });\n    };\n\n    this.state = {\n      isFilterDrawerVisible: false\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, isMobile ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        marginBottom: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"Show Filters\"))), React.createElement(Row, {\n      className: \"align-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      onClose: this.onClose,\n      visible: this.state.isFilterDrawerVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.children)))) : this.props.children);\n  }\n\n}\n\nclass FilterAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.getUserAppointments(moment(values.start_date).format(DATE_FORMAT), moment(values.end_date).format(DATE_FORMAT), values.team_appointments, getUserDetails(store.getState));\n        }\n      });\n    };\n\n    this.state = {\n      userDetails: this.props.userDetails,\n      start_date: moment(new Date()).format(DATE_FORMAT),\n      end_date: moment().format(YEAR_MONTH_FORMAT) + \"-\" + moment().daysInMonth(),\n      flag_team_appointments: false // Set default filters\n      // this.props.filterAppointments(\n      //   this.state.start_date, \n      //   this.state.end_date,\n      //   this.state.flag_team_appointments,\n      //   getUserDetails(store.getState),\n      // );\n\n    };\n    this.props.getUserAppointments(this.state.start_date, this.state.end_date, this.state.flag_team_appointments, getUserDetails(store.getState));\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    const checkboxLayout = {\n      labelCol: {\n        span: 20\n      },\n      wrapperCol: {\n        span: 4\n      }\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      className: \"filterappoinments-form\",\n      style: {\n        marginBottom: \"15px\"\n      },\n      onSubmit: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 5,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"From\",\n      htmlFor: \"start_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), getFieldDecorator(\"start_date\", {\n      rules: [{\n        required: false,\n        message: \"Please select time!\"\n      }],\n      initialValue: moment(this.state.start_date, DATE_FORMAT) // initialValue: moment(this.props.start_date, DATE_FORMAT)\n\n    })(React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 5,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      label: \"To\",\n      htmlFor: \"end_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), getFieldDecorator(\"end_date\", {\n      rules: [{\n        required: false,\n        message: \"Please select time!\"\n      }],\n      initialValue: moment(this.state.end_date, DATE_FORMAT) // initialValue: moment(this.props.end_date, DATE_FORMAT)\n\n    })(React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 7,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, checkboxLayout, {\n      label: \"Show Team's appointments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), getFieldDecorator(\"team_appointments\", {// valuePropName: \"unchecked\"\n    })(React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 4,\n      lg: 3,\n      className: \"filter-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), \"Apply Filter\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments,\n  userDetails: state.myProfile,\n  appointmentFilter: state.appointmentFilter\n});\n\nconst FilterAppointmentsApp = connect(mapStateToProps, {\n  getUserAppointments,\n  filterAppointments\n})(FilterAppointments);\nconst FilterAppointmentsForm = Form.create({\n  name: \"AppointmentsFilterForm\"\n})(FilterAppointmentsApp);\nexport default FilterAppointmentsForm;","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/filterappointments.js"],"names":["React","Fragment","connect","DatePicker","Form","Row","Col","Button","Icon","Drawer","Switch","Checkbox","getUserAppointments","filterAppointments","config","moment","DATE_FORMAT","isMobile","YEAR_MONTH_FORMAT","getUserDetails","store","MonthPicker","RangePicker","WeekPicker","FilterUI","Component","constructor","props","showDrawer","setState","isFilterDrawerVisible","onClose","state","render","marginBottom","children","FilterAppointments","handleFilter","e","preventDefault","form","validateFields","err","values","start_date","format","end_date","team_appointments","getState","userDetails","Date","daysInMonth","flag_team_appointments","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","checkboxLayout","rules","required","message","initialValue","mapStateToProps","userAppointments","myProfile","appointmentFilter","FilterAppointmentsApp","FilterAppointmentsForm","create","name"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  DatePicker,\n  Form,\n  Row,\n  Col,\n  Button,\n  Icon,\n  Drawer,\n  Switch,\n  Checkbox\n} from \"antd\";\nimport { getUserAppointments } from \"../../actions/appointment/getuserappointments\";\nimport { filterAppointments } from \"../../actions/appointment/filterAppointments\";\nimport { config } from \"@fullcalendar/core\";\nimport moment from \"moment\";\nimport { DATE_FORMAT, isMobile, YEAR_MONTH_FORMAT } from \"../../actions/types\";\nimport { getUserDetails } from \"../../actions/accounts/myprofilemanagement/getprofile\";\nimport {store} from \"../../index.js\"\n\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nexport class FilterUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFilterDrawerVisible: false\n    };\n  }\n  showDrawer = () => {\n    this.setState({ isFilterDrawerVisible: true });\n  };\n\n  onClose = () => {\n    this.setState({ isFilterDrawerVisible: false });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {isMobile ? (\n          <Fragment>\n            <Row className=\"align-right\">\n              <Col>\n                {\" \"}\n                <Button\n                  type=\"primary\"\n                  onClick={this.showDrawer}\n                  style={{ marginBottom: \"15px\" }}\n                >\n                  <Icon type=\"filter\" />\n                  Show Filters\n                </Button>\n              </Col>\n            </Row>\n            <Row className=\"align-right\">\n              <Col>\n                <Drawer\n                  onClose={this.onClose}\n                  visible={this.state.isFilterDrawerVisible}\n                >\n                  {this.props.children}\n                </Drawer>\n              </Col>\n            </Row>\n          </Fragment>\n        ) : (\n          this.props.children\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass FilterAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userDetails: this.props.userDetails,\n      start_date: moment(new Date()).format(DATE_FORMAT),\n      end_date:\n        moment().format(YEAR_MONTH_FORMAT) + \"-\" + moment().daysInMonth(),\n      flag_team_appointments: false\n    }\n    // Set default filters\n    // this.props.filterAppointments(\n    //   this.state.start_date, \n    //   this.state.end_date,\n    //   this.state.flag_team_appointments,\n    //   getUserDetails(store.getState),\n    // );\n\n    this.props.getUserAppointments(\n      this.state.start_date, \n      this.state.end_date,\n      this.state.flag_team_appointments,\n      getUserDetails(store.getState))\n  }\n\n  handleFilter = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.getUserAppointments(\n          moment(values.start_date).format(DATE_FORMAT),\n          moment(values.end_date).format(DATE_FORMAT),\n          values.team_appointments,\n          getUserDetails(store.getState),\n        );\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 }\n    };\n    const checkboxLayout = {\n      labelCol: { span: 20 },\n      wrapperCol: { span: 4 }\n    };\n\n    return (\n      <Fragment>\n        <Form\n          layout=\"inline\"\n          className=\"filterappoinments-form\"\n          style={{ marginBottom: \"15px\" }}\n          onSubmit={this.handleFilter}>\n          <Row type=\"flex\">\n            <Col xs={24} sm={24} md={4} lg={5} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout} label=\"From\" htmlFor=\"start_date\">\n                {getFieldDecorator(\"start_date\", {\n                  rules: [{ required: false, message: \"Please select time!\" }],\n                  initialValue: moment(this.state.start_date, DATE_FORMAT)\n                  // initialValue: moment(this.props.start_date, DATE_FORMAT)\n                })(<DatePicker />)}\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={4} lg={5} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout} label=\"To\" htmlFor=\"end_date\">\n                {getFieldDecorator(\"end_date\", {\n                  rules: [{ required: false, message: \"Please select time!\" }],\n                  initialValue:  moment(this.state.end_date, DATE_FORMAT)\n                  // initialValue: moment(this.props.end_date, DATE_FORMAT)\n                })(<DatePicker />)}\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={4} lg={7} className=\"filter-form-item\">\n              <Form.Item {...checkboxLayout} label=\"Show Team's appointments\" >\n                {getFieldDecorator(\"team_appointments\", {\n                  // valuePropName: \"unchecked\"\n                })(\n                  <Switch/>\n                )}\n              </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={4} lg={3} className=\"filter-form-item\">\n              <Form.Item {...formItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  <Icon type=\"filter\" />\n                  Apply Filter\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userAppointments: state.userAppointments,\n  userDetails: state.myProfile,\n  appointmentFilter: state.appointmentFilter\n});\nconst FilterAppointmentsApp = connect(\n  mapStateToProps,\n  { getUserAppointments, filterAppointments }\n)(FilterAppointments);\nconst FilterAppointmentsForm = Form.create({ name: \"AppointmentsFilterForm\" })(\n  FilterAppointmentsApp\n);\nexport default FilterAppointmentsForm;\n"]},"metadata":{},"sourceType":"module"}