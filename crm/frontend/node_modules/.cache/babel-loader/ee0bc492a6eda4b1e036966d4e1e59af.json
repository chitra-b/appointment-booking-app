{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/calendar.js\";\nimport React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n// must manually import the stylesheets for each plugin\n\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { Row, Col } from \"antd\";\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: \"Event Now\",\n        start: new Date()\n      }]\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n        this.setState({\n          // add new event data\n          calendarEvents: this.state.calendarEvents.concat({\n            // creates a new array\n            title: \"New Event\",\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Row, {\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      dateClick: this.handleDateClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/calendar.js"],"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Row","Col","DemoApp","Component","calendarComponentRef","createRef","state","calendarWeekends","calendarEvents","title","start","Date","toggleWeekends","setState","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","window","confirm","dateStr","concat","date","allDay","render","left","center","right"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA2D;AAG3D;;AACA,OAAO,6BAAP;AACA,OAAO,gCAAP;AACA,OAAO,iCAAP;AACA,SACIC,GADJ,EAEIC,GAFJ,QAGS,MAHT;AAIA,eAAe,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACnDC,oBADmD,GAC5BT,KAAK,CAACU,SAAN,EAD4B;AAAA,SAGnDC,KAHmD,GAG3C;AACNC,MAAAA,gBAAgB,EAAE,IADZ;AAENC,MAAAA,cAAc,EAAE,CACd;AACA;AAAEC,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE,IAAIC,IAAJ;AAA7B,OAFc;AAFV,KAH2C;;AAAA,SAkCnDC,cAlCmD,GAkClC,MAAM;AACrB,WAAKC,QAAL,CAAc;AACZ;AACAN,QAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAFlB,OAAd;AAID,KAvCkD;;AAAA,SAyCnDO,QAzCmD,GAyCxC,MAAM;AACf,UAAIC,WAAW,GAAG,KAAKX,oBAAL,CAA0BY,OAA1B,CAAkCC,MAAlC,EAAlB;AACAF,MAAAA,WAAW,CAACG,QAAZ,CAAqB,YAArB,EAFe,CAEqB;AACrC,KA5CkD;;AAAA,SA8CnDC,eA9CmD,GA8CjCC,GAAG,IAAI;AACvB,UAAIC,MAAM,CAACC,OAAP,CAAe,uCAAuCF,GAAG,CAACG,OAA3C,GAAqD,IAApE,CAAJ,EAA+E;AAC7E,aAAKV,QAAL,CAAc;AACZ;AACAL,UAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAAX,CAA0BgB,MAA1B,CAAiC;AAC/C;AACAf,YAAAA,KAAK,EAAE,WAFwC;AAG/CC,YAAAA,KAAK,EAAEU,GAAG,CAACK,IAHoC;AAI/CC,YAAAA,MAAM,EAAEN,GAAG,CAACM;AAJmC,WAAjC;AAFJ,SAAd;AASD;AACF,KA1DkD;AAAA;;AAWnDC,EAAAA,MAAM,GAAG;AACP,WACI,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,iBADA;AAENC,QAAAA,MAAM,EAAE,OAFF;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAFV;AAOE,MAAA,OAAO,EAAE,CAACjC,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CAPX;AAQE,MAAA,GAAG,EAAE,KAAKK,oBARZ;AASE,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC,gBATvB;AAUE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,cAVrB;AAWE,MAAA,SAAS,EAAE,KAAKW,eAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,CADJ;AAoBD;;AAhCkD","sourcesContent":["import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\n\n// must manually import the stylesheets for each plugin\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport {\n    Row,\n    Col\n  } from \"antd\";\nexport default class DemoApp extends React.Component {\n  calendarComponentRef = React.createRef();\n\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [\n      // initial event data\n      { title: \"Event Now\", start: new Date() }\n    ]\n  };\n\n  render() {\n    return (\n        <Row justify=\"center\">\n        <Col xs={24} sm={24} md={24} lg={24} >\n       \n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            events={this.state.calendarEvents}\n            dateClick={this.handleDateClick}\n          />\n        </Col>\n      </Row>\n    );\n  }\n\n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    });\n  };\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n  };\n\n  handleDateClick = arg => {\n    if (window.confirm(\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n      this.setState({\n        // add new event data\n        calendarEvents: this.state.calendarEvents.concat({\n          // creates a new array\n          title: \"New Event\",\n          start: arg.date,\n          allDay: arg.allDay\n        })\n      });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}