{"ast":null,"code":"var _jsxFileName = \"/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/editappointment.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAppointmentDetails } from \"../../actions/appointment/getappointmentdetails\";\nimport { updateappointment } from \"../../actions/appointment/updateappointment\";\nimport { reset } from \"../../actions/common\";\nimport { SearchSelectUsers } from \"../common/search-select-users\";\nimport { RESET_UPDATE_APPOINTMENT_STATE } from \"../../actions/types\";\nimport { Select, Button, Alert, Empty } from \"antd\";\nconst Option = Select.Option;\n\nclass EditAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        appointmentId: this.props.id\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let data = {\n        \"cancelled\": true,\n        \"cancellation_reason\": this.state.cancellation_reason\n      };\n      this.props.updateappointment(this.state.appointmentId, data);\n    };\n\n    this.props.reset(RESET_UPDATE_APPOINTMENT_STATE);\n    this.state = {\n      appointmentId: null\n    };\n  }\n\n  render() {\n    if (!this.state.appointmentId) {\n      return React.createElement(Empty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.updateAppointment.isError ? React.createElement(Alert, {\n      message: \"Error\",\n      description: this.props.updateAppointment.isError,\n      type: \"error\",\n      closable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"apptedit-form-item\",\n      htmlFor: \"cancellation_reason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Select User\")), React.createElement(\"div\", {\n      className: \"apptedit-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(SearchSelectUsers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"apptedit-form-item\",\n      htmlFor: \"cancellation_reason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Select Lead Status\")), React.createElement(Select, {\n      value: this.props.appointmentDetails.appointment.lead_status,\n      className: \"apptedit-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Pending\"), React.createElement(Option, {\n      value: \"Closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Closed\"), React.createElement(Option, {\n      value: \"Not Interested\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Not Interested\")), this.props.updateAppointment.isLoading ? React.createElement(Button, {\n      type: \"primary\",\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Button, {\n      type: \"primary\",\n      className: \"cancel-form-item\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  appointmentDetails: state.appointmentDetails,\n  updateAppointment: state.updateAppointment,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getAppointmentDetails,\n  updateappointment,\n  reset\n})(EditAppointment);","map":{"version":3,"sources":["/Users/chitrabalasubramani/dev/crm/crm/frontend/src/components/appointment/editappointment.js"],"names":["React","Fragment","connect","getAppointmentDetails","updateappointment","reset","SearchSelectUsers","RESET_UPDATE_APPOINTMENT_STATE","Select","Button","Alert","Empty","Option","EditAppointment","Component","constructor","props","componentDidMount","setState","appointmentId","id","handleSubmit","e","preventDefault","data","state","cancellation_reason","render","updateAppointment","isError","appointmentDetails","appointment","lead_status","isLoading","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,iDAAtC;AACA,SAASC,iBAAT,QAAkC,6CAAlC;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SACIC,8BADJ,QAEO,qBAFP;AAGA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,KAJJ,QAKO,MALP;MAMQC,M,GAAWJ,M,CAAXI,M;;AAER,MAAMC,eAAN,SAA8Bb,KAAK,CAACc,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,iBALmB,GAKC,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI;AAA5B,OAAd;AACH,KAPkB;;AAAA,SAQnBC,YARmB,GAQJC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAG;AAAE,qBAAa,IAAf;AAAqB,+BAAuB,KAAKC,KAAL,CAAWC;AAAvD,OAAX;AACA,WAAKV,KAAL,CAAWZ,iBAAX,CAA6B,KAAKqB,KAAL,CAAWN,aAAxC,EAAuDK,IAAvD;AACH,KAZkB;;AAEf,SAAKR,KAAL,CAAWX,KAAX,CAAiBE,8BAAjB;AACA,SAAKkB,KAAL,GAAa;AAAEN,MAAAA,aAAa,EAAE;AAAjB,KAAb;AACH;;AAUDQ,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKF,KAAL,CAAWN,aAAhB,EAA+B;AAC3B,aAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWY,iBAAX,CAA6BC,OAA7B,GAAuC,oBAAC,KAAD;AACpC,MAAA,OAAO,EAAC,OAD4B;AAEpC,MAAA,WAAW,EAAE,KAAKb,KAAL,CAAWY,iBAAX,CAA6BC,OAFN;AAGpC,MAAA,IAAI,EAAC,OAH+B;AAIpC,MAAA,QAAQ,MAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,GAKI,IANT,EAOI;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,OAAO,EAAC,qBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,EAGI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,CAHJ,EAII;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,OAAO,EAAC,qBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAJJ,EAMI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWc,kBAAX,CAA8BC,WAA9B,CAA0CC,WAAzD;AAAsE,MAAA,SAAS,EAAC,oBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CANJ,EAWK,KAAKhB,KAAL,CAAWY,iBAAX,CAA6BK,SAA7B,GAAyC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAzC,GACK,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,SAAS,EAAC,kBAAjC;AAAoD,MAAA,QAAQ,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZV,CAPJ,CADJ;AAwBH;;AA3CyC;;AA6C9C,MAAMC,eAAe,GAAGT,KAAK,KAAK;AAC9BK,EAAAA,kBAAkB,EAAEL,KAAK,CAACK,kBADI;AAE9BF,EAAAA,iBAAiB,EAAEH,KAAK,CAACG,iBAFK;AAG9BO,EAAAA,IAAI,EAAEV,KAAK,CAACU;AAHkB,CAAL,CAA7B;;AAKA,eAAejC,OAAO,CAACgC,eAAD,EAAkB;AAAE/B,EAAAA,qBAAF;AAAyBC,EAAAA,iBAAzB;AAA4CC,EAAAA;AAA5C,CAAlB,CAAP,CAA8EQ,eAA9E,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAppointmentDetails } from \"../../actions/appointment/getappointmentdetails\";\nimport { updateappointment } from \"../../actions/appointment/updateappointment\"\nimport { reset } from \"../../actions/common\";\nimport { SearchSelectUsers } from \"../common/search-select-users\";\nimport {\n    RESET_UPDATE_APPOINTMENT_STATE\n} from \"../../actions/types\";\nimport {\n    Select,\n    Button,\n    Alert,\n    Empty\n} from \"antd\";\nconst { Option } = Select;\n\nclass EditAppointment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.reset(RESET_UPDATE_APPOINTMENT_STATE);\n        this.state = { appointmentId: null }\n    }\n    componentDidMount = () => {\n        this.setState({ appointmentId: this.props.id });\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        let data = { \"cancelled\": true, \"cancellation_reason\": this.state.cancellation_reason }\n        this.props.updateappointment(this.state.appointmentId, data);\n    };\n\n    render() {\n        if (!this.state.appointmentId) {\n            return <Empty />;\n        }\n        return (\n            <div className=\"content-section\">\n                {this.props.updateAppointment.isError ? <Alert\n                    message=\"Error\"\n                    description={this.props.updateAppointment.isError}\n                    type=\"error\"\n                    closable\n                /> : null}\n                <form onSubmit={this.handleSubmit}>\n                    <label className=\"apptedit-form-item\" htmlFor=\"cancellation_reason\">\n                        <b>Select User</b></label>\n                    <div className=\"apptedit-form-item\"><SearchSelectUsers /></div>\n                    <label className=\"apptedit-form-item\" htmlFor=\"cancellation_reason\">\n                        <b>Select Lead Status</b></label>\n                    <Select value={this.props.appointmentDetails.appointment.lead_status} className=\"apptedit-form-item\">\n                        <Option value=\"Pending\">Pending</Option>\n                        <Option value=\"Closed\">Closed</Option>\n                        <Option value=\"Not Interested\">Not Interested</Option>\n                    </Select>\n                    {this.props.updateAppointment.isLoading ? <Button type=\"primary\" loading>Loading</Button>\n                        : <Button type=\"primary\" className=\"cancel-form-item\" htmlType=\"submit\" >Submit</Button>}\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    appointmentDetails: state.appointmentDetails,\n    updateAppointment: state.updateAppointment,\n    auth: state.auth\n});\nexport default connect(mapStateToProps, { getAppointmentDetails, updateappointment, reset })(EditAppointment)"]},"metadata":{},"sourceType":"module"}